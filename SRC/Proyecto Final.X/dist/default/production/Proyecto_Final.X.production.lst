

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 25 15:31:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.30
    48                           ; Generated 15/09/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F15244 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  0119                     	;# 
   113  011A                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011C                     	;# 
   117  011D                     	;# 
   118  011E                     	;# 
   119  011F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  018E                     	;# 
   123  018F                     	;# 
   124  0190                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  020C                     	;# 
   128  020D                     	;# 
   129  020E                     	;# 
   130  020E                     	;# 
   131  020F                     	;# 
   132  020F                     	;# 
   133  0210                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0211                     	;# 
   137  028C                     	;# 
   138  028C                     	;# 
   139  028D                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  028F                     	;# 
   143  0290                     	;# 
   144  0291                     	;# 
   145  030C                     	;# 
   146  030C                     	;# 
   147  030D                     	;# 
   148  030E                     	;# 
   149  030F                     	;# 
   150  0310                     	;# 
   151  0310                     	;# 
   152  0311                     	;# 
   153  0312                     	;# 
   154  0313                     	;# 
   155  0314                     	;# 
   156  0314                     	;# 
   157  0315                     	;# 
   158  0316                     	;# 
   159  0318                     	;# 
   160  0318                     	;# 
   161  0319                     	;# 
   162  031A                     	;# 
   163  059C                     	;# 
   164  059C                     	;# 
   165  059D                     	;# 
   166  059D                     	;# 
   167  059E                     	;# 
   168  059F                     	;# 
   169  070C                     	;# 
   170  070D                     	;# 
   171  070E                     	;# 
   172  0716                     	;# 
   173  0717                     	;# 
   174  0718                     	;# 
   175  080C                     	;# 
   176  0811                     	;# 
   177  0813                     	;# 
   178  0814                     	;# 
   179  081A                     	;# 
   180  081A                     	;# 
   181  081B                     	;# 
   182  081C                     	;# 
   183  081C                     	;# 
   184  081D                     	;# 
   185  081E                     	;# 
   186  081F                     	;# 
   187  088E                     	;# 
   188  0890                     	;# 
   189  0891                     	;# 
   190  0892                     	;# 
   191  0893                     	;# 
   192  090C                     	;# 
   193  1E8F                     	;# 
   194  1E90                     	;# 
   195  1E91                     	;# 
   196  1E92                     	;# 
   197  1E93                     	;# 
   198  1E9C                     	;# 
   199  1EA1                     	;# 
   200  1EA2                     	;# 
   201  1EC3                     	;# 
   202  1EC5                     	;# 
   203  1EC6                     	;# 
   204  1EC7                     	;# 
   205  1ECB                     	;# 
   206  1ECB                     	;# 
   207  1ECB                     	;# 
   208  1ECC                     	;# 
   209  1ECC                     	;# 
   210  1ECC                     	;# 
   211  1F10                     	;# 
   212  1F11                     	;# 
   213  1F12                     	;# 
   214  1F14                     	;# 
   215  1F15                     	;# 
   216  1F1C                     	;# 
   217  1F1D                     	;# 
   218  1F1E                     	;# 
   219  1F1F                     	;# 
   220  1F20                     	;# 
   221  1F21                     	;# 
   222  1F22                     	;# 
   223  1F23                     	;# 
   224  1F24                     	;# 
   225  1F25                     	;# 
   226  1F26                     	;# 
   227  1F27                     	;# 
   228  1F38                     	;# 
   229  1F39                     	;# 
   230  1F3A                     	;# 
   231  1F3B                     	;# 
   232  1F3C                     	;# 
   233  1F3D                     	;# 
   234  1F3E                     	;# 
   235  1F3F                     	;# 
   236  1F43                     	;# 
   237  1F44                     	;# 
   238  1F45                     	;# 
   239  1F46                     	;# 
   240  1F47                     	;# 
   241  1F48                     	;# 
   242  1F49                     	;# 
   243  1F4A                     	;# 
   244  1F4E                     	;# 
   245  1F4F                     	;# 
   246  1F50                     	;# 
   247  1F51                     	;# 
   248  1F52                     	;# 
   249  1F53                     	;# 
   250  1F54                     	;# 
   251  1F55                     	;# 
   252  1FE4                     	;# 
   253  1FE5                     	;# 
   254  1FE6                     	;# 
   255  1FE7                     	;# 
   256  1FE8                     	;# 
   257  1FE8                     	;# 
   258  1FE9                     	;# 
   259  1FEA                     	;# 
   260  1FEB                     	;# 
   261  1FED                     	;# 
   262  1FEE                     	;# 
   263  1FEF                     	;# 
   264  000C                     _PORTAbits	set	12
   265  0018                     _LATAbits	set	24
   266  0014                     _TRISC	set	20
   267  0013                     _TRISB	set	19
   268  0012                     _TRISA	set	18
   269  001A                     _LATC	set	26
   270  0019                     _LATB	set	25
   271  0018                     _LATA	set	24
   272  000D                     _PORTBbits	set	13
   273  000E                     _PORTCbits	set	14
   274  0013                     _TRISBbits	set	19
   275  0014                     _TRISCbits	set	20
   276  1F52                     _INLVLC	set	8018
   277  1F47                     _INLVLB	set	8007
   278  1F3C                     _INLVLA	set	7996
   279  1F51                     _SLRCONC	set	8017
   280  1F46                     _SLRCONB	set	8006
   281  1F3B                     _SLRCONA	set	7995
   282  1F50                     _ODCONC	set	8016
   283  1F45                     _ODCONB	set	8005
   284  1F3A                     _ODCONA	set	7994
   285  1F4F                     _WPUC	set	8015
   286  1F38                     _ANSELA	set	7992
   287  1F43                     _ANSELB	set	8003
   288  1F4E                     _ANSELC	set	8014
   289                           
   290                           	psect	stringtext1
   291  0800                     __pstringtext1:
   292  0800                     STR_1:
   293  0800  344C               	retlw	76	;'L'
   294  0801  3469               	retlw	105	;'i'
   295  0802  346D               	retlw	109	;'m'
   296  0803  346F               	retlw	111	;'o'
   297  0804  346E               	retlw	110	;'n'
   298  0805  3465               	retlw	101	;'e'
   299  0806  3473               	retlw	115	;'s'
   300  0807  3420               	retlw	32	;' '
   301  0808  3425               	retlw	37	;'%'
   302  0809  3464               	retlw	100	;'d'
   303  080A  3400               	retlw	0
   304                           
   305                           	psect	stringtext2
   306  080B                     __pstringtext2:
   307  080B                     STR_12:
   308  080B  344C               	retlw	76	;'L'
   309  080C  3469               	retlw	105	;'i'
   310  080D  346D               	retlw	109	;'m'
   311  080E  346F               	retlw	111	;'o'
   312  080F  346E               	retlw	110	;'n'
   313  0810  3465               	retlw	101	;'e'
   314  0811  3473               	retlw	115	;'s'
   315  0812  3420               	retlw	32	;' '
   316  0813  3430               	retlw	48	;'0'
   317  0814  3400               	retlw	0
   318                           
   319                           	psect	stringtext3
   320  0815                     __pstringtext3:
   321  0815                     STR_11:
   322  0815  3450               	retlw	80	;'P'
   323  0816  3461               	retlw	97	;'a'
   324  0817  3463               	retlw	99	;'c'
   325  0818  3461               	retlw	97	;'a'
   326  0819  3473               	retlw	115	;'s'
   327  081A  3420               	retlw	32	;' '
   328  081B  3431               	retlw	49	;'1'
   329  081C  3430               	retlw	48	;'0'
   330  081D  3400               	retlw	0
   331                           
   332                           	psect	stringtext4
   333  081E                     __pstringtext4:
   334  081E                     STR_13:
   335  081E  3470               	retlw	112	;'p'
   336  081F  3461               	retlw	97	;'a'
   337  0820  3463               	retlw	99	;'c'
   338  0821  3461               	retlw	97	;'a'
   339  0822  3473               	retlw	115	;'s'
   340  0823  3420               	retlw	32	;' '
   341  0824  3430               	retlw	48	;'0'
   342  0825  3400               	retlw	0
   343                           
   344                           	psect	stringtext5
   345  0826                     __pstringtext5:
   346  0826                     STR_2:
   347  0826  3450               	retlw	80	;'P'
   348  0827  3461               	retlw	97	;'a'
   349  0828  3463               	retlw	99	;'c'
   350  0829  3461               	retlw	97	;'a'
   351  082A  3473               	retlw	115	;'s'
   352  082B  3420               	retlw	32	;' '
   353  082C  3431               	retlw	49	;'1'
   354  082D  3400               	retlw	0
   355                           
   356                           	psect	stringtext6
   357  082E                     __pstringtext6:
   358  082E                     STR_3:
   359  082E  3450               	retlw	80	;'P'
   360  082F  3461               	retlw	97	;'a'
   361  0830  3463               	retlw	99	;'c'
   362  0831  3461               	retlw	97	;'a'
   363  0832  3473               	retlw	115	;'s'
   364  0833  3420               	retlw	32	;' '
   365  0834  3432               	retlw	50	;'2'
   366  0835  3400               	retlw	0
   367                           
   368                           	psect	stringtext7
   369  0836                     __pstringtext7:
   370  0836                     STR_4:
   371  0836  3450               	retlw	80	;'P'
   372  0837  3461               	retlw	97	;'a'
   373  0838  3463               	retlw	99	;'c'
   374  0839  3461               	retlw	97	;'a'
   375  083A  3473               	retlw	115	;'s'
   376  083B  3420               	retlw	32	;' '
   377  083C  3433               	retlw	51	;'3'
   378  083D  3400               	retlw	0
   379                           
   380                           	psect	stringtext8
   381  083E                     __pstringtext8:
   382  083E                     STR_5:
   383  083E  3450               	retlw	80	;'P'
   384  083F  3461               	retlw	97	;'a'
   385  0840  3463               	retlw	99	;'c'
   386  0841  3461               	retlw	97	;'a'
   387  0842  3473               	retlw	115	;'s'
   388  0843  3420               	retlw	32	;' '
   389  0844  3434               	retlw	52	;'4'
   390  0845  3400               	retlw	0
   391                           
   392                           	psect	stringtext9
   393  0846                     __pstringtext9:
   394  0846                     STR_6:
   395  0846  3450               	retlw	80	;'P'
   396  0847  3461               	retlw	97	;'a'
   397  0848  3463               	retlw	99	;'c'
   398  0849  3461               	retlw	97	;'a'
   399  084A  3473               	retlw	115	;'s'
   400  084B  3420               	retlw	32	;' '
   401  084C  3435               	retlw	53	;'5'
   402  084D  3400               	retlw	0
   403                           
   404                           	psect	stringtext10
   405  084E                     __pstringtext10:
   406  084E                     STR_7:
   407  084E  3450               	retlw	80	;'P'
   408  084F  3461               	retlw	97	;'a'
   409  0850  3463               	retlw	99	;'c'
   410  0851  3461               	retlw	97	;'a'
   411  0852  3473               	retlw	115	;'s'
   412  0853  3420               	retlw	32	;' '
   413  0854  3436               	retlw	54	;'6'
   414  0855  3400               	retlw	0
   415                           
   416                           	psect	stringtext11
   417  0856                     __pstringtext11:
   418  0856                     STR_8:
   419  0856  3450               	retlw	80	;'P'
   420  0857  3461               	retlw	97	;'a'
   421  0858  3463               	retlw	99	;'c'
   422  0859  3461               	retlw	97	;'a'
   423  085A  3473               	retlw	115	;'s'
   424  085B  3420               	retlw	32	;' '
   425  085C  3437               	retlw	55	;'7'
   426  085D  3400               	retlw	0
   427                           
   428                           	psect	stringtext12
   429  085E                     __pstringtext12:
   430  085E                     STR_9:
   431  085E  3450               	retlw	80	;'P'
   432  085F  3461               	retlw	97	;'a'
   433  0860  3463               	retlw	99	;'c'
   434  0861  3461               	retlw	97	;'a'
   435  0862  3473               	retlw	115	;'s'
   436  0863  3420               	retlw	32	;' '
   437  0864  3438               	retlw	56	;'8'
   438  0865  3400               	retlw	0
   439                           
   440                           	psect	stringtext13
   441  0866                     __pstringtext13:
   442  0866                     STR_10:
   443  0866  3450               	retlw	80	;'P'
   444  0867  3461               	retlw	97	;'a'
   445  0868  3463               	retlw	99	;'c'
   446  0869  3461               	retlw	97	;'a'
   447  086A  3473               	retlw	115	;'s'
   448  086B  3420               	retlw	32	;' '
   449  086C  3439               	retlw	57	;'9'
   450  086D  3400               	retlw	0
   451                           
   452                           	psect	stringtext14
   453  0000                     __pstringtext14:
   454                           
   455                           	psect	cinit
   456  07F0                     start_initialization:	
   457                           ; #config settings
   458                           
   459  07F0                     __initialization:
   460                           
   461                           ; Clear objects allocated to BANK0
   462  07F0  0140               	movlb	0	; select bank0
   463  07F1  01EC               	clrf	__pbssBANK0& (0+127)
   464  07F2  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   465  07F3  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   466  07F4  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   467                           
   468                           ; Clear objects allocated to BANK1
   469  07F5  30A0               	movlw	low __pbssBANK1
   470  07F6  0084               	movwf	4
   471  07F7  3000               	movlw	high __pbssBANK1
   472  07F8  0085               	movwf	5
   473  07F9  303E               	movlw	62
   474  07FA  318D  25EB  3187   	fcall	clear_ram0
   475  07FD                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  07FD                     __end_of__initialization:
   479  07FD  0140               	movlb	0
   480  07FE  3185  2DE6         	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK0
   483  006C                     __pbssBANK0:
   484  006C                     _flags:
   485  006C                     	ds	2
   486  006E                     _contador:
   487  006E                     	ds	2
   488                           
   489                           	psect	bssBANK1
   490  00A0                     __pbssBANK1:
   491  00A0                     _nout:
   492  00A0                     	ds	2
   493  00A2                     _width:
   494  00A2                     	ds	2
   495  00A4                     _prec:
   496  00A4                     	ds	2
   497  00A6                     _pulsador:
   498  00A6                     	ds	2
   499  00A8                     _paca:
   500  00A8                     	ds	2
   501  00AA                     _dbuf:
   502  00AA                     	ds	32
   503  00CA                     _CONT:
   504  00CA                     	ds	20
   505                           
   506                           	psect	clrtext
   507  0DEB                     clear_ram0:	
   508                           ;	Called with FSR0 containing the base address, and
   509                           ;	WREG with the size to clear
   510                           
   511  0DEB  0064               	clrwdt	;clear the watchdog before getting into this loop
   512  0DEC                     clrloop0:
   513  0DEC  0180               	clrf	0	;clear RAM location pointed to by FSR
   514  0DED  3101               	addfsr 0,1
   515  0DEE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   516  0DEF  2DEC               	goto	clrloop0	;have we reached the end yet?
   517  0DF0  3400               	retlw	0	;all done for this memory range, return
   518                           
   519                           	psect	cstackBANK1
   520  00DE                     __pcstackBANK1:
   521  00DE                     	ds	2
   522  00E0                     sprintf@ap:
   523                           
   524                           ; 1 bytes @ 0x2
   525  00E0                     	ds	1
   526  00E1                     sprintf@s:
   527                           
   528                           ; 1 bytes @ 0x3
   529  00E1                     	ds	1
   530  00E2                     sprintf@f:
   531                           
   532                           ; 5 bytes @ 0x4
   533  00E2                     	ds	5
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:
   537  0070                     ?_Lcd_Cmd:
   538  0070                     ??_Lcd_Cmd:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_Lcd_Chr_CP:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ??_Lcd_Chr_CP:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_putch:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_putch:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_Lcd_Init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_PIN_MANAGER_Initialize:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_PIN_MANAGER_Initialize:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_main:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??___aodiv:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??___aomod:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_fputc:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_strlen:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     putch@c:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     fputc@c:	
   581                           ; 1 bytes @ 0x0
   582                           
   583                           
   584                           ; 2 bytes @ 0x0
   585  0070                     	ds	1
   586  0071                     ___aodiv@counter:
   587  0071                     ___aomod@counter:	
   588                           ; 1 bytes @ 0x1
   589                           
   590                           
   591                           ; 1 bytes @ 0x1
   592  0071                     	ds	1
   593  0072                     ??_strlen:
   594  0072                     Lcd_Chr_CP@data:	
   595                           ; 1 bytes @ 0x2
   596                           
   597  0072                     Lcd_Cmd@data:	
   598                           ; 1 bytes @ 0x2
   599                           
   600  0072                     ___aodiv@sign:	
   601                           ; 1 bytes @ 0x2
   602                           
   603  0072                     ___aomod@sign:	
   604                           ; 1 bytes @ 0x2
   605                           
   606  0072                     fputc@fp:	
   607                           ; 1 bytes @ 0x2
   608                           
   609                           
   610                           ; 1 bytes @ 0x2
   611  0072                     	ds	1
   612  0073                     ??_fputc:
   613  0073                     ??_Lcd_Init:	
   614                           ; 1 bytes @ 0x3
   615                           
   616  0073                     ?_Lcd_Out:	
   617                           ; 1 bytes @ 0x3
   618                           
   619  0073                     ?_Lcd_Out2:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0073                     ?_abs:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0073                     Lcd_Out@x:	
   626                           ; 2 bytes @ 0x3
   627                           
   628  0073                     Lcd_Out2@x:	
   629                           ; 1 bytes @ 0x3
   630                           
   631  0073                     strlen@a:	
   632                           ; 1 bytes @ 0x3
   633                           
   634  0073                     abs@a:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     ___aodiv@quotient:	
   638                           ; 2 bytes @ 0x3
   639                           
   640                           
   641                           ; 8 bytes @ 0x3
   642  0073                     	ds	1
   643  0074                     Lcd_Init@data:
   644  0074                     Lcd_Out2@buffer:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     strlen@s:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     Lcd_Out@buffer:	
   651                           ; 1 bytes @ 0x4
   652                           
   653                           
   654                           ; 2 bytes @ 0x4
   655  0074                     	ds	1
   656  0075                     ??_abs:
   657  0075                     ??_Lcd_Out2:	
   658                           ; 1 bytes @ 0x5
   659                           
   660                           
   661                           ; 1 bytes @ 0x5
   662  0075                     	ds	1
   663  0076                     ??_Lcd_Out:
   664                           
   665                           ; 1 bytes @ 0x6
   666  0076                     	ds	1
   667  0077                     Lcd_Out2@y:
   668                           
   669                           ; 1 bytes @ 0x7
   670  0077                     	ds	1
   671  0078                     ?_fputs:
   672  0078                     Lcd_Out@y:	
   673                           ; 2 bytes @ 0x8
   674                           
   675  0078                     Lcd_Out2@data:	
   676                           ; 1 bytes @ 0x8
   677                           
   678  0078                     fputs@fp:	
   679                           ; 1 bytes @ 0x8
   680                           
   681                           
   682                           ; 1 bytes @ 0x8
   683  0078                     	ds	1
   684  0079                     ??_fputs:
   685  0079                     Lcd_Out@data:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 1 bytes @ 0x9
   690  0079                     	ds	3
   691  007C                     ??_pad:
   692                           
   693                           ; 1 bytes @ 0xC
   694  007C                     	ds	1
   695  007D                     ??_sprintf:
   696                           
   697                           ; 1 bytes @ 0xD
   698  007D                     	ds	1
   699                           
   700                           	psect	cstackBANK0
   701  0020                     __pcstackBANK0:
   702  0020                     ?___aodiv:
   703  0020                     ?___aomod:	
   704                           ; 8 bytes @ 0x0
   705                           
   706  0020                     fputs@c:	
   707                           ; 8 bytes @ 0x0
   708                           
   709  0020                     ___aodiv@divisor:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0020                     ___aomod@divisor:	
   713                           ; 8 bytes @ 0x0
   714                           
   715                           
   716                           ; 8 bytes @ 0x0
   717  0020                     	ds	1
   718  0021                     fputs@i:
   719                           
   720                           ; 2 bytes @ 0x1
   721  0021                     	ds	2
   722  0023                     fputs@s:
   723                           
   724                           ; 1 bytes @ 0x3
   725  0023                     	ds	1
   726  0024                     ?_pad:
   727  0024                     pad@buf:	
   728                           ; 2 bytes @ 0x4
   729                           
   730                           
   731                           ; 1 bytes @ 0x4
   732  0024                     	ds	1
   733  0025                     pad@p:
   734                           
   735                           ; 2 bytes @ 0x5
   736  0025                     	ds	2
   737  0027                     pad@i:
   738                           
   739                           ; 2 bytes @ 0x7
   740  0027                     	ds	1
   741  0028                     ___aodiv@dividend:
   742  0028                     ___aomod@dividend:	
   743                           ; 8 bytes @ 0x8
   744                           
   745                           
   746                           ; 8 bytes @ 0x8
   747  0028                     	ds	1
   748  0029                     pad@w:
   749                           
   750                           ; 2 bytes @ 0x9
   751  0029                     	ds	2
   752  002B                     pad@fp:
   753                           
   754                           ; 1 bytes @ 0xB
   755  002B                     	ds	5
   756  0030                     ?_dtoa:
   757  0030                     dtoa@d:	
   758                           ; 2 bytes @ 0x10
   759                           
   760                           
   761                           ; 8 bytes @ 0x10
   762  0030                     	ds	8
   763  0038                     ??_dtoa:
   764                           
   765                           ; 1 bytes @ 0x18
   766  0038                     	ds	3
   767  003B                     _dtoa$635:
   768                           
   769                           ; 2 bytes @ 0x1B
   770  003B                     	ds	2
   771  003D                     dtoa@fp:
   772                           
   773                           ; 1 bytes @ 0x1D
   774  003D                     	ds	1
   775  003E                     dtoa@p:
   776                           
   777                           ; 2 bytes @ 0x1E
   778  003E                     	ds	2
   779  0040                     dtoa@w:
   780                           
   781                           ; 2 bytes @ 0x20
   782  0040                     	ds	2
   783  0042                     dtoa@s:
   784                           
   785                           ; 2 bytes @ 0x22
   786  0042                     	ds	2
   787  0044                     dtoa@n:
   788                           
   789                           ; 8 bytes @ 0x24
   790  0044                     	ds	8
   791  004C                     dtoa@i:
   792                           
   793                           ; 2 bytes @ 0x2C
   794  004C                     	ds	2
   795  004E                     ?_vfpfcnvrt:
   796  004E                     vfpfcnvrt@fmt:	
   797                           ; 2 bytes @ 0x2E
   798                           
   799                           
   800                           ; 1 bytes @ 0x2E
   801  004E                     	ds	1
   802  004F                     vfpfcnvrt@ap:
   803                           
   804                           ; 1 bytes @ 0x2F
   805  004F                     	ds	1
   806  0050                     ??_vfpfcnvrt:
   807                           
   808                           ; 1 bytes @ 0x30
   809  0050                     	ds	5
   810  0055                     vfpfcnvrt@ll:
   811                           
   812                           ; 8 bytes @ 0x35
   813  0055                     	ds	8
   814  005D                     vfpfcnvrt@fp:
   815                           
   816                           ; 1 bytes @ 0x3D
   817  005D                     	ds	1
   818  005E                     ?_vfprintf:
   819  005E                     vfprintf@fmt:	
   820                           ; 2 bytes @ 0x3E
   821                           
   822                           
   823                           ; 2 bytes @ 0x3E
   824  005E                     	ds	2
   825  0060                     vfprintf@ap:
   826                           
   827                           ; 1 bytes @ 0x40
   828  0060                     	ds	1
   829  0061                     ??_vfprintf:
   830                           
   831                           ; 1 bytes @ 0x41
   832  0061                     	ds	2
   833  0063                     vfprintf@fp:
   834                           
   835                           ; 1 bytes @ 0x43
   836  0063                     	ds	1
   837  0064                     vfprintf@cfmt:
   838                           
   839                           ; 2 bytes @ 0x44
   840  0064                     	ds	2
   841  0066                     ?_sprintf:
   842  0066                     sprintf@fmt:	
   843                           ; 2 bytes @ 0x46
   844                           
   845                           
   846                           ; 2 bytes @ 0x46
   847  0066                     	ds	4
   848  006A                     ??_main:
   849                           
   850                           ; 1 bytes @ 0x4A
   851  006A                     	ds	2
   852                           
   853                           	psect	maintext
   854  05E6                     __pmaintext:	
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 107 in file "Proyecto.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : B3F/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   874 ;;      Params:         0       0       0       0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0       0
   876 ;;      Temps:          0       2       0       0       0       0       0       0
   877 ;;      Totals:         0       2       0       0       0       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels required when called:    8
   880 ;; This function calls:
   881 ;;		_Lcd_Cmd
   882 ;;		_Lcd_Init
   883 ;;		_Lcd_Out
   884 ;;		_Lcd_Out2
   885 ;;		_PIN_MANAGER_Initialize
   886 ;;		_sprintf
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _main
   894  05E6                     _main:
   895  05E6                     l1727:	
   896                           ;incstack = 0
   897                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   898                           
   899                           
   900                           ;Proyecto.c: 109:     PIN_MANAGER_Initialize();
   901  05E6  318E  2624  3185   	fcall	_PIN_MANAGER_Initialize
   902  05E9                     l1729:
   903                           
   904                           ;Proyecto.c: 110:     LATAbits.LATA2=1;
   905  05E9  0140               	movlb	0	; select bank0
   906  05EA  1518               	bsf	24,2	;volatile
   907                           
   908                           ;Proyecto.c: 113:     Lcd_Init();
   909  05EB  318F  2774  3185   	fcall	_Lcd_Init
   910                           
   911                           ;Proyecto.c: 114:     Lcd_Cmd(12);
   912  05EE  300C               	movlw	12
   913  05EF  3180  208F  3185   	fcall	_Lcd_Cmd
   914  05F2                     l1731:
   915                           
   916                           ;Proyecto.c: 115:     _delay((unsigned long)((1000)*(1000000/4000.0)));
   917  05F2  3002               	movlw	2
   918  05F3  0140               	movlb	0	; select bank0
   919  05F4  00EB               	movwf	??_main+1
   920  05F5  3045               	movlw	69
   921  05F6  00EA               	movwf	??_main
   922  05F7  30A9               	movlw	169
   923  05F8                     u1657:
   924  05F8  0B89               	decfsz	9,f
   925  05F9  2DF8               	goto	u1657
   926  05FA  0BEA               	decfsz	??_main,f
   927  05FB  2DF8               	goto	u1657
   928  05FC  0BEB               	decfsz	??_main+1,f
   929  05FD  2DF8               	goto	u1657
   930  05FE  3200               	nop2
   931  05FF                     l1733:
   932                           
   933                           ;Proyecto.c: 117:     if(PORTBbits.RB5==1){
   934  05FF  0140               	movlb	0	; select bank0
   935  0600  1E8D               	btfss	13,5	;volatile
   936  0601  2E03               	goto	u1511
   937  0602  2E04               	goto	u1510
   938  0603                     u1511:
   939  0603  2E0C               	goto	l1737
   940  0604                     u1510:
   941  0604                     l1735:
   942                           
   943                           ;Proyecto.c: 118:     _delay((unsigned long)((20)*(1000000/4000.0)));
   944  0604  3007               	movlw	7
   945  0605  0140               	movlb	0	; select bank0
   946  0606  00EA               	movwf	??_main
   947  0607  307D               	movlw	125
   948  0608                     u1667:
   949  0608  0B89               	decfsz	9,f
   950  0609  2E08               	goto	u1667
   951  060A  0BEA               	decfsz	??_main,f
   952  060B  2E08               	goto	u1667
   953  060C                     l1737:
   954                           
   955                           ;Proyecto.c: 120:     if(PORTBbits.RB5==0){
   956  060C  0140               	movlb	0	; select bank0
   957  060D  1A8D               	btfsc	13,5	;volatile
   958  060E  2E10               	goto	u1521
   959  060F  2E11               	goto	u1520
   960  0610                     u1521:
   961  0610  2E3B               	goto	l1745
   962  0611                     u1520:
   963  0611                     l1739:
   964                           
   965                           ;Proyecto.c: 121:         contador++;
   966  0611  3001               	movlw	1
   967  0612  07EE               	addwf	_contador,f
   968  0613  3000               	movlw	0
   969  0614  3DEF               	addwfc	_contador+1,f
   970  0615                     l1741:
   971                           
   972                           ;Proyecto.c: 122:          sprintf(CONT, "Limones %d",contador);
   973  0615  3000               	movlw	low (STR_1| (0+32768))
   974  0616  00E6               	movwf	sprintf@fmt
   975  0617  3088               	movlw	high (STR_1| (0+32768))
   976  0618  00E7               	movwf	sprintf@fmt+1
   977  0619  086F               	movf	_contador+1,w
   978  061A  00E9               	movwf	?_sprintf+3
   979  061B  086E               	movf	_contador,w
   980  061C  00E8               	movwf	?_sprintf+2
   981  061D  30CA               	movlw	(low (_CONT| 0))& (0+255)
   982  061E  318E  2645  3185   	fcall	_sprintf
   983  0621                     l1743:
   984                           
   985                           ;Proyecto.c: 123:         Lcd_Out2(1,2,CONT);
   986  0621  3002               	movlw	2
   987  0622  0140               	movlb	0	; select bank0
   988  0623  00EA               	movwf	??_main
   989  0624  086A               	movf	??_main,w
   990  0625  00F3               	movwf	Lcd_Out2@x
   991  0626  30CA               	movlw	(low (_CONT| 0))& (0+255)
   992  0627  00EB               	movwf	??_main+1
   993  0628  086B               	movf	??_main+1,w
   994  0629  00F4               	movwf	Lcd_Out2@buffer
   995  062A  3001               	movlw	1
   996  062B  318E  2691  3185   	fcall	_Lcd_Out2
   997                           
   998                           ;Proyecto.c: 124:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   999  062E  3002               	movlw	2
  1000  062F  0140               	movlb	0	; select bank0
  1001  0630  00EB               	movwf	??_main+1
  1002  0631  3045               	movlw	69
  1003  0632  00EA               	movwf	??_main
  1004  0633  30A9               	movlw	169
  1005  0634                     u1677:
  1006  0634  0B89               	decfsz	9,f
  1007  0635  2E34               	goto	u1677
  1008  0636  0BEA               	decfsz	??_main,f
  1009  0637  2E34               	goto	u1677
  1010  0638  0BEB               	decfsz	??_main+1,f
  1011  0639  2E34               	goto	u1677
  1012  063A  3200               	nop2
  1013  063B                     l1745:
  1014                           
  1015                           ;Proyecto.c: 127:     if (contador==10, PORTAbits.RA2 ){
  1016  063B  0140               	movlb	0	; select bank0
  1017  063C  1D0C               	btfss	12,2	;volatile
  1018  063D  2E3F               	goto	u1531
  1019  063E  2E40               	goto	u1530
  1020  063F                     u1531:
  1021  063F  2E5D               	goto	l1751
  1022  0640                     u1530:
  1023  0640                     l1747:
  1024                           
  1025                           ;Proyecto.c: 129:         sprintf(CONT, "Pacas 1");
  1026  0640  3026               	movlw	low (STR_2| (0+32768))
  1027  0641  00E6               	movwf	sprintf@fmt
  1028  0642  3088               	movlw	high (STR_2| (0+32768))
  1029  0643  00E7               	movwf	sprintf@fmt+1
  1030  0644  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1031  0645  318E  2645  3185   	fcall	_sprintf
  1032                           
  1033                           ;Proyecto.c: 130:         Lcd_Out2(2,2,CONT);
  1034  0648  3002               	movlw	2
  1035  0649  0140               	movlb	0	; select bank0
  1036  064A  00EA               	movwf	??_main
  1037  064B  086A               	movf	??_main,w
  1038  064C  00F3               	movwf	Lcd_Out2@x
  1039  064D  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1040  064E  00EB               	movwf	??_main+1
  1041  064F  086B               	movf	??_main+1,w
  1042  0650  00F4               	movwf	Lcd_Out2@buffer
  1043  0651  3002               	movlw	2
  1044  0652  318E  2691  3185   	fcall	_Lcd_Out2
  1045  0655                     l1749:
  1046                           
  1047                           ;Proyecto.c: 131:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1048  0655  30A3               	movlw	163
  1049  0656  0140               	movlb	0	; select bank0
  1050  0657  00EA               	movwf	??_main
  1051  0658  3055               	movlw	85
  1052  0659                     u1687:
  1053  0659  0B89               	decfsz	9,f
  1054  065A  2E59               	goto	u1687
  1055  065B  0BEA               	decfsz	??_main,f
  1056  065C  2E59               	goto	u1687
  1057  065D                     l1751:
  1058                           
  1059                           ;Proyecto.c: 134:     if (contador==20){
  1060  065D  3014               	movlw	20
  1061  065E  0140               	movlb	0	; select bank0
  1062  065F  066E               	xorwf	_contador,w
  1063  0660  046F               	iorwf	_contador+1,w
  1064  0661  1D03               	btfss	3,2
  1065  0662  2E64               	goto	u1541
  1066  0663  2E65               	goto	u1540
  1067  0664                     u1541:
  1068  0664  2E82               	goto	l1757
  1069  0665                     u1540:
  1070  0665                     l1753:
  1071                           
  1072                           ;Proyecto.c: 136:         sprintf(CONT, "Pacas 2");
  1073  0665  302E               	movlw	low (STR_3| (0+32768))
  1074  0666  00E6               	movwf	sprintf@fmt
  1075  0667  3088               	movlw	high (STR_3| (0+32768))
  1076  0668  00E7               	movwf	sprintf@fmt+1
  1077  0669  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1078  066A  318E  2645  3185   	fcall	_sprintf
  1079                           
  1080                           ;Proyecto.c: 137:         Lcd_Out2(2,2,CONT);
  1081  066D  3002               	movlw	2
  1082  066E  0140               	movlb	0	; select bank0
  1083  066F  00EA               	movwf	??_main
  1084  0670  086A               	movf	??_main,w
  1085  0671  00F3               	movwf	Lcd_Out2@x
  1086  0672  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1087  0673  00EB               	movwf	??_main+1
  1088  0674  086B               	movf	??_main+1,w
  1089  0675  00F4               	movwf	Lcd_Out2@buffer
  1090  0676  3002               	movlw	2
  1091  0677  318E  2691  3185   	fcall	_Lcd_Out2
  1092  067A                     l1755:
  1093                           
  1094                           ;Proyecto.c: 138:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1095  067A  30A3               	movlw	163
  1096  067B  0140               	movlb	0	; select bank0
  1097  067C  00EA               	movwf	??_main
  1098  067D  3055               	movlw	85
  1099  067E                     u1697:
  1100  067E  0B89               	decfsz	9,f
  1101  067F  2E7E               	goto	u1697
  1102  0680  0BEA               	decfsz	??_main,f
  1103  0681  2E7E               	goto	u1697
  1104  0682                     l1757:
  1105                           
  1106                           ;Proyecto.c: 141:     if (contador==30){
  1107  0682  301E               	movlw	30
  1108  0683  0140               	movlb	0	; select bank0
  1109  0684  066E               	xorwf	_contador,w
  1110  0685  046F               	iorwf	_contador+1,w
  1111  0686  1D03               	btfss	3,2
  1112  0687  2E89               	goto	u1551
  1113  0688  2E8A               	goto	u1550
  1114  0689                     u1551:
  1115  0689  2EA7               	goto	l1763
  1116  068A                     u1550:
  1117  068A                     l1759:
  1118                           
  1119                           ;Proyecto.c: 143:         sprintf(CONT, "Pacas 3");
  1120  068A  3036               	movlw	low (STR_4| (0+32768))
  1121  068B  00E6               	movwf	sprintf@fmt
  1122  068C  3088               	movlw	high (STR_4| (0+32768))
  1123  068D  00E7               	movwf	sprintf@fmt+1
  1124  068E  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1125  068F  318E  2645  3185   	fcall	_sprintf
  1126                           
  1127                           ;Proyecto.c: 144:         Lcd_Out2(2,2,CONT);
  1128  0692  3002               	movlw	2
  1129  0693  0140               	movlb	0	; select bank0
  1130  0694  00EA               	movwf	??_main
  1131  0695  086A               	movf	??_main,w
  1132  0696  00F3               	movwf	Lcd_Out2@x
  1133  0697  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1134  0698  00EB               	movwf	??_main+1
  1135  0699  086B               	movf	??_main+1,w
  1136  069A  00F4               	movwf	Lcd_Out2@buffer
  1137  069B  3002               	movlw	2
  1138  069C  318E  2691  3185   	fcall	_Lcd_Out2
  1139  069F                     l1761:
  1140                           
  1141                           ;Proyecto.c: 145:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1142  069F  30A3               	movlw	163
  1143  06A0  0140               	movlb	0	; select bank0
  1144  06A1  00EA               	movwf	??_main
  1145  06A2  3055               	movlw	85
  1146  06A3                     u1707:
  1147  06A3  0B89               	decfsz	9,f
  1148  06A4  2EA3               	goto	u1707
  1149  06A5  0BEA               	decfsz	??_main,f
  1150  06A6  2EA3               	goto	u1707
  1151  06A7                     l1763:
  1152                           
  1153                           ;Proyecto.c: 148:     if (contador==40){
  1154  06A7  3028               	movlw	40
  1155  06A8  0140               	movlb	0	; select bank0
  1156  06A9  066E               	xorwf	_contador,w
  1157  06AA  046F               	iorwf	_contador+1,w
  1158  06AB  1D03               	btfss	3,2
  1159  06AC  2EAE               	goto	u1561
  1160  06AD  2EAF               	goto	u1560
  1161  06AE                     u1561:
  1162  06AE  2ECC               	goto	l1769
  1163  06AF                     u1560:
  1164  06AF                     l1765:
  1165                           
  1166                           ;Proyecto.c: 150:         sprintf(CONT, "Pacas 4");
  1167  06AF  303E               	movlw	low (STR_5| (0+32768))
  1168  06B0  00E6               	movwf	sprintf@fmt
  1169  06B1  3088               	movlw	high (STR_5| (0+32768))
  1170  06B2  00E7               	movwf	sprintf@fmt+1
  1171  06B3  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1172  06B4  318E  2645  3185   	fcall	_sprintf
  1173                           
  1174                           ;Proyecto.c: 151:         Lcd_Out2(2,2,CONT);
  1175  06B7  3002               	movlw	2
  1176  06B8  0140               	movlb	0	; select bank0
  1177  06B9  00EA               	movwf	??_main
  1178  06BA  086A               	movf	??_main,w
  1179  06BB  00F3               	movwf	Lcd_Out2@x
  1180  06BC  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1181  06BD  00EB               	movwf	??_main+1
  1182  06BE  086B               	movf	??_main+1,w
  1183  06BF  00F4               	movwf	Lcd_Out2@buffer
  1184  06C0  3002               	movlw	2
  1185  06C1  318E  2691  3185   	fcall	_Lcd_Out2
  1186  06C4                     l1767:
  1187                           
  1188                           ;Proyecto.c: 152:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1189  06C4  30A3               	movlw	163
  1190  06C5  0140               	movlb	0	; select bank0
  1191  06C6  00EA               	movwf	??_main
  1192  06C7  3055               	movlw	85
  1193  06C8                     u1717:
  1194  06C8  0B89               	decfsz	9,f
  1195  06C9  2EC8               	goto	u1717
  1196  06CA  0BEA               	decfsz	??_main,f
  1197  06CB  2EC8               	goto	u1717
  1198  06CC                     l1769:
  1199                           
  1200                           ;Proyecto.c: 155:     if (contador==50){
  1201  06CC  3032               	movlw	50
  1202  06CD  0140               	movlb	0	; select bank0
  1203  06CE  066E               	xorwf	_contador,w
  1204  06CF  046F               	iorwf	_contador+1,w
  1205  06D0  1D03               	btfss	3,2
  1206  06D1  2ED3               	goto	u1571
  1207  06D2  2ED4               	goto	u1570
  1208  06D3                     u1571:
  1209  06D3  2EF1               	goto	l1775
  1210  06D4                     u1570:
  1211  06D4                     l1771:
  1212                           
  1213                           ;Proyecto.c: 157:         sprintf(CONT, "Pacas 5");
  1214  06D4  3046               	movlw	low (STR_6| (0+32768))
  1215  06D5  00E6               	movwf	sprintf@fmt
  1216  06D6  3088               	movlw	high (STR_6| (0+32768))
  1217  06D7  00E7               	movwf	sprintf@fmt+1
  1218  06D8  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1219  06D9  318E  2645  3185   	fcall	_sprintf
  1220                           
  1221                           ;Proyecto.c: 158:         Lcd_Out2(2,2,CONT);
  1222  06DC  3002               	movlw	2
  1223  06DD  0140               	movlb	0	; select bank0
  1224  06DE  00EA               	movwf	??_main
  1225  06DF  086A               	movf	??_main,w
  1226  06E0  00F3               	movwf	Lcd_Out2@x
  1227  06E1  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1228  06E2  00EB               	movwf	??_main+1
  1229  06E3  086B               	movf	??_main+1,w
  1230  06E4  00F4               	movwf	Lcd_Out2@buffer
  1231  06E5  3002               	movlw	2
  1232  06E6  318E  2691  3185   	fcall	_Lcd_Out2
  1233  06E9                     l1773:
  1234                           
  1235                           ;Proyecto.c: 159:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1236  06E9  30A3               	movlw	163
  1237  06EA  0140               	movlb	0	; select bank0
  1238  06EB  00EA               	movwf	??_main
  1239  06EC  3055               	movlw	85
  1240  06ED                     u1727:
  1241  06ED  0B89               	decfsz	9,f
  1242  06EE  2EED               	goto	u1727
  1243  06EF  0BEA               	decfsz	??_main,f
  1244  06F0  2EED               	goto	u1727
  1245  06F1                     l1775:
  1246                           
  1247                           ;Proyecto.c: 162:       if (contador==60){
  1248  06F1  303C               	movlw	60
  1249  06F2  0140               	movlb	0	; select bank0
  1250  06F3  066E               	xorwf	_contador,w
  1251  06F4  046F               	iorwf	_contador+1,w
  1252  06F5  1D03               	btfss	3,2
  1253  06F6  2EF8               	goto	u1581
  1254  06F7  2EF9               	goto	u1580
  1255  06F8                     u1581:
  1256  06F8  2F16               	goto	l1781
  1257  06F9                     u1580:
  1258  06F9                     l1777:
  1259                           
  1260                           ;Proyecto.c: 164:         sprintf(CONT, "Pacas 6");
  1261  06F9  304E               	movlw	low (STR_7| (0+32768))
  1262  06FA  00E6               	movwf	sprintf@fmt
  1263  06FB  3088               	movlw	high (STR_7| (0+32768))
  1264  06FC  00E7               	movwf	sprintf@fmt+1
  1265  06FD  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1266  06FE  318E  2645  3185   	fcall	_sprintf
  1267                           
  1268                           ;Proyecto.c: 165:         Lcd_Out2(2,2,CONT);
  1269  0701  3002               	movlw	2
  1270  0702  0140               	movlb	0	; select bank0
  1271  0703  00EA               	movwf	??_main
  1272  0704  086A               	movf	??_main,w
  1273  0705  00F3               	movwf	Lcd_Out2@x
  1274  0706  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1275  0707  00EB               	movwf	??_main+1
  1276  0708  086B               	movf	??_main+1,w
  1277  0709  00F4               	movwf	Lcd_Out2@buffer
  1278  070A  3002               	movlw	2
  1279  070B  318E  2691  3185   	fcall	_Lcd_Out2
  1280  070E                     l1779:
  1281                           
  1282                           ;Proyecto.c: 166:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1283  070E  30A3               	movlw	163
  1284  070F  0140               	movlb	0	; select bank0
  1285  0710  00EA               	movwf	??_main
  1286  0711  3055               	movlw	85
  1287  0712                     u1737:
  1288  0712  0B89               	decfsz	9,f
  1289  0713  2F12               	goto	u1737
  1290  0714  0BEA               	decfsz	??_main,f
  1291  0715  2F12               	goto	u1737
  1292  0716                     l1781:
  1293                           
  1294                           ;Proyecto.c: 169:     if (contador==70){
  1295  0716  3046               	movlw	70
  1296  0717  0140               	movlb	0	; select bank0
  1297  0718  066E               	xorwf	_contador,w
  1298  0719  046F               	iorwf	_contador+1,w
  1299  071A  1D03               	btfss	3,2
  1300  071B  2F1D               	goto	u1591
  1301  071C  2F1E               	goto	u1590
  1302  071D                     u1591:
  1303  071D  2F3B               	goto	l1787
  1304  071E                     u1590:
  1305  071E                     l1783:
  1306                           
  1307                           ;Proyecto.c: 171:         sprintf(CONT, "Pacas 7");
  1308  071E  3056               	movlw	low (STR_8| (0+32768))
  1309  071F  00E6               	movwf	sprintf@fmt
  1310  0720  3088               	movlw	high (STR_8| (0+32768))
  1311  0721  00E7               	movwf	sprintf@fmt+1
  1312  0722  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1313  0723  318E  2645  3185   	fcall	_sprintf
  1314                           
  1315                           ;Proyecto.c: 172:         Lcd_Out2(2,2,CONT);
  1316  0726  3002               	movlw	2
  1317  0727  0140               	movlb	0	; select bank0
  1318  0728  00EA               	movwf	??_main
  1319  0729  086A               	movf	??_main,w
  1320  072A  00F3               	movwf	Lcd_Out2@x
  1321  072B  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1322  072C  00EB               	movwf	??_main+1
  1323  072D  086B               	movf	??_main+1,w
  1324  072E  00F4               	movwf	Lcd_Out2@buffer
  1325  072F  3002               	movlw	2
  1326  0730  318E  2691  3185   	fcall	_Lcd_Out2
  1327  0733                     l1785:
  1328                           
  1329                           ;Proyecto.c: 173:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1330  0733  30A3               	movlw	163
  1331  0734  0140               	movlb	0	; select bank0
  1332  0735  00EA               	movwf	??_main
  1333  0736  3055               	movlw	85
  1334  0737                     u1747:
  1335  0737  0B89               	decfsz	9,f
  1336  0738  2F37               	goto	u1747
  1337  0739  0BEA               	decfsz	??_main,f
  1338  073A  2F37               	goto	u1747
  1339  073B                     l1787:
  1340                           
  1341                           ;Proyecto.c: 176:     if (contador==80){
  1342  073B  3050               	movlw	80
  1343  073C  0140               	movlb	0	; select bank0
  1344  073D  066E               	xorwf	_contador,w
  1345  073E  046F               	iorwf	_contador+1,w
  1346  073F  1D03               	btfss	3,2
  1347  0740  2F42               	goto	u1601
  1348  0741  2F43               	goto	u1600
  1349  0742                     u1601:
  1350  0742  2F60               	goto	l1793
  1351  0743                     u1600:
  1352  0743                     l1789:
  1353                           
  1354                           ;Proyecto.c: 178:         sprintf(CONT, "Pacas 8");
  1355  0743  305E               	movlw	low (STR_9| (0+32768))
  1356  0744  00E6               	movwf	sprintf@fmt
  1357  0745  3088               	movlw	high (STR_9| (0+32768))
  1358  0746  00E7               	movwf	sprintf@fmt+1
  1359  0747  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1360  0748  318E  2645  3185   	fcall	_sprintf
  1361                           
  1362                           ;Proyecto.c: 179:         Lcd_Out2(2,2,CONT);
  1363  074B  3002               	movlw	2
  1364  074C  0140               	movlb	0	; select bank0
  1365  074D  00EA               	movwf	??_main
  1366  074E  086A               	movf	??_main,w
  1367  074F  00F3               	movwf	Lcd_Out2@x
  1368  0750  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1369  0751  00EB               	movwf	??_main+1
  1370  0752  086B               	movf	??_main+1,w
  1371  0753  00F4               	movwf	Lcd_Out2@buffer
  1372  0754  3002               	movlw	2
  1373  0755  318E  2691  3185   	fcall	_Lcd_Out2
  1374  0758                     l1791:
  1375                           
  1376                           ;Proyecto.c: 180:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1377  0758  30A3               	movlw	163
  1378  0759  0140               	movlb	0	; select bank0
  1379  075A  00EA               	movwf	??_main
  1380  075B  3055               	movlw	85
  1381  075C                     u1757:
  1382  075C  0B89               	decfsz	9,f
  1383  075D  2F5C               	goto	u1757
  1384  075E  0BEA               	decfsz	??_main,f
  1385  075F  2F5C               	goto	u1757
  1386  0760                     l1793:
  1387                           
  1388                           ;Proyecto.c: 183:     if (contador==90){
  1389  0760  305A               	movlw	90
  1390  0761  0140               	movlb	0	; select bank0
  1391  0762  066E               	xorwf	_contador,w
  1392  0763  046F               	iorwf	_contador+1,w
  1393  0764  1D03               	btfss	3,2
  1394  0765  2F67               	goto	u1611
  1395  0766  2F68               	goto	u1610
  1396  0767                     u1611:
  1397  0767  2F85               	goto	l1799
  1398  0768                     u1610:
  1399  0768                     l1795:
  1400                           
  1401                           ;Proyecto.c: 185:         sprintf(CONT, "Pacas 9");
  1402  0768  3066               	movlw	low (STR_10| (0+32768))
  1403  0769  00E6               	movwf	sprintf@fmt
  1404  076A  3088               	movlw	high (STR_10| (0+32768))
  1405  076B  00E7               	movwf	sprintf@fmt+1
  1406  076C  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1407  076D  318E  2645  3185   	fcall	_sprintf
  1408                           
  1409                           ;Proyecto.c: 186:         Lcd_Out2(2,2,CONT);
  1410  0770  3002               	movlw	2
  1411  0771  0140               	movlb	0	; select bank0
  1412  0772  00EA               	movwf	??_main
  1413  0773  086A               	movf	??_main,w
  1414  0774  00F3               	movwf	Lcd_Out2@x
  1415  0775  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1416  0776  00EB               	movwf	??_main+1
  1417  0777  086B               	movf	??_main+1,w
  1418  0778  00F4               	movwf	Lcd_Out2@buffer
  1419  0779  3002               	movlw	2
  1420  077A  318E  2691  3185   	fcall	_Lcd_Out2
  1421  077D                     l1797:
  1422                           
  1423                           ;Proyecto.c: 187:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1424  077D  30A3               	movlw	163
  1425  077E  0140               	movlb	0	; select bank0
  1426  077F  00EA               	movwf	??_main
  1427  0780  3055               	movlw	85
  1428  0781                     u1767:
  1429  0781  0B89               	decfsz	9,f
  1430  0782  2F81               	goto	u1767
  1431  0783  0BEA               	decfsz	??_main,f
  1432  0784  2F81               	goto	u1767
  1433  0785                     l1799:
  1434                           
  1435                           ;Proyecto.c: 190:     if (contador==100){
  1436  0785  3064               	movlw	100
  1437  0786  0140               	movlb	0	; select bank0
  1438  0787  066E               	xorwf	_contador,w
  1439  0788  046F               	iorwf	_contador+1,w
  1440  0789  1D03               	btfss	3,2
  1441  078A  2F8C               	goto	u1621
  1442  078B  2F8D               	goto	u1620
  1443  078C                     u1621:
  1444  078C  2FAA               	goto	l1805
  1445  078D                     u1620:
  1446  078D                     l1801:
  1447                           
  1448                           ;Proyecto.c: 192:         sprintf(CONT, "Pacas 10");
  1449  078D  3015               	movlw	low (STR_11| (0+32768))
  1450  078E  00E6               	movwf	sprintf@fmt
  1451  078F  3088               	movlw	high (STR_11| (0+32768))
  1452  0790  00E7               	movwf	sprintf@fmt+1
  1453  0791  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1454  0792  318E  2645  3185   	fcall	_sprintf
  1455                           
  1456                           ;Proyecto.c: 193:         Lcd_Out2(2,2,CONT);
  1457  0795  3002               	movlw	2
  1458  0796  0140               	movlb	0	; select bank0
  1459  0797  00EA               	movwf	??_main
  1460  0798  086A               	movf	??_main,w
  1461  0799  00F3               	movwf	Lcd_Out2@x
  1462  079A  30CA               	movlw	(low (_CONT| 0))& (0+255)
  1463  079B  00EB               	movwf	??_main+1
  1464  079C  086B               	movf	??_main+1,w
  1465  079D  00F4               	movwf	Lcd_Out2@buffer
  1466  079E  3002               	movlw	2
  1467  079F  318E  2691  3185   	fcall	_Lcd_Out2
  1468  07A2                     l1803:
  1469                           
  1470                           ;Proyecto.c: 194:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1471  07A2  30A3               	movlw	163
  1472  07A3  0140               	movlb	0	; select bank0
  1473  07A4  00EA               	movwf	??_main
  1474  07A5  3055               	movlw	85
  1475  07A6                     u1777:
  1476  07A6  0B89               	decfsz	9,f
  1477  07A7  2FA6               	goto	u1777
  1478  07A8  0BEA               	decfsz	??_main,f
  1479  07A9  2FA6               	goto	u1777
  1480  07AA                     l1805:
  1481                           
  1482                           ;Proyecto.c: 197:     if(PORTAbits.RA1==0){
  1483  07AA  0140               	movlb	0	; select bank0
  1484  07AB  188C               	btfsc	12,1	;volatile
  1485  07AC  2FAE               	goto	u1631
  1486  07AD  2FAF               	goto	u1630
  1487  07AE                     u1631:
  1488  07AE  2FB7               	goto	l124
  1489  07AF                     u1630:
  1490  07AF                     l1807:
  1491                           
  1492                           ;Proyecto.c: 198:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1493  07AF  3007               	movlw	7
  1494  07B0  0140               	movlb	0	; select bank0
  1495  07B1  00EA               	movwf	??_main
  1496  07B2  307D               	movlw	125
  1497  07B3                     u1787:
  1498  07B3  0B89               	decfsz	9,f
  1499  07B4  2FB3               	goto	u1787
  1500  07B5  0BEA               	decfsz	??_main,f
  1501  07B6  2FB3               	goto	u1787
  1502  07B7                     l124:	
  1503                           ;Proyecto.c: 199:    }
  1504                           
  1505                           
  1506                           ;Proyecto.c: 200:     if(PORTAbits.RA1 ==1, PORTAbits.RA5==1){
  1507  07B7  0140               	movlb	0	; select bank0
  1508  07B8  080C               	movf	12,w	;volatile
  1509  07B9                     l1809:
  1510  07B9  1E8C               	btfss	12,5	;volatile
  1511  07BA  2FBC               	goto	u1641
  1512  07BB  2FBD               	goto	u1640
  1513  07BC                     u1641:
  1514  07BC  2DFF               	goto	l1733
  1515  07BD                     u1640:
  1516  07BD                     l1811:
  1517                           
  1518                           ;Proyecto.c: 202:         contador =0;
  1519  07BD  01EE               	clrf	_contador
  1520  07BE  01EF               	clrf	_contador+1
  1521                           
  1522                           ;Proyecto.c: 203:         paca =0;
  1523  07BF  0141               	movlb	1	; select bank1
  1524  07C0  01A8               	clrf	_paca^(0+128)
  1525  07C1  01A9               	clrf	(_paca+1)^(0+128)
  1526  07C2                     l1813:
  1527                           
  1528                           ;Proyecto.c: 204:         Lcd_Cmd(1);
  1529  07C2  3001               	movlw	1
  1530  07C3  3180  208F  3185   	fcall	_Lcd_Cmd
  1531  07C6                     l1815:
  1532                           
  1533                           ;Proyecto.c: 205:         Lcd_Out(1,2, "Limones 0");
  1534  07C6  3002               	movlw	2
  1535  07C7  0140               	movlb	0	; select bank0
  1536  07C8  00EA               	movwf	??_main
  1537  07C9  086A               	movf	??_main,w
  1538  07CA  00F3               	movwf	Lcd_Out@x
  1539  07CB  300B               	movlw	low (STR_12| (0+32768))
  1540  07CC  00F4               	movwf	Lcd_Out@buffer
  1541  07CD  3088               	movlw	high (STR_12| (0+32768))
  1542  07CE  00F5               	movwf	Lcd_Out@buffer+1
  1543  07CF  3001               	movlw	1
  1544  07D0  318E  26DA  3185   	fcall	_Lcd_Out
  1545  07D3                     l1817:
  1546                           
  1547                           ;Proyecto.c: 206:         Lcd_Out(2,2, "pacas 0");
  1548  07D3  3002               	movlw	2
  1549  07D4  0140               	movlb	0	; select bank0
  1550  07D5  00EA               	movwf	??_main
  1551  07D6  086A               	movf	??_main,w
  1552  07D7  00F3               	movwf	Lcd_Out@x
  1553  07D8  301E               	movlw	low (STR_13| (0+32768))
  1554  07D9  00F4               	movwf	Lcd_Out@buffer
  1555  07DA  3088               	movlw	high (STR_13| (0+32768))
  1556  07DB  00F5               	movwf	Lcd_Out@buffer+1
  1557  07DC  3002               	movlw	2
  1558  07DD  318E  26DA  3185   	fcall	_Lcd_Out
  1559  07E0                     l1819:
  1560                           
  1561                           ;Proyecto.c: 207:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  1562  07E0  3003               	movlw	3
  1563  07E1  0140               	movlb	0	; select bank0
  1564  07E2  00EB               	movwf	??_main+1
  1565  07E3  308A               	movlw	138
  1566  07E4  00EA               	movwf	??_main
  1567  07E5  3055               	movlw	85
  1568  07E6                     u1797:
  1569  07E6  0B89               	decfsz	9,f
  1570  07E7  2FE6               	goto	u1797
  1571  07E8  0BEA               	decfsz	??_main,f
  1572  07E9  2FE6               	goto	u1797
  1573  07EA  0BEB               	decfsz	??_main+1,f
  1574  07EB  2FE6               	goto	u1797
  1575  07EC  3200               	nop2
  1576  07ED  2DFF               	goto	l1733
  1577  07EE  3180  2802         	ljmp	start
  1578  07F0                     __end_of_main:
  1579                           
  1580                           	psect	text1
  1581  0E45                     __ptext1:	
  1582 ;; *************** function _sprintf *****************
  1583 ;; Defined at:
  1584 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  s               1    wreg     PTR unsigned char 
  1587 ;;		 -> CONT(20), 
  1588 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1589 ;;		 -> STR_11(9), STR_10(8), STR_9(8), STR_8(8), 
  1590 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  1591 ;;		 -> STR_3(8), STR_2(8), STR_1(11), 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1594 ;;		 -> CONT(20), 
  1595 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1596 ;;  ret             2    0        int 
  1597 ;;  ap              1    2[BANK1 ] PTR void [1]
  1598 ;;		 -> ?_sprintf(2), 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2   70[BANK0 ] int 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1608 ;;      Params:         0       4       0       0       0       0       0       0
  1609 ;;      Locals:         0       0       9       0       0       0       0       0
  1610 ;;      Temps:          1       0       0       0       0       0       0       0
  1611 ;;      Totals:         1       4       9       0       0       0       0       0
  1612 ;;Total ram usage:       14 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    7
  1615 ;; This function calls:
  1616 ;;		_vfprintf
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _sprintf
  1624  0E45                     _sprintf:
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1628                           ;sprintf@s stored from wreg
  1629  0E45  0141               	movlb	1	; select bank1
  1630  0E46  00E1               	movwf	sprintf@s^(0+128)
  1631  0E47                     l1715:
  1632  0E47  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1633  0E48  00FD               	movwf	??_sprintf
  1634  0E49  087D               	movf	??_sprintf,w
  1635  0E4A  00E0               	movwf	sprintf@ap^(0+128)
  1636  0E4B  0861               	movf	sprintf@s^(0+128),w
  1637  0E4C  00FD               	movwf	??_sprintf
  1638  0E4D  087D               	movf	??_sprintf,w
  1639  0E4E  00E2               	movwf	sprintf@f^(0+128)
  1640  0E4F                     l1717:
  1641  0E4F  01E3               	clrf	(sprintf@f^(0+128)+1)
  1642  0E50  01E4               	clrf	((sprintf@f+1)^(0+128)+1)
  1643  0E51                     l1719:
  1644  0E51  01E5               	clrf	(sprintf@f^(0+128)+3)
  1645  0E52  01E6               	clrf	((sprintf@f+1)^(0+128)+3)
  1646  0E53                     l1721:
  1647  0E53  0140               	movlb	0	; select bank0
  1648  0E54  0867               	movf	sprintf@fmt+1,w
  1649  0E55  00DF               	movwf	vfprintf@fmt+1
  1650  0E56  0866               	movf	sprintf@fmt,w
  1651  0E57  00DE               	movwf	vfprintf@fmt
  1652  0E58  30E0               	movlw	(low (sprintf@ap| 0))& (0+255)
  1653  0E59  00FD               	movwf	??_sprintf
  1654  0E5A  087D               	movf	??_sprintf,w
  1655  0E5B  00E0               	movwf	vfprintf@ap
  1656  0E5C  30E2               	movlw	(low (sprintf@f| 0))& (0+255)
  1657  0E5D  3180  2008  318E   	fcall	_vfprintf
  1658  0E60                     l1723:
  1659  0E60  0141               	movlb	1	; select bank1
  1660  0E61  0863               	movf	(sprintf@f^(0+128)+1),w
  1661  0E62  0761               	addwf	sprintf@s^(0+128),w
  1662  0E63  00FD               	movwf	??_sprintf
  1663  0E64  087D               	movf	??_sprintf,w
  1664  0E65  0086               	movwf	6
  1665  0E66  0187               	clrf	7
  1666  0E67  0181               	clrf	1
  1667  0E68                     l659:
  1668  0E68  0008               	return
  1669  0E69                     __end_of_sprintf:
  1670                           
  1671                           	psect	text2
  1672  0008                     __ptext2:	
  1673 ;; *************** function _vfprintf *****************
  1674 ;; Defined at:
  1675 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  fp              1    wreg     PTR struct _IO_FILE
  1678 ;;		 -> sprintf@f(5), 
  1679 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1680 ;;		 -> STR_11(9), STR_10(8), STR_9(8), STR_8(8), 
  1681 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  1682 ;;		 -> STR_3(8), STR_2(8), STR_1(11), 
  1683 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1684 ;;		 -> sprintf@ap(1), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1687 ;;		 -> sprintf@f(5), 
  1688 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1689 ;;		 -> STR_11(9), STR_10(8), STR_9(8), STR_8(8), 
  1690 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  1691 ;;		 -> STR_3(8), STR_2(8), STR_1(11), 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2   62[BANK0 ] int 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1701 ;;      Params:         0       3       0       0       0       0       0       0
  1702 ;;      Locals:         0       3       0       0       0       0       0       0
  1703 ;;      Temps:          0       2       0       0       0       0       0       0
  1704 ;;      Totals:         0       8       0       0       0       0       0       0
  1705 ;;Total ram usage:        8 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    6
  1708 ;; This function calls:
  1709 ;;		_vfpfcnvrt
  1710 ;; This function is called by:
  1711 ;;		_sprintf
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _vfprintf
  1717  0008                     _vfprintf:
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1721                           ;vfprintf@fp stored from wreg
  1722  0008  0140               	movlb	0	; select bank0
  1723  0009  00E3               	movwf	vfprintf@fp
  1724  000A                     l1607:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1727  000A  085F               	movf	vfprintf@fmt+1,w
  1728  000B  00E5               	movwf	vfprintf@cfmt+1
  1729  000C  085E               	movf	vfprintf@fmt,w
  1730  000D  00E4               	movwf	vfprintf@cfmt
  1731  000E                     l1609:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1734  000E  0141               	movlb	1	; select bank1
  1735  000F  01A0               	clrf	_nout^(0+128)
  1736  0010  01A1               	clrf	(_nout+1)^(0+128)
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1739  0011  2826               	goto	l1613
  1740  0012                     l1611:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1743  0012  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1744  0013  00E1               	movwf	??_vfprintf
  1745  0014  0861               	movf	??_vfprintf,w
  1746  0015  00CE               	movwf	vfpfcnvrt@fmt
  1747  0016  0860               	movf	vfprintf@ap,w
  1748  0017  00E2               	movwf	??_vfprintf+1
  1749  0018  0862               	movf	??_vfprintf+1,w
  1750  0019  00CF               	movwf	vfpfcnvrt@ap
  1751  001A  0863               	movf	vfprintf@fp,w
  1752  001B  3181  21B4  3180   	fcall	_vfpfcnvrt
  1753  001E  0140               	movlb	0	; select bank0
  1754  001F  084E               	movf	?_vfpfcnvrt,w
  1755  0020  0141               	movlb	1	; select bank1
  1756  0021  07A0               	addwf	_nout^(0+128),f
  1757  0022  0140               	movlb	0	; select bank0
  1758  0023  084F               	movf	?_vfpfcnvrt+1,w
  1759  0024  0141               	movlb	1	; select bank1
  1760  0025  3DA1               	addwfc	(_nout+1)^(0+128),f
  1761  0026                     l1613:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1764  0026  0140               	movlb	0	; select bank0
  1765  0027  0864               	movf	vfprintf@cfmt,w
  1766  0028  0084               	movwf	4
  1767  0029  0865               	movf	vfprintf@cfmt+1,w
  1768  002A  0085               	movwf	5
  1769  002B  0012               	moviw fsr0++
  1770  002C  1D03               	btfss	3,2
  1771  002D  282F               	goto	u1471
  1772  002E  2830               	goto	u1470
  1773  002F                     u1471:
  1774  002F  2812               	goto	l1611
  1775  0030                     u1470:
  1776  0030                     l1615:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1779  0030  0141               	movlb	1	; select bank1
  1780  0031  0821               	movf	(_nout+1)^(0+128),w
  1781  0032  0140               	movlb	0	; select bank0
  1782  0033  00DF               	movwf	?_vfprintf+1
  1783  0034  0141               	movlb	1	; select bank1
  1784  0035  0820               	movf	_nout^(0+128),w
  1785  0036  0140               	movlb	0	; select bank0
  1786  0037  00DE               	movwf	?_vfprintf
  1787  0038                     l731:
  1788  0038  0008               	return
  1789  0039                     __end_of_vfprintf:
  1790                           
  1791                           	psect	text3
  1792  01B4                     __ptext3:	
  1793 ;; *************** function _vfpfcnvrt *****************
  1794 ;; Defined at:
  1795 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  fp              1    wreg     PTR struct _IO_FILE
  1798 ;;		 -> sprintf@f(5), 
  1799 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1800 ;;		 -> vfprintf@cfmt(2), 
  1801 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1802 ;;		 -> sprintf@ap(1), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1805 ;;		 -> sprintf@f(5), 
  1806 ;;  ll              8   53[BANK0 ] long long 
  1807 ;;  llu             8    0        unsigned long long 
  1808 ;;  f               4    0        unsigned long long 
  1809 ;;  ct              3    0        unsigned char [3]
  1810 ;;  vp              2    0        PTR void 
  1811 ;;  i               2    0        int 
  1812 ;;  done            2    0        int 
  1813 ;;  cp              2    0        PTR unsigned char 
  1814 ;;  c               1    0        unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  2   46[BANK0 ] int 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1824 ;;      Params:         0       2       0       0       0       0       0       0
  1825 ;;      Locals:         0       9       0       0       0       0       0       0
  1826 ;;      Temps:          0       5       0       0       0       0       0       0
  1827 ;;      Totals:         0      16       0       0       0       0       0       0
  1828 ;;Total ram usage:       16 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    5
  1831 ;; This function calls:
  1832 ;;		_dtoa
  1833 ;;		_fputc
  1834 ;; This function is called by:
  1835 ;;		_vfprintf
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _vfpfcnvrt
  1841  01B4                     _vfpfcnvrt:
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1845                           ;vfpfcnvrt@fp stored from wreg
  1846  01B4  0140               	movlb	0	; select bank0
  1847  01B5  00DD               	movwf	vfpfcnvrt@fp
  1848  01B6                     l1501:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1851  01B6  084E               	movf	vfpfcnvrt@fmt,w
  1852  01B7  0086               	movwf	6
  1853  01B8  0187               	clrf	7
  1854  01B9  3F40               	moviw [0]fsr1
  1855  01BA  00D0               	movwf	??_vfpfcnvrt
  1856  01BB  3F41               	moviw [1]fsr1
  1857  01BC  00D1               	movwf	??_vfpfcnvrt+1
  1858  01BD  0850               	movf	??_vfpfcnvrt,w
  1859  01BE  0084               	movwf	4
  1860  01BF  0851               	movf	??_vfpfcnvrt+1,w
  1861  01C0  0085               	movwf	5
  1862  01C1  0012               	moviw fsr0++
  1863  01C2  3A25               	xorlw	37
  1864  01C3  1D03               	btfss	3,2
  1865  01C4  29C6               	goto	u1311
  1866  01C5  29C7               	goto	u1310
  1867  01C6                     u1311:
  1868  01C6  2A6D               	goto	l1537
  1869  01C7                     u1310:
  1870  01C7                     l1503:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1873  01C7  084E               	movf	vfpfcnvrt@fmt,w
  1874  01C8  0086               	movwf	6
  1875  01C9  0187               	clrf	7
  1876  01CA  3001               	movlw	1
  1877  01CB  0781               	addwf	1,f
  1878  01CC  3141               	addfsr 1,1
  1879  01CD  1803               	skipnc
  1880  01CE  0A81               	incf	1,f
  1881  01CF                     l1505:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1884  01CF  0141               	movlb	1	; select bank1
  1885  01D0  01A2               	clrf	_width^(0+128)
  1886  01D1  01A3               	clrf	(_width+1)^(0+128)
  1887  01D2  0140               	movlb	0	; select bank0
  1888  01D3  01EC               	clrf	_flags
  1889  01D4  01ED               	clrf	_flags+1
  1890  01D5                     l1507:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1893  01D5  30FF               	movlw	255
  1894  01D6  0141               	movlb	1	; select bank1
  1895  01D7  00A4               	movwf	_prec^(0+128)
  1896  01D8  30FF               	movlw	255
  1897  01D9  00A5               	movwf	(_prec^(0+128)+1)
  1898  01DA                     l1509:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1901  01DA  0140               	movlb	0	; select bank0
  1902  01DB  084E               	movf	vfpfcnvrt@fmt,w
  1903  01DC  0086               	movwf	6
  1904  01DD  0187               	clrf	7
  1905  01DE  3F40               	moviw [0]fsr1
  1906  01DF  00D0               	movwf	??_vfpfcnvrt
  1907  01E0  3F41               	moviw [1]fsr1
  1908  01E1  00D1               	movwf	??_vfpfcnvrt+1
  1909  01E2  0850               	movf	??_vfpfcnvrt,w
  1910  01E3  0084               	movwf	4
  1911  01E4  0851               	movf	??_vfpfcnvrt+1,w
  1912  01E5  0085               	movwf	5
  1913  01E6  0012               	moviw fsr0++
  1914  01E7  3A64               	xorlw	100
  1915  01E8  1903               	btfsc	3,2
  1916  01E9  29EB               	goto	u1321
  1917  01EA  29EC               	goto	u1320
  1918  01EB                     u1321:
  1919  01EB  29FD               	goto	l1513
  1920  01EC                     u1320:
  1921  01EC                     l1511:
  1922  01EC  084E               	movf	vfpfcnvrt@fmt,w
  1923  01ED  0086               	movwf	6
  1924  01EE  0187               	clrf	7
  1925  01EF  3F40               	moviw [0]fsr1
  1926  01F0  00D0               	movwf	??_vfpfcnvrt
  1927  01F1  3F41               	moviw [1]fsr1
  1928  01F2  00D1               	movwf	??_vfpfcnvrt+1
  1929  01F3  0850               	movf	??_vfpfcnvrt,w
  1930  01F4  0084               	movwf	4
  1931  01F5  0851               	movf	??_vfpfcnvrt+1,w
  1932  01F6  0085               	movwf	5
  1933  01F7  0012               	moviw fsr0++
  1934  01F8  3A69               	xorlw	105
  1935  01F9  1D03               	btfss	3,2
  1936  01FA  29FC               	goto	u1331
  1937  01FB  29FD               	goto	u1330
  1938  01FC                     u1331:
  1939  01FC  2A38               	goto	l1521
  1940  01FD                     u1330:
  1941  01FD                     l1513:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1944  01FD  084E               	movf	vfpfcnvrt@fmt,w
  1945  01FE  0086               	movwf	6
  1946  01FF  0187               	clrf	7
  1947  0200  3001               	movlw	1
  1948  0201  0781               	addwf	1,f
  1949  0202  3141               	addfsr 1,1
  1950  0203  1803               	skipnc
  1951  0204  0A81               	incf	1,f
  1952  0205                     l1515:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1955  0205  084F               	movf	vfpfcnvrt@ap,w
  1956  0206  0086               	movwf	6
  1957  0207  0187               	clrf	7
  1958  0208  0801               	movf	1,w
  1959  0209  0084               	movwf	4
  1960  020A  0185               	clrf	5
  1961  020B  3002               	movlw	2
  1962  020C  0781               	addwf	1,f
  1963  020D  3F00               	moviw [0]fsr0
  1964  020E  00D0               	movwf	??_vfpfcnvrt
  1965  020F  3F01               	moviw [1]fsr0
  1966  0210  00D1               	movwf	??_vfpfcnvrt+1
  1967  0211  0850               	movf	??_vfpfcnvrt,w
  1968  0212  00D5               	movwf	vfpfcnvrt@ll
  1969  0213  0851               	movf	??_vfpfcnvrt+1,w
  1970  0214  00D6               	movwf	vfpfcnvrt@ll+1
  1971  0215  0D89               	rlf	9,f
  1972  0216  3B89               	subwfb	9,f
  1973  0217  0989               	comf	9,f
  1974  0218  00D7               	movwf	vfpfcnvrt@ll+2
  1975  0219  00D8               	movwf	vfpfcnvrt@ll+3
  1976  021A  00D9               	movwf	vfpfcnvrt@ll+4
  1977  021B  00DA               	movwf	vfpfcnvrt@ll+5
  1978  021C  00DB               	movwf	vfpfcnvrt@ll+6
  1979  021D  00DC               	movwf	vfpfcnvrt@ll+7
  1980  021E                     l1517:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1983  021E  0855               	movf	vfpfcnvrt@ll,w
  1984  021F  00B0               	movwf	dtoa@d
  1985  0220  0856               	movf	vfpfcnvrt@ll+1,w
  1986  0221  00B1               	movwf	dtoa@d+1
  1987  0222  0857               	movf	vfpfcnvrt@ll+2,w
  1988  0223  00B2               	movwf	dtoa@d+2
  1989  0224  0858               	movf	vfpfcnvrt@ll+3,w
  1990  0225  00B3               	movwf	dtoa@d+3
  1991  0226  0859               	movf	vfpfcnvrt@ll+4,w
  1992  0227  00B4               	movwf	dtoa@d+4
  1993  0228  085A               	movf	vfpfcnvrt@ll+5,w
  1994  0229  00B5               	movwf	dtoa@d+5
  1995  022A  085B               	movf	vfpfcnvrt@ll+6,w
  1996  022B  00B6               	movwf	dtoa@d+6
  1997  022C  085C               	movf	vfpfcnvrt@ll+7,w
  1998  022D  00B7               	movwf	dtoa@d+7
  1999  022E  085D               	movf	vfpfcnvrt@fp,w
  2000  022F  3184  247C  3181   	fcall	_dtoa
  2001  0232  0140               	movlb	0	; select bank0
  2002  0233  0831               	movf	?_dtoa+1,w
  2003  0234  00CF               	movwf	?_vfpfcnvrt+1
  2004  0235  0830               	movf	?_dtoa,w
  2005  0236  00CE               	movwf	?_vfpfcnvrt
  2006  0237  2A90               	goto	l724
  2007  0238                     l1521:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2010  0238  084E               	movf	vfpfcnvrt@fmt,w
  2011  0239  0086               	movwf	6
  2012  023A  0187               	clrf	7
  2013  023B  3F40               	moviw [0]fsr1
  2014  023C  00D0               	movwf	??_vfpfcnvrt
  2015  023D  3F41               	moviw [1]fsr1
  2016  023E  00D1               	movwf	??_vfpfcnvrt+1
  2017  023F  0850               	movf	??_vfpfcnvrt,w
  2018  0240  0084               	movwf	4
  2019  0241  0851               	movf	??_vfpfcnvrt+1,w
  2020  0242  0085               	movwf	5
  2021  0243  0012               	moviw fsr0++
  2022  0244  3A25               	xorlw	37
  2023  0245  1D03               	btfss	3,2
  2024  0246  2A48               	goto	u1341
  2025  0247  2A49               	goto	u1340
  2026  0248                     u1341:
  2027  0248  2A62               	goto	l1531
  2028  0249                     u1340:
  2029  0249                     l1523:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2032  0249  084E               	movf	vfpfcnvrt@fmt,w
  2033  024A  0086               	movwf	6
  2034  024B  0187               	clrf	7
  2035  024C  3001               	movlw	1
  2036  024D  0781               	addwf	1,f
  2037  024E  3141               	addfsr 1,1
  2038  024F  1803               	skipnc
  2039  0250  0A81               	incf	1,f
  2040  0251                     l1525:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2043  0251  3025               	movlw	37
  2044  0252  00F0               	movwf	fputc@c
  2045  0253  3000               	movlw	0
  2046  0254  00F1               	movwf	fputc@c+1
  2047  0255  085D               	movf	vfpfcnvrt@fp,w
  2048  0256  00D0               	movwf	??_vfpfcnvrt
  2049  0257  0850               	movf	??_vfpfcnvrt,w
  2050  0258  00F2               	movwf	fputc@fp
  2051  0259  318F  2725  3181   	fcall	_fputc
  2052  025C                     l1527:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2055  025C  3001               	movlw	1
  2056  025D  0140               	movlb	0	; select bank0
  2057  025E  00CE               	movwf	?_vfpfcnvrt
  2058  025F  3000               	movlw	0
  2059  0260  00CF               	movwf	?_vfpfcnvrt+1
  2060  0261  2A90               	goto	l724
  2061  0262                     l1531:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2064  0262  084E               	movf	vfpfcnvrt@fmt,w
  2065  0263  0086               	movwf	6
  2066  0264  0187               	clrf	7
  2067  0265  3001               	movlw	1
  2068  0266  0781               	addwf	1,f
  2069  0267  3141               	addfsr 1,1
  2070  0268  1803               	skipnc
  2071  0269  0A81               	incf	1,f
  2072  026A                     l1533:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2075  026A  01CE               	clrf	?_vfpfcnvrt
  2076  026B  01CF               	clrf	?_vfpfcnvrt+1
  2077  026C  2A90               	goto	l724
  2078  026D                     l1537:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2081  026D  084E               	movf	vfpfcnvrt@fmt,w
  2082  026E  0086               	movwf	6
  2083  026F  0187               	clrf	7
  2084  0270  3F40               	moviw [0]fsr1
  2085  0271  00D0               	movwf	??_vfpfcnvrt
  2086  0272  3F41               	moviw [1]fsr1
  2087  0273  00D1               	movwf	??_vfpfcnvrt+1
  2088  0274  0850               	movf	??_vfpfcnvrt,w
  2089  0275  0084               	movwf	4
  2090  0276  0851               	movf	??_vfpfcnvrt+1,w
  2091  0277  0085               	movwf	5
  2092  0278  0800               	movf	0,w	;code access
  2093  0279  00D2               	movwf	??_vfpfcnvrt+2
  2094  027A  01D3               	clrf	??_vfpfcnvrt+3
  2095  027B  0852               	movf	??_vfpfcnvrt+2,w
  2096  027C  00F0               	movwf	fputc@c
  2097  027D  0853               	movf	??_vfpfcnvrt+3,w
  2098  027E  00F1               	movwf	fputc@c+1
  2099  027F  085D               	movf	vfpfcnvrt@fp,w
  2100  0280  00D4               	movwf	??_vfpfcnvrt+4
  2101  0281  0854               	movf	??_vfpfcnvrt+4,w
  2102  0282  00F2               	movwf	fputc@fp
  2103  0283  318F  2725  3181   	fcall	_fputc
  2104  0286                     l1539:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2107  0286  0140               	movlb	0	; select bank0
  2108  0287  084E               	movf	vfpfcnvrt@fmt,w
  2109  0288  0086               	movwf	6
  2110  0289  0187               	clrf	7
  2111  028A  3001               	movlw	1
  2112  028B  0781               	addwf	1,f
  2113  028C  3141               	addfsr 1,1
  2114  028D  1803               	skipnc
  2115  028E  0A81               	incf	1,f
  2116  028F  2A5C               	goto	l1527
  2117  0290                     l724:
  2118  0290  0008               	return
  2119  0291                     __end_of_vfpfcnvrt:
  2120                           
  2121                           	psect	text4
  2122  047C                     __ptext4:	
  2123 ;; *************** function _dtoa *****************
  2124 ;; Defined at:
  2125 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  fp              1    wreg     PTR struct _IO_FILE
  2128 ;;		 -> sprintf@f(5), 
  2129 ;;  d               8   16[BANK0 ] long long 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2132 ;;		 -> sprintf@f(5), 
  2133 ;;  n               8   36[BANK0 ] long long 
  2134 ;;  i               2   44[BANK0 ] int 
  2135 ;;  s               2   34[BANK0 ] int 
  2136 ;;  w               2   32[BANK0 ] int 
  2137 ;;  p               2   30[BANK0 ] int 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   16[BANK0 ] int 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2147 ;;      Params:         0       8       0       0       0       0       0       0
  2148 ;;      Locals:         0      19       0       0       0       0       0       0
  2149 ;;      Temps:          0       3       0       0       0       0       0       0
  2150 ;;      Totals:         0      30       0       0       0       0       0       0
  2151 ;;Total ram usage:       30 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    4
  2154 ;; This function calls:
  2155 ;;		___aodiv
  2156 ;;		___aomod
  2157 ;;		_abs
  2158 ;;		_pad
  2159 ;; This function is called by:
  2160 ;;		_vfpfcnvrt
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _dtoa
  2166  047C                     _dtoa:
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2170                           ;dtoa@fp stored from wreg
  2171  047C  0140               	movlb	0	; select bank0
  2172  047D  00BD               	movwf	dtoa@fp
  2173  047E                     l1443:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2176  047E  0830               	movf	dtoa@d,w
  2177  047F  00C4               	movwf	dtoa@n
  2178  0480  0831               	movf	dtoa@d+1,w
  2179  0481  00C5               	movwf	dtoa@n+1
  2180  0482  0832               	movf	dtoa@d+2,w
  2181  0483  00C6               	movwf	dtoa@n+2
  2182  0484  0833               	movf	dtoa@d+3,w
  2183  0485  00C7               	movwf	dtoa@n+3
  2184  0486  0834               	movf	dtoa@d+4,w
  2185  0487  00C8               	movwf	dtoa@n+4
  2186  0488  0835               	movf	dtoa@d+5,w
  2187  0489  00C9               	movwf	dtoa@n+5
  2188  048A  0836               	movf	dtoa@d+6,w
  2189  048B  00CA               	movwf	dtoa@n+6
  2190  048C  0837               	movf	dtoa@d+7,w
  2191  048D  00CB               	movwf	dtoa@n+7
  2192  048E                     l1445:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2195  048E  3044               	movlw	low dtoa@n
  2196  048F  0086               	movwf	6
  2197  0490  3000               	movlw	high dtoa@n
  2198  0491  0087               	movwf	7
  2199  0492  3F47               	moviw [7]fsr1
  2200  0493  00B8               	movwf	??_dtoa
  2201  0494  1BB8               	btfsc	??_dtoa,7
  2202  0495  2C97               	goto	u1151
  2203  0496  2C99               	goto	u1150
  2204  0497                     u1151:
  2205  0497  3001               	movlw	1
  2206  0498  2C9A               	goto	u1160
  2207  0499                     u1150:
  2208  0499  3000               	movlw	0
  2209  049A                     u1160:
  2210  049A  0140               	movlb	0	; select bank0
  2211  049B  00B9               	movwf	??_dtoa+1
  2212  049C  01BA               	clrf	??_dtoa+2
  2213  049D  0839               	movf	??_dtoa+1,w
  2214  049E  00C2               	movwf	dtoa@s
  2215  049F  083A               	movf	??_dtoa+2,w
  2216  04A0  00C3               	movwf	dtoa@s+1
  2217  04A1                     l1447:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2220  04A1  0842               	movf	dtoa@s,w
  2221  04A2  0443               	iorwf	dtoa@s+1,w
  2222  04A3  1903               	btfsc	3,2
  2223  04A4  2CA6               	goto	u1171
  2224  04A5  2CA7               	goto	u1170
  2225  04A6                     u1171:
  2226  04A6  2CC5               	goto	l694
  2227  04A7                     u1170:
  2228  04A7                     l1449:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2231  04A7  09C4               	comf	dtoa@n,f
  2232  04A8  09C5               	comf	dtoa@n+1,f
  2233  04A9  09C6               	comf	dtoa@n+2,f
  2234  04AA  09C7               	comf	dtoa@n+3,f
  2235  04AB  09C8               	comf	dtoa@n+4,f
  2236  04AC  09C9               	comf	dtoa@n+5,f
  2237  04AD  09CA               	comf	dtoa@n+6,f
  2238  04AE  09CB               	comf	dtoa@n+7,f
  2239  04AF  0AC4               	incf	dtoa@n,f
  2240  04B0  1D03               	skipz
  2241  04B1  2CC5               	goto	u118lld
  2242  04B2  0AC5               	incf	dtoa@n+1,f
  2243  04B3  1D03               	skipz
  2244  04B4  2CC5               	goto	u118lld
  2245  04B5  0AC6               	incf	dtoa@n+2,f
  2246  04B6  1D03               	skipz
  2247  04B7  2CC5               	goto	u118lld
  2248  04B8  0AC7               	incf	dtoa@n+3,f
  2249  04B9  1D03               	skipz
  2250  04BA  2CC5               	goto	u118lld
  2251  04BB  0AC8               	incf	dtoa@n+4,f
  2252  04BC  1D03               	skipz
  2253  04BD  2CC5               	goto	u118lld
  2254  04BE  0AC9               	incf	dtoa@n+5,f
  2255  04BF  1D03               	skipz
  2256  04C0  2CC5               	goto	u118lld
  2257  04C1  0ACA               	incf	dtoa@n+6,f
  2258  04C2  1D03               	skipz
  2259  04C3  2CC5               	goto	u118lld
  2260  04C4  0ACB               	incf	dtoa@n+7,f
  2261  04C5                     u118lld:
  2262  04C5                     l694:	
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  2264                           
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2267  04C5  0141               	movlb	1	; select bank1
  2268  04C6  1BA5               	btfsc	(_prec+1)^(0+128),7
  2269  04C7  2CC9               	goto	u1191
  2270  04C8  2CCA               	goto	u1190
  2271  04C9                     u1191:
  2272  04C9  2CCF               	goto	l695
  2273  04CA                     u1190:
  2274  04CA                     l1451:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2277  04CA  30FD               	movlw	253
  2278  04CB  0140               	movlb	0	; select bank0
  2279  04CC  05EC               	andwf	_flags,f
  2280  04CD  30FF               	movlw	255
  2281  04CE  05ED               	andwf	_flags+1,f
  2282  04CF                     l695:	
  2283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  2284                           
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2287  04CF  0141               	movlb	1	; select bank1
  2288  04D0  0825               	movf	(_prec+1)^(0+128),w
  2289  04D1  3A80               	xorlw	128
  2290  04D2  0140               	movlb	0	; select bank0
  2291  04D3  00B8               	movwf	??_dtoa
  2292  04D4  3080               	movlw	128
  2293  04D5  0238               	subwf	??_dtoa,w
  2294  04D6  1D03               	skipz
  2295  04D7  2CDB               	goto	u1205
  2296  04D8  3001               	movlw	1
  2297  04D9  0141               	movlb	1	; select bank1
  2298  04DA  0224               	subwf	_prec^(0+128),w
  2299  04DB                     u1205:
  2300  04DB  1803               	skipnc
  2301  04DC  2CDE               	goto	u1201
  2302  04DD  2CDF               	goto	u1200
  2303  04DE                     u1201:
  2304  04DE  2CE5               	goto	l1455
  2305  04DF                     u1200:
  2306  04DF                     l1453:
  2307  04DF  3001               	movlw	1
  2308  04E0  0140               	movlb	0	; select bank0
  2309  04E1  00BE               	movwf	dtoa@p
  2310  04E2  3000               	movlw	0
  2311  04E3  00BF               	movwf	dtoa@p+1
  2312  04E4  2CED               	goto	l699
  2313  04E5                     l1455:
  2314  04E5  0141               	movlb	1	; select bank1
  2315  04E6  0825               	movf	(_prec+1)^(0+128),w
  2316  04E7  0140               	movlb	0	; select bank0
  2317  04E8  00BF               	movwf	dtoa@p+1
  2318  04E9  0141               	movlb	1	; select bank1
  2319  04EA  0824               	movf	_prec^(0+128),w
  2320  04EB  0140               	movlb	0	; select bank0
  2321  04EC  00BE               	movwf	dtoa@p
  2322  04ED                     l699:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2325  04ED  0141               	movlb	1	; select bank1
  2326  04EE  0823               	movf	(_width+1)^(0+128),w
  2327  04EF  0140               	movlb	0	; select bank0
  2328  04F0  00C1               	movwf	dtoa@w+1
  2329  04F1  0141               	movlb	1	; select bank1
  2330  04F2  0822               	movf	_width^(0+128),w
  2331  04F3  0140               	movlb	0	; select bank0
  2332  04F4  00C0               	movwf	dtoa@w
  2333  04F5                     l1457:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2336  04F5  0842               	movf	dtoa@s,w
  2337  04F6  0443               	iorwf	dtoa@s+1,w
  2338  04F7  1D03               	btfss	3,2
  2339  04F8  2CFA               	goto	u1211
  2340  04F9  2CFB               	goto	u1210
  2341  04FA                     u1211:
  2342  04FA  2CFF               	goto	l1461
  2343  04FB                     u1210:
  2344  04FB                     l1459:
  2345  04FB  1D6C               	btfss	_flags,2
  2346  04FC  2CFE               	goto	u1221
  2347  04FD  2CFF               	goto	u1220
  2348  04FE                     u1221:
  2349  04FE  2D03               	goto	l700
  2350  04FF                     u1220:
  2351  04FF                     l1461:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2354  04FF  30FF               	movlw	255
  2355  0500  07C0               	addwf	dtoa@w,f
  2356  0501  30FF               	movlw	255
  2357  0502  3DC1               	addwfc	dtoa@w+1,f
  2358  0503                     l700:	
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  2360                           
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2363  0503  301F               	movlw	31
  2364  0504  00CC               	movwf	dtoa@i
  2365  0505  3000               	movlw	0
  2366  0506  00CD               	movwf	dtoa@i+1
  2367  0507                     l1463:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2370  0507  0141               	movlb	1	; select bank1
  2371  0508  01C9               	clrf	(_dbuf^(0+128)+31)
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2374  0509  2D72               	goto	l703
  2375  050A                     l1465:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2378  050A  30FF               	movlw	255
  2379  050B  0140               	movlb	0	; select bank0
  2380  050C  07CC               	addwf	dtoa@i,f
  2381  050D  30FF               	movlw	255
  2382  050E  3DCD               	addwfc	dtoa@i+1,f
  2383  050F                     l1467:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2386  050F  300A               	movlw	10
  2387  0510  00A0               	movwf	___aomod@divisor
  2388  0511  01A1               	clrf	___aomod@divisor+1
  2389  0512  01A2               	clrf	___aomod@divisor+2
  2390  0513  01A3               	clrf	___aomod@divisor+3
  2391  0514  01A4               	clrf	___aomod@divisor+4
  2392  0515  01A5               	clrf	___aomod@divisor+5
  2393  0516  01A6               	clrf	___aomod@divisor+6
  2394  0517  01A7               	clrf	___aomod@divisor+7
  2395  0518  0844               	movf	dtoa@n,w
  2396  0519  00A8               	movwf	___aomod@dividend
  2397  051A  0845               	movf	dtoa@n+1,w
  2398  051B  00A9               	movwf	___aomod@dividend+1
  2399  051C  0846               	movf	dtoa@n+2,w
  2400  051D  00AA               	movwf	___aomod@dividend+2
  2401  051E  0847               	movf	dtoa@n+3,w
  2402  051F  00AB               	movwf	___aomod@dividend+3
  2403  0520  0848               	movf	dtoa@n+4,w
  2404  0521  00AC               	movwf	___aomod@dividend+4
  2405  0522  0849               	movf	dtoa@n+5,w
  2406  0523  00AD               	movwf	___aomod@dividend+5
  2407  0524  084A               	movf	dtoa@n+6,w
  2408  0525  00AE               	movwf	___aomod@dividend+6
  2409  0526  084B               	movf	dtoa@n+7,w
  2410  0527  00AF               	movwf	___aomod@dividend+7
  2411  0528  3182  2291  3184   	fcall	___aomod
  2412  052B  0140               	movlb	0	; select bank0
  2413  052C  0821               	movf	?___aomod+1,w
  2414  052D  00F4               	movwf	abs@a+1
  2415  052E  0820               	movf	?___aomod,w
  2416  052F  00F3               	movwf	abs@a
  2417  0530  318E  260A  3184   	fcall	_abs
  2418  0533  0873               	movf	?_abs,w
  2419  0534  3E30               	addlw	48
  2420  0535  0140               	movlb	0	; select bank0
  2421  0536  00B8               	movwf	??_dtoa
  2422  0537  084C               	movf	dtoa@i,w
  2423  0538  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2424  0539  0086               	movwf	6
  2425  053A  0187               	clrf	7
  2426  053B  0838               	movf	??_dtoa,w
  2427  053C  0081               	movwf	1
  2428  053D                     l1469:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2431  053D  30FF               	movlw	255
  2432  053E  07BE               	addwf	dtoa@p,f
  2433  053F  30FF               	movlw	255
  2434  0540  3DBF               	addwfc	dtoa@p+1,f
  2435  0541                     l1471:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2438  0541  30FF               	movlw	255
  2439  0542  07C0               	addwf	dtoa@w,f
  2440  0543  30FF               	movlw	255
  2441  0544  3DC1               	addwfc	dtoa@w+1,f
  2442  0545                     l1473:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2445  0545  300A               	movlw	10
  2446  0546  00A0               	movwf	___aodiv@divisor
  2447  0547  01A1               	clrf	___aodiv@divisor+1
  2448  0548  01A2               	clrf	___aodiv@divisor+2
  2449  0549  01A3               	clrf	___aodiv@divisor+3
  2450  054A  01A4               	clrf	___aodiv@divisor+4
  2451  054B  01A5               	clrf	___aodiv@divisor+5
  2452  054C  01A6               	clrf	___aodiv@divisor+6
  2453  054D  01A7               	clrf	___aodiv@divisor+7
  2454  054E  0844               	movf	dtoa@n,w
  2455  054F  00A8               	movwf	___aodiv@dividend
  2456  0550  0845               	movf	dtoa@n+1,w
  2457  0551  00A9               	movwf	___aodiv@dividend+1
  2458  0552  0846               	movf	dtoa@n+2,w
  2459  0553  00AA               	movwf	___aodiv@dividend+2
  2460  0554  0847               	movf	dtoa@n+3,w
  2461  0555  00AB               	movwf	___aodiv@dividend+3
  2462  0556  0848               	movf	dtoa@n+4,w
  2463  0557  00AC               	movwf	___aodiv@dividend+4
  2464  0558  0849               	movf	dtoa@n+5,w
  2465  0559  00AD               	movwf	___aodiv@dividend+5
  2466  055A  084A               	movf	dtoa@n+6,w
  2467  055B  00AE               	movwf	___aodiv@dividend+6
  2468  055C  084B               	movf	dtoa@n+7,w
  2469  055D  00AF               	movwf	___aodiv@dividend+7
  2470  055E  3183  237B  3184   	fcall	___aodiv
  2471  0561  0140               	movlb	0	; select bank0
  2472  0562  0820               	movf	?___aodiv,w
  2473  0563  00C4               	movwf	dtoa@n
  2474  0564  0821               	movf	?___aodiv+1,w
  2475  0565  00C5               	movwf	dtoa@n+1
  2476  0566  0822               	movf	?___aodiv+2,w
  2477  0567  00C6               	movwf	dtoa@n+2
  2478  0568  0823               	movf	?___aodiv+3,w
  2479  0569  00C7               	movwf	dtoa@n+3
  2480  056A  0824               	movf	?___aodiv+4,w
  2481  056B  00C8               	movwf	dtoa@n+4
  2482  056C  0825               	movf	?___aodiv+5,w
  2483  056D  00C9               	movwf	dtoa@n+5
  2484  056E  0826               	movf	?___aodiv+6,w
  2485  056F  00CA               	movwf	dtoa@n+6
  2486  0570  0827               	movf	?___aodiv+7,w
  2487  0571  00CB               	movwf	dtoa@n+7
  2488  0572                     l703:	
  2489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  2490                           
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2493  0572  0140               	movlb	0	; select bank0
  2494  0573  084D               	movf	dtoa@i+1,w
  2495  0574  3A80               	xorlw	128
  2496  0575  00B8               	movwf	??_dtoa
  2497  0576  3080               	movlw	128
  2498  0577  0238               	subwf	??_dtoa,w
  2499  0578  1D03               	skipz
  2500  0579  2D7C               	goto	u1235
  2501  057A  3001               	movlw	1
  2502  057B  024C               	subwf	dtoa@i,w
  2503  057C                     u1235:
  2504  057C  1C03               	skipc
  2505  057D  2D7F               	goto	u1231
  2506  057E  2D80               	goto	u1230
  2507  057F                     u1231:
  2508  057F  2DAD               	goto	l1483
  2509  0580                     u1230:
  2510  0580                     l1475:
  2511  0580  0140               	movlb	0	; select bank0
  2512  0581  0844               	movf	dtoa@n,w
  2513  0582  0445               	iorwf	dtoa@n+1,w
  2514  0583  0446               	iorwf	dtoa@n+2,w
  2515  0584  0447               	iorwf	dtoa@n+3,w
  2516  0585  0448               	iorwf	dtoa@n+4,w
  2517  0586  0449               	iorwf	dtoa@n+5,w
  2518  0587  044A               	iorwf	dtoa@n+6,w
  2519  0588  044B               	iorwf	dtoa@n+7,w
  2520  0589  1D03               	skipz
  2521  058A  2D8C               	goto	u1241
  2522  058B  2D8D               	goto	u1240
  2523  058C                     u1241:
  2524  058C  2D0A               	goto	l1465
  2525  058D                     u1240:
  2526  058D                     l1477:
  2527  058D  083F               	movf	dtoa@p+1,w
  2528  058E  3A80               	xorlw	128
  2529  058F  00B8               	movwf	??_dtoa
  2530  0590  3080               	movlw	128
  2531  0591  0238               	subwf	??_dtoa,w
  2532  0592  1D03               	skipz
  2533  0593  2D96               	goto	u1255
  2534  0594  3001               	movlw	1
  2535  0595  023E               	subwf	dtoa@p,w
  2536  0596                     u1255:
  2537  0596  1803               	skipnc
  2538  0597  2D99               	goto	u1251
  2539  0598  2D9A               	goto	u1250
  2540  0599                     u1251:
  2541  0599  2D0A               	goto	l1465
  2542  059A                     u1250:
  2543  059A                     l1479:
  2544  059A  0140               	movlb	0	; select bank0
  2545  059B  0841               	movf	dtoa@w+1,w
  2546  059C  3A80               	xorlw	128
  2547  059D  00B8               	movwf	??_dtoa
  2548  059E  3080               	movlw	128
  2549  059F  0238               	subwf	??_dtoa,w
  2550  05A0  1D03               	skipz
  2551  05A1  2DA4               	goto	u1265
  2552  05A2  3001               	movlw	1
  2553  05A3  0240               	subwf	dtoa@w,w
  2554  05A4                     u1265:
  2555  05A4  1C03               	skipc
  2556  05A5  2DA7               	goto	u1261
  2557  05A6  2DA8               	goto	u1260
  2558  05A7                     u1261:
  2559  05A7  2DAD               	goto	l1483
  2560  05A8                     u1260:
  2561  05A8                     l1481:
  2562  05A8  0140               	movlb	0	; select bank0
  2563  05A9  18EC               	btfsc	_flags,1
  2564  05AA  2DAC               	goto	u1271
  2565  05AB  2DAD               	goto	u1270
  2566  05AC                     u1271:
  2567  05AC  2D0A               	goto	l1465
  2568  05AD                     u1270:
  2569  05AD                     l1483:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2572  05AD  0140               	movlb	0	; select bank0
  2573  05AE  0842               	movf	dtoa@s,w
  2574  05AF  0443               	iorwf	dtoa@s+1,w
  2575  05B0  1D03               	btfss	3,2
  2576  05B1  2DB3               	goto	u1281
  2577  05B2  2DB4               	goto	u1280
  2578  05B3                     u1281:
  2579  05B3  2DB8               	goto	l1487
  2580  05B4                     u1280:
  2581  05B4                     l1485:
  2582  05B4  1D6C               	btfss	_flags,2
  2583  05B5  2DB7               	goto	u1291
  2584  05B6  2DB8               	goto	u1290
  2585  05B7                     u1291:
  2586  05B7  2DD3               	goto	l1497
  2587  05B8                     u1290:
  2588  05B8                     l1487:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2591  05B8  30FF               	movlw	255
  2592  05B9  07CC               	addwf	dtoa@i,f
  2593  05BA  30FF               	movlw	255
  2594  05BB  3DCD               	addwfc	dtoa@i+1,f
  2595  05BC                     l1489:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2598  05BC  0842               	movf	dtoa@s,w
  2599  05BD  0443               	iorwf	dtoa@s+1,w
  2600  05BE  1D03               	btfss	3,2
  2601  05BF  2DC1               	goto	u1301
  2602  05C0  2DC2               	goto	u1300
  2603  05C1                     u1301:
  2604  05C1  2DC7               	goto	l1493
  2605  05C2                     u1300:
  2606  05C2                     l1491:
  2607  05C2  302B               	movlw	43
  2608  05C3  00BB               	movwf	_dtoa$635
  2609  05C4  3000               	movlw	0
  2610  05C5  00BC               	movwf	_dtoa$635+1
  2611  05C6  2DCB               	goto	l1495
  2612  05C7                     l1493:
  2613  05C7  302D               	movlw	45
  2614  05C8  00BB               	movwf	_dtoa$635
  2615  05C9  3000               	movlw	0
  2616  05CA  00BC               	movwf	_dtoa$635+1
  2617  05CB                     l1495:
  2618  05CB  083B               	movf	_dtoa$635,w
  2619  05CC  00B8               	movwf	??_dtoa
  2620  05CD  084C               	movf	dtoa@i,w
  2621  05CE  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2622  05CF  0086               	movwf	6
  2623  05D0  0187               	clrf	7
  2624  05D1  0838               	movf	??_dtoa,w
  2625  05D2  0081               	movwf	1
  2626  05D3                     l1497:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2629  05D3  084C               	movf	dtoa@i,w
  2630  05D4  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2631  05D5  00B8               	movwf	??_dtoa
  2632  05D6  0838               	movf	??_dtoa,w
  2633  05D7  00A4               	movwf	pad@buf
  2634  05D8  0841               	movf	dtoa@w+1,w
  2635  05D9  00A6               	movwf	pad@p+1
  2636  05DA  0840               	movf	dtoa@w,w
  2637  05DB  00A5               	movwf	pad@p
  2638  05DC  083D               	movf	dtoa@fp,w
  2639  05DD  3180  2039  3184   	fcall	_pad
  2640  05E0  0140               	movlb	0	; select bank0
  2641  05E1  0825               	movf	?_pad+1,w
  2642  05E2  00B1               	movwf	?_dtoa+1
  2643  05E3  0824               	movf	?_pad,w
  2644  05E4  00B0               	movwf	?_dtoa
  2645  05E5                     l717:
  2646  05E5  0008               	return
  2647  05E6                     __end_of_dtoa:
  2648                           
  2649                           	psect	text5
  2650  0039                     __ptext5:	
  2651 ;; *************** function _pad *****************
  2652 ;; Defined at:
  2653 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  fp              1    wreg     PTR struct _IO_FILE
  2656 ;;		 -> sprintf@f(5), 
  2657 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2658 ;;		 -> dbuf(32), 
  2659 ;;  p               2    5[BANK0 ] int 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2662 ;;		 -> sprintf@f(5), 
  2663 ;;  w               2    9[BANK0 ] int 
  2664 ;;  i               2    7[BANK0 ] int 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    4[BANK0 ] int 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2674 ;;      Params:         0       3       0       0       0       0       0       0
  2675 ;;      Locals:         0       5       0       0       0       0       0       0
  2676 ;;      Temps:          1       0       0       0       0       0       0       0
  2677 ;;      Totals:         1       8       0       0       0       0       0       0
  2678 ;;Total ram usage:        9 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    3
  2681 ;; This function calls:
  2682 ;;		_fputc
  2683 ;;		_fputs
  2684 ;;		_strlen
  2685 ;; This function is called by:
  2686 ;;		_dtoa
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _pad
  2692  0039                     _pad:
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2696                           ;pad@fp stored from wreg
  2697  0039  0140               	movlb	0	; select bank0
  2698  003A  00AB               	movwf	pad@fp
  2699  003B                     l1417:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2702  003B  1C6C               	btfss	_flags,0
  2703  003C  283E               	goto	u1101
  2704  003D  283F               	goto	u1100
  2705  003E                     u1101:
  2706  003E  2847               	goto	l1421
  2707  003F                     u1100:
  2708  003F                     l1419:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2711  003F  082B               	movf	pad@fp,w
  2712  0040  00FC               	movwf	??_pad
  2713  0041  087C               	movf	??_pad,w
  2714  0042  00F8               	movwf	fputs@fp
  2715  0043  0824               	movf	pad@buf,w
  2716  0044  318E  2669  3180   	fcall	_fputs
  2717  0047                     l1421:
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2720  0047  0140               	movlb	0	; select bank0
  2721  0048  1BA6               	btfsc	pad@p+1,7
  2722  0049  284B               	goto	u1111
  2723  004A  284C               	goto	u1110
  2724  004B                     u1111:
  2725  004B  2851               	goto	l1425
  2726  004C                     u1110:
  2727  004C                     l1423:
  2728  004C  0826               	movf	pad@p+1,w
  2729  004D  00AA               	movwf	pad@w+1
  2730  004E  0825               	movf	pad@p,w
  2731  004F  00A9               	movwf	pad@w
  2732  0050  2853               	goto	l686
  2733  0051                     l1425:
  2734  0051  01A9               	clrf	pad@w
  2735  0052  01AA               	clrf	pad@w+1
  2736  0053                     l686:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2739  0053  01A7               	clrf	pad@i
  2740  0054  01A8               	clrf	pad@i+1
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2743  0055  2867               	goto	l1431
  2744  0056                     l1427:
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2747  0056  3020               	movlw	32
  2748  0057  00F0               	movwf	fputc@c
  2749  0058  3000               	movlw	0
  2750  0059  00F1               	movwf	fputc@c+1
  2751  005A  0140               	movlb	0	; select bank0
  2752  005B  082B               	movf	pad@fp,w
  2753  005C  00FC               	movwf	??_pad
  2754  005D  087C               	movf	??_pad,w
  2755  005E  00F2               	movwf	fputc@fp
  2756  005F  318F  2725  3180   	fcall	_fputc
  2757  0062                     l1429:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2760  0062  3001               	movlw	1
  2761  0063  0140               	movlb	0	; select bank0
  2762  0064  07A7               	addwf	pad@i,f
  2763  0065  3000               	movlw	0
  2764  0066  3DA8               	addwfc	pad@i+1,f
  2765  0067                     l1431:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2768  0067  0828               	movf	pad@i+1,w
  2769  0068  3A80               	xorlw	128
  2770  0069  00FC               	movwf	??_pad
  2771  006A  082A               	movf	pad@w+1,w
  2772  006B  3A80               	xorlw	128
  2773  006C  027C               	subwf	??_pad,w
  2774  006D  1D03               	skipz
  2775  006E  2871               	goto	u1125
  2776  006F  0829               	movf	pad@w,w
  2777  0070  0227               	subwf	pad@i,w
  2778  0071                     u1125:
  2779  0071  1C03               	skipc
  2780  0072  2874               	goto	u1121
  2781  0073  2875               	goto	u1120
  2782  0074                     u1121:
  2783  0074  2856               	goto	l1427
  2784  0075                     u1120:
  2785  0075                     l689:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2788  0075  0140               	movlb	0	; select bank0
  2789  0076  186C               	btfsc	_flags,0
  2790  0077  2879               	goto	u1131
  2791  0078  287A               	goto	u1130
  2792  0079                     u1131:
  2793  0079  2882               	goto	l1435
  2794  007A                     u1130:
  2795  007A                     l1433:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2798  007A  082B               	movf	pad@fp,w
  2799  007B  00FC               	movwf	??_pad
  2800  007C  087C               	movf	??_pad,w
  2801  007D  00F8               	movwf	fputs@fp
  2802  007E  0824               	movf	pad@buf,w
  2803  007F  318E  2669  3180   	fcall	_fputs
  2804  0082                     l1435:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2807  0082  0140               	movlb	0	; select bank0
  2808  0083  0824               	movf	pad@buf,w
  2809  0084  318D  25F1  3180   	fcall	_strlen
  2810  0087  0140               	movlb	0	; select bank0
  2811  0088  0829               	movf	pad@w,w
  2812  0089  0770               	addwf	?_strlen,w
  2813  008A  00A4               	movwf	?_pad
  2814  008B  082A               	movf	pad@w+1,w
  2815  008C  3D71               	addwfc	?_strlen+1,w
  2816  008D  00A5               	movwf	?_pad+1
  2817  008E                     l691:
  2818  008E  0008               	return
  2819  008F                     __end_of_pad:
  2820                           
  2821                           	psect	text6
  2822  0DF1                     __ptext6:	
  2823 ;; *************** function _strlen *****************
  2824 ;; Defined at:
  2825 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  s               1    wreg     PTR const unsigned char 
  2828 ;;		 -> dbuf(32), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  s               1    4[COMMON] PTR const unsigned char 
  2831 ;;		 -> dbuf(32), 
  2832 ;;  a               1    3[COMMON] PTR const unsigned char 
  2833 ;;		 -> dbuf(32), 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2    0[COMMON] unsigned int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2843 ;;      Params:         2       0       0       0       0       0       0       0
  2844 ;;      Locals:         2       0       0       0       0       0       0       0
  2845 ;;      Temps:          1       0       0       0       0       0       0       0
  2846 ;;      Totals:         5       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        5 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_pad
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _strlen
  2858  0DF1                     _strlen:
  2859                           
  2860                           ;incstack = 0
  2861                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2862                           ;strlen@s stored from wreg
  2863  0DF1  00F4               	movwf	strlen@s
  2864  0DF2                     l1339:
  2865  0DF2  0874               	movf	strlen@s,w
  2866  0DF3  00F2               	movwf	??_strlen
  2867  0DF4  0872               	movf	??_strlen,w
  2868  0DF5  00F3               	movwf	strlen@a
  2869  0DF6  2DFB               	goto	l1343
  2870  0DF7                     l1341:
  2871  0DF7  3001               	movlw	1
  2872  0DF8  00F2               	movwf	??_strlen
  2873  0DF9  0872               	movf	??_strlen,w
  2874  0DFA  07F4               	addwf	strlen@s,f
  2875  0DFB                     l1343:
  2876  0DFB  0874               	movf	strlen@s,w
  2877  0DFC  0086               	movwf	6
  2878  0DFD  0187               	clrf	7
  2879  0DFE  0801               	movf	1,w
  2880  0DFF  1D03               	btfss	3,2
  2881  0E00  2E02               	goto	u881
  2882  0E01  2E03               	goto	u880
  2883  0E02                     u881:
  2884  0E02  2DF7               	goto	l1341
  2885  0E03                     u880:
  2886  0E03                     l1345:
  2887  0E03  0873               	movf	strlen@a,w
  2888  0E04  0274               	subwf	strlen@s,w
  2889  0E05  00F0               	movwf	?_strlen
  2890  0E06  01F1               	clrf	?_strlen+1
  2891  0E07  1BF0               	btfsc	?_strlen,7
  2892  0E08  03F1               	decf	?_strlen+1,f
  2893  0E09                     l767:
  2894  0E09  0008               	return
  2895  0E0A                     __end_of_strlen:
  2896                           
  2897                           	psect	text7
  2898  0E69                     __ptext7:	
  2899 ;; *************** function _fputs *****************
  2900 ;; Defined at:
  2901 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  s               1    wreg     PTR const unsigned char 
  2904 ;;		 -> dbuf(32), 
  2905 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2906 ;;		 -> sprintf@f(5), 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2909 ;;		 -> dbuf(32), 
  2910 ;;  i               2    1[BANK0 ] int 
  2911 ;;  c               1    0[BANK0 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2    8[COMMON] int 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2921 ;;      Params:         1       0       0       0       0       0       0       0
  2922 ;;      Locals:         0       4       0       0       0       0       0       0
  2923 ;;      Temps:          3       0       0       0       0       0       0       0
  2924 ;;      Totals:         4       4       0       0       0       0       0       0
  2925 ;;Total ram usage:        8 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    2
  2928 ;; This function calls:
  2929 ;;		_fputc
  2930 ;; This function is called by:
  2931 ;;		_pad
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _fputs
  2937  0E69                     _fputs:
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2941                           ;fputs@s stored from wreg
  2942  0E69  0140               	movlb	0	; select bank0
  2943  0E6A  00A3               	movwf	fputs@s
  2944  0E6B                     l1331:
  2945  0E6B  01A1               	clrf	fputs@i
  2946  0E6C  01A2               	clrf	fputs@i+1
  2947  0E6D  2E81               	goto	l1337
  2948  0E6E                     l1333:
  2949  0E6E  0820               	movf	fputs@c,w
  2950  0E6F  00F9               	movwf	??_fputs
  2951  0E70  01FA               	clrf	??_fputs+1
  2952  0E71  0879               	movf	??_fputs,w
  2953  0E72  00F0               	movwf	fputc@c
  2954  0E73  087A               	movf	??_fputs+1,w
  2955  0E74  00F1               	movwf	fputc@c+1
  2956  0E75  0878               	movf	fputs@fp,w
  2957  0E76  00FB               	movwf	??_fputs+2
  2958  0E77  087B               	movf	??_fputs+2,w
  2959  0E78  00F2               	movwf	fputc@fp
  2960  0E79  318F  2725  318E   	fcall	_fputc
  2961  0E7C                     l1335:
  2962  0E7C  3001               	movlw	1
  2963  0E7D  0140               	movlb	0	; select bank0
  2964  0E7E  07A1               	addwf	fputs@i,f
  2965  0E7F  3000               	movlw	0
  2966  0E80  3DA2               	addwfc	fputs@i+1,f
  2967  0E81                     l1337:
  2968  0E81  0821               	movf	fputs@i,w
  2969  0E82  0723               	addwf	fputs@s,w
  2970  0E83  00F9               	movwf	??_fputs
  2971  0E84  0879               	movf	??_fputs,w
  2972  0E85  0086               	movwf	6
  2973  0E86  0187               	clrf	7
  2974  0E87  0801               	movf	1,w
  2975  0E88  00FA               	movwf	??_fputs+1
  2976  0E89  087A               	movf	??_fputs+1,w
  2977  0E8A  00A0               	movwf	fputs@c
  2978  0E8B  0820               	movf	fputs@c,w
  2979  0E8C  1D03               	btfss	3,2
  2980  0E8D  2E8F               	goto	u871
  2981  0E8E  2E90               	goto	u870
  2982  0E8F                     u871:
  2983  0E8F  2E6E               	goto	l1333
  2984  0E90                     u870:
  2985  0E90                     l758:
  2986  0E90  0008               	return
  2987  0E91                     __end_of_fputs:
  2988                           
  2989                           	psect	text8
  2990  0F25                     __ptext8:	
  2991 ;; *************** function _fputc *****************
  2992 ;; Defined at:
  2993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  c               2    0[COMMON] int 
  2996 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2997 ;;		 -> sprintf@f(5), 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  2    0[COMMON] int 
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3009 ;;      Params:         3       0       0       0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0
  3011 ;;      Temps:          5       0       0       0       0       0       0       0
  3012 ;;      Totals:         8       0       0       0       0       0       0       0
  3013 ;;Total ram usage:        8 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    1
  3016 ;; This function calls:
  3017 ;;		_putch
  3018 ;; This function is called by:
  3019 ;;		_pad
  3020 ;;		_vfpfcnvrt
  3021 ;;		_fputs
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _fputc
  3027  0F25                     _fputc:
  3028  0F25                     l1315:	
  3029                           ;incstack = 0
  3030                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3031                           
  3032  0F25  0872               	movf	fputc@fp,w
  3033  0F26  1903               	btfsc	3,2
  3034  0F27  2F29               	goto	u831
  3035  0F28  2F2A               	goto	u830
  3036  0F29                     u831:
  3037  0F29  2F2F               	goto	l1319
  3038  0F2A                     u830:
  3039  0F2A                     l1317:
  3040  0F2A  0872               	movf	fputc@fp,w
  3041  0F2B  1D03               	btfss	3,2
  3042  0F2C  2F2E               	goto	u841
  3043  0F2D  2F2F               	goto	u840
  3044  0F2E                     u841:
  3045  0F2E  2F34               	goto	l1321
  3046  0F2F                     u840:
  3047  0F2F                     l1319:
  3048  0F2F  0870               	movf	fputc@c,w
  3049  0F30  3180  2007  318F   	fcall	_putch
  3050  0F33  2F73               	goto	l750
  3051  0F34                     l1321:
  3052  0F34  0872               	movf	fputc@fp,w
  3053  0F35  3E03               	addlw	3
  3054  0F36  0086               	movwf	6
  3055  0F37  0187               	clrf	7
  3056  0F38  0016               	moviw fsr1++
  3057  0F39  0401               	iorwf	1,w
  3058  0F3A  1903               	btfsc	3,2
  3059  0F3B  2F3D               	goto	u851
  3060  0F3C  2F3E               	goto	u850
  3061  0F3D                     u851:
  3062  0F3D  2F5B               	goto	l1325
  3063  0F3E                     u850:
  3064  0F3E                     l1323:
  3065  0F3E  0872               	movf	fputc@fp,w
  3066  0F3F  3E03               	addlw	3
  3067  0F40  0086               	movwf	6
  3068  0F41  0187               	clrf	7
  3069  0F42  3F40               	moviw [0]fsr1
  3070  0F43  00F3               	movwf	??_fputc
  3071  0F44  3F41               	moviw [1]fsr1
  3072  0F45  00F4               	movwf	??_fputc+1
  3073  0F46  0A72               	incf	fputc@fp,w
  3074  0F47  0086               	movwf	6
  3075  0F48  0187               	clrf	7
  3076  0F49  3F40               	moviw [0]fsr1
  3077  0F4A  00F5               	movwf	??_fputc+2
  3078  0F4B  3F41               	moviw [1]fsr1
  3079  0F4C  00F6               	movwf	??_fputc+3
  3080  0F4D  0876               	movf	??_fputc+3,w
  3081  0F4E  3A80               	xorlw	128
  3082  0F4F  00F7               	movwf	??_fputc+4
  3083  0F50  0874               	movf	??_fputc+1,w
  3084  0F51  3A80               	xorlw	128
  3085  0F52  0277               	subwf	??_fputc+4,w
  3086  0F53  1D03               	skipz
  3087  0F54  2F57               	goto	u865
  3088  0F55  0873               	movf	??_fputc,w
  3089  0F56  0275               	subwf	??_fputc+2,w
  3090  0F57                     u865:
  3091  0F57  1803               	skipnc
  3092  0F58  2F5A               	goto	u861
  3093  0F59  2F5B               	goto	u860
  3094  0F5A                     u861:
  3095  0F5A  2F73               	goto	l750
  3096  0F5B                     u860:
  3097  0F5B                     l1325:
  3098  0F5B  0870               	movf	fputc@c,w
  3099  0F5C  00F3               	movwf	??_fputc
  3100  0F5D  0872               	movf	fputc@fp,w
  3101  0F5E  0086               	movwf	6
  3102  0F5F  0187               	clrf	7
  3103  0F60  0A72               	incf	fputc@fp,w
  3104  0F61  0084               	movwf	4
  3105  0F62  0185               	clrf	5
  3106  0F63  0800               	movf	0,w
  3107  0F64  0701               	addwf	1,w
  3108  0F65  00F4               	movwf	??_fputc+1
  3109  0F66  0874               	movf	??_fputc+1,w
  3110  0F67  0086               	movwf	6
  3111  0F68  0187               	clrf	7
  3112  0F69  0873               	movf	??_fputc,w
  3113  0F6A  0081               	movwf	1
  3114  0F6B                     l1327:
  3115  0F6B  0A72               	incf	fputc@fp,w
  3116  0F6C  0086               	movwf	6
  3117  0F6D  0187               	clrf	7
  3118  0F6E  3001               	movlw	1
  3119  0F6F  0781               	addwf	1,f
  3120  0F70  3141               	addfsr 1,1
  3121  0F71  1803               	skipnc
  3122  0F72  0A81               	incf	1,f
  3123  0F73                     l750:
  3124  0F73  0008               	return
  3125  0F74                     __end_of_fputc:
  3126                           
  3127                           	psect	text9
  3128  0007                     __ptext9:	
  3129 ;; *************** function _putch *****************
  3130 ;; Defined at:
  3131 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  c               1    wreg     unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  c               1    0[COMMON] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3145 ;;      Params:         0       0       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_fputc
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _putch
  3160  0007                     _putch:
  3161  0007                     l761:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _putch: [wreg]
  3164                           
  3165  0007  0008               	return
  3166  0008                     __end_of_putch:
  3167                           
  3168                           	psect	text10
  3169  0E0A                     __ptext10:	
  3170 ;; *************** function _abs *****************
  3171 ;; Defined at:
  3172 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  a               2    3[COMMON] int 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  2    3[COMMON] int 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3186 ;;      Params:         2       0       0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0
  3188 ;;      Temps:          2       0       0       0       0       0       0       0
  3189 ;;      Totals:         4       0       0       0       0       0       0       0
  3190 ;;Total ram usage:        4 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_dtoa
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _abs
  3201  0E0A                     _abs:
  3202  0E0A                     l1439:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _abs: [wreg+status,2+status,0]
  3205                           
  3206  0E0A  0874               	movf	abs@a+1,w
  3207  0E0B  3A80               	xorlw	128
  3208  0E0C  00F5               	movwf	??_abs
  3209  0E0D  3080               	movlw	128
  3210  0E0E  0275               	subwf	??_abs,w
  3211  0E0F  1D03               	skipz
  3212  0E10  2E13               	goto	u1145
  3213  0E11  3001               	movlw	1
  3214  0E12  0273               	subwf	abs@a,w
  3215  0E13                     u1145:
  3216  0E13  1803               	skipnc
  3217  0E14  2E16               	goto	u1141
  3218  0E15  2E17               	goto	u1140
  3219  0E16                     u1141:
  3220  0E16  2E23               	goto	l735
  3221  0E17                     u1140:
  3222  0E17                     l1441:
  3223  0E17  0973               	comf	abs@a,w
  3224  0E18  00F5               	movwf	??_abs
  3225  0E19  0974               	comf	abs@a+1,w
  3226  0E1A  00F6               	movwf	??_abs+1
  3227  0E1B  0AF5               	incf	??_abs,f
  3228  0E1C  1903               	skipnz
  3229  0E1D  0AF6               	incf	??_abs+1,f
  3230  0E1E  0875               	movf	??_abs,w
  3231  0E1F  00F3               	movwf	?_abs
  3232  0E20  0876               	movf	??_abs+1,w
  3233  0E21  00F4               	movwf	?_abs+1
  3234  0E22  2E23               	goto	l738
  3235  0E23                     l735:
  3236  0E23                     l738:
  3237  0E23  0008               	return
  3238  0E24                     __end_of_abs:
  3239                           
  3240                           	psect	text11
  3241  0291                     __ptext11:	
  3242 ;; *************** function ___aomod *****************
  3243 ;; Defined at:
  3244 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  divisor         8    0[BANK0 ] long long 
  3247 ;;  dividend        8    8[BANK0 ] long long 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  sign            1    2[COMMON] unsigned char 
  3250 ;;  counter         1    1[COMMON] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  8    0[BANK0 ] long long 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3260 ;;      Params:         0      16       0       0       0       0       0       0
  3261 ;;      Locals:         2       0       0       0       0       0       0       0
  3262 ;;      Temps:          1       0       0       0       0       0       0       0
  3263 ;;      Totals:         3      16       0       0       0       0       0       0
  3264 ;;Total ram usage:       19 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_dtoa
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function ___aomod
  3275  0291                     ___aomod:
  3276  0291                     l1387:	
  3277                           ;incstack = 0
  3278                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3279                           
  3280  0291  01F2               	clrf	___aomod@sign
  3281  0292                     l1389:
  3282  0292  3028               	movlw	low ___aomod@dividend
  3283  0293  0086               	movwf	6
  3284  0294  3000               	movlw	high ___aomod@dividend
  3285  0295  0087               	movwf	7
  3286  0296  3F47               	moviw [7]fsr1
  3287  0297  00F0               	movwf	??___aomod
  3288  0298  1FF0               	btfss	??___aomod,7
  3289  0299  2A9B               	goto	u1001
  3290  029A  2A9C               	goto	u1000
  3291  029B                     u1001:
  3292  029B  2ABD               	goto	l1393
  3293  029C                     u1000:
  3294  029C                     l1391:
  3295  029C  0140               	movlb	0	; select bank0
  3296  029D  09A8               	comf	___aomod@dividend,f
  3297  029E  09A9               	comf	___aomod@dividend+1,f
  3298  029F  09AA               	comf	___aomod@dividend+2,f
  3299  02A0  09AB               	comf	___aomod@dividend+3,f
  3300  02A1  09AC               	comf	___aomod@dividend+4,f
  3301  02A2  09AD               	comf	___aomod@dividend+5,f
  3302  02A3  09AE               	comf	___aomod@dividend+6,f
  3303  02A4  09AF               	comf	___aomod@dividend+7,f
  3304  02A5  0AA8               	incf	___aomod@dividend,f
  3305  02A6  1D03               	skipz
  3306  02A7  2ABB               	goto	u101lld
  3307  02A8  0AA9               	incf	___aomod@dividend+1,f
  3308  02A9  1D03               	skipz
  3309  02AA  2ABB               	goto	u101lld
  3310  02AB  0AAA               	incf	___aomod@dividend+2,f
  3311  02AC  1D03               	skipz
  3312  02AD  2ABB               	goto	u101lld
  3313  02AE  0AAB               	incf	___aomod@dividend+3,f
  3314  02AF  1D03               	skipz
  3315  02B0  2ABB               	goto	u101lld
  3316  02B1  0AAC               	incf	___aomod@dividend+4,f
  3317  02B2  1D03               	skipz
  3318  02B3  2ABB               	goto	u101lld
  3319  02B4  0AAD               	incf	___aomod@dividend+5,f
  3320  02B5  1D03               	skipz
  3321  02B6  2ABB               	goto	u101lld
  3322  02B7  0AAE               	incf	___aomod@dividend+6,f
  3323  02B8  1D03               	skipz
  3324  02B9  2ABB               	goto	u101lld
  3325  02BA  0AAF               	incf	___aomod@dividend+7,f
  3326  02BB                     u101lld:
  3327  02BB  01F2               	clrf	___aomod@sign
  3328  02BC  0AF2               	incf	___aomod@sign,f
  3329  02BD                     l1393:
  3330  02BD  3020               	movlw	low ___aomod@divisor
  3331  02BE  0086               	movwf	6
  3332  02BF  3000               	movlw	high ___aomod@divisor
  3333  02C0  0087               	movwf	7
  3334  02C1  3F47               	moviw [7]fsr1
  3335  02C2  00F0               	movwf	??___aomod
  3336  02C3  1FF0               	btfss	??___aomod,7
  3337  02C4  2AC6               	goto	u1021
  3338  02C5  2AC7               	goto	u1020
  3339  02C6                     u1021:
  3340  02C6  2AE6               	goto	l1397
  3341  02C7                     u1020:
  3342  02C7                     l1395:
  3343  02C7  0140               	movlb	0	; select bank0
  3344  02C8  09A0               	comf	___aomod@divisor,f
  3345  02C9  09A1               	comf	___aomod@divisor+1,f
  3346  02CA  09A2               	comf	___aomod@divisor+2,f
  3347  02CB  09A3               	comf	___aomod@divisor+3,f
  3348  02CC  09A4               	comf	___aomod@divisor+4,f
  3349  02CD  09A5               	comf	___aomod@divisor+5,f
  3350  02CE  09A6               	comf	___aomod@divisor+6,f
  3351  02CF  09A7               	comf	___aomod@divisor+7,f
  3352  02D0  0AA0               	incf	___aomod@divisor,f
  3353  02D1  1D03               	skipz
  3354  02D2  2AE6               	goto	u103lld
  3355  02D3  0AA1               	incf	___aomod@divisor+1,f
  3356  02D4  1D03               	skipz
  3357  02D5  2AE6               	goto	u103lld
  3358  02D6  0AA2               	incf	___aomod@divisor+2,f
  3359  02D7  1D03               	skipz
  3360  02D8  2AE6               	goto	u103lld
  3361  02D9  0AA3               	incf	___aomod@divisor+3,f
  3362  02DA  1D03               	skipz
  3363  02DB  2AE6               	goto	u103lld
  3364  02DC  0AA4               	incf	___aomod@divisor+4,f
  3365  02DD  1D03               	skipz
  3366  02DE  2AE6               	goto	u103lld
  3367  02DF  0AA5               	incf	___aomod@divisor+5,f
  3368  02E0  1D03               	skipz
  3369  02E1  2AE6               	goto	u103lld
  3370  02E2  0AA6               	incf	___aomod@divisor+6,f
  3371  02E3  1D03               	skipz
  3372  02E4  2AE6               	goto	u103lld
  3373  02E5  0AA7               	incf	___aomod@divisor+7,f
  3374  02E6                     u103lld:
  3375  02E6                     l1397:
  3376  02E6  0140               	movlb	0	; select bank0
  3377  02E7  0820               	movf	___aomod@divisor,w
  3378  02E8  0421               	iorwf	___aomod@divisor+1,w
  3379  02E9  0422               	iorwf	___aomod@divisor+2,w
  3380  02EA  0423               	iorwf	___aomod@divisor+3,w
  3381  02EB  0424               	iorwf	___aomod@divisor+4,w
  3382  02EC  0425               	iorwf	___aomod@divisor+5,w
  3383  02ED  0426               	iorwf	___aomod@divisor+6,w
  3384  02EE  0427               	iorwf	___aomod@divisor+7,w
  3385  02EF  1903               	skipnz
  3386  02F0  2AF2               	goto	u1041
  3387  02F1  2AF3               	goto	u1040
  3388  02F2                     u1041:
  3389  02F2  2B46               	goto	l1413
  3390  02F3                     u1040:
  3391  02F3                     l1399:
  3392  02F3  01F1               	clrf	___aomod@counter
  3393  02F4  0AF1               	incf	___aomod@counter,f
  3394  02F5  2B02               	goto	l1405
  3395  02F6                     l1401:
  3396  02F6  35A0               	lslf	___aomod@divisor,f
  3397  02F7  0DA1               	rlf	___aomod@divisor+1,f
  3398  02F8  0DA2               	rlf	___aomod@divisor+2,f
  3399  02F9  0DA3               	rlf	___aomod@divisor+3,f
  3400  02FA  0DA4               	rlf	___aomod@divisor+4,f
  3401  02FB  0DA5               	rlf	___aomod@divisor+5,f
  3402  02FC  0DA6               	rlf	___aomod@divisor+6,f
  3403  02FD  0DA7               	rlf	___aomod@divisor+7,f
  3404  02FE                     l1403:
  3405  02FE  3001               	movlw	1
  3406  02FF  00F0               	movwf	??___aomod
  3407  0300  0870               	movf	??___aomod,w
  3408  0301  07F1               	addwf	___aomod@counter,f
  3409  0302                     l1405:
  3410  0302  1FA7               	btfss	___aomod@divisor+7,7
  3411  0303  2B05               	goto	u1051
  3412  0304  2B06               	goto	u1050
  3413  0305                     u1051:
  3414  0305  2AF6               	goto	l1401
  3415  0306                     u1050:
  3416  0306                     l1407:
  3417  0306  0827               	movf	___aomod@divisor+7,w
  3418  0307  022F               	subwf	___aomod@dividend+7,w
  3419  0308  1D03               	skipz
  3420  0309  2B24               	goto	u1065
  3421  030A  0826               	movf	___aomod@divisor+6,w
  3422  030B  022E               	subwf	___aomod@dividend+6,w
  3423  030C  1D03               	skipz
  3424  030D  2B24               	goto	u1065
  3425  030E  0825               	movf	___aomod@divisor+5,w
  3426  030F  022D               	subwf	___aomod@dividend+5,w
  3427  0310  1D03               	skipz
  3428  0311  2B24               	goto	u1065
  3429  0312  0824               	movf	___aomod@divisor+4,w
  3430  0313  022C               	subwf	___aomod@dividend+4,w
  3431  0314  1D03               	skipz
  3432  0315  2B24               	goto	u1065
  3433  0316  0823               	movf	___aomod@divisor+3,w
  3434  0317  022B               	subwf	___aomod@dividend+3,w
  3435  0318  1D03               	skipz
  3436  0319  2B24               	goto	u1065
  3437  031A  0822               	movf	___aomod@divisor+2,w
  3438  031B  022A               	subwf	___aomod@dividend+2,w
  3439  031C  1D03               	skipz
  3440  031D  2B24               	goto	u1065
  3441  031E  0821               	movf	___aomod@divisor+1,w
  3442  031F  0229               	subwf	___aomod@dividend+1,w
  3443  0320  1D03               	skipz
  3444  0321  2B24               	goto	u1065
  3445  0322  0820               	movf	___aomod@divisor,w
  3446  0323  0228               	subwf	___aomod@dividend,w
  3447  0324                     u1065:
  3448  0324  1C03               	skipc
  3449  0325  2B27               	goto	u1061
  3450  0326  2B28               	goto	u1060
  3451  0327                     u1061:
  3452  0327  2B38               	goto	l1411
  3453  0328                     u1060:
  3454  0328                     l1409:
  3455  0328  0820               	movf	___aomod@divisor,w
  3456  0329  02A8               	subwf	___aomod@dividend,f
  3457  032A  0821               	movf	___aomod@divisor+1,w
  3458  032B  3BA9               	subwfb	___aomod@dividend+1,f
  3459  032C  0822               	movf	___aomod@divisor+2,w
  3460  032D  3BAA               	subwfb	___aomod@dividend+2,f
  3461  032E  0823               	movf	___aomod@divisor+3,w
  3462  032F  3BAB               	subwfb	___aomod@dividend+3,f
  3463  0330  0824               	movf	___aomod@divisor+4,w
  3464  0331  3BAC               	subwfb	___aomod@dividend+4,f
  3465  0332  0825               	movf	___aomod@divisor+5,w
  3466  0333  3BAD               	subwfb	___aomod@dividend+5,f
  3467  0334  0826               	movf	___aomod@divisor+6,w
  3468  0335  3BAE               	subwfb	___aomod@dividend+6,f
  3469  0336  0827               	movf	___aomod@divisor+7,w
  3470  0337  3BAF               	subwfb	___aomod@dividend+7,f
  3471  0338                     l1411:
  3472  0338  36A7               	lsrf	___aomod@divisor+7,f
  3473  0339  0CA6               	rrf	___aomod@divisor+6,f
  3474  033A  0CA5               	rrf	___aomod@divisor+5,f
  3475  033B  0CA4               	rrf	___aomod@divisor+4,f
  3476  033C  0CA3               	rrf	___aomod@divisor+3,f
  3477  033D  0CA2               	rrf	___aomod@divisor+2,f
  3478  033E  0CA1               	rrf	___aomod@divisor+1,f
  3479  033F  0CA0               	rrf	___aomod@divisor,f
  3480  0340  3001               	movlw	1
  3481  0341  02F1               	subwf	___aomod@counter,f
  3482  0342  1D03               	btfss	3,2
  3483  0343  2B45               	goto	u1071
  3484  0344  2B46               	goto	u1070
  3485  0345                     u1071:
  3486  0345  2B06               	goto	l1407
  3487  0346                     u1070:
  3488  0346                     l1413:
  3489  0346  0872               	movf	___aomod@sign,w
  3490  0347  1903               	btfsc	3,2
  3491  0348  2B4A               	goto	u1081
  3492  0349  2B4B               	goto	u1080
  3493  034A                     u1081:
  3494  034A  2B69               	goto	l309
  3495  034B                     u1080:
  3496  034B                     l1415:
  3497  034B  09A8               	comf	___aomod@dividend,f
  3498  034C  09A9               	comf	___aomod@dividend+1,f
  3499  034D  09AA               	comf	___aomod@dividend+2,f
  3500  034E  09AB               	comf	___aomod@dividend+3,f
  3501  034F  09AC               	comf	___aomod@dividend+4,f
  3502  0350  09AD               	comf	___aomod@dividend+5,f
  3503  0351  09AE               	comf	___aomod@dividend+6,f
  3504  0352  09AF               	comf	___aomod@dividend+7,f
  3505  0353  0AA8               	incf	___aomod@dividend,f
  3506  0354  1D03               	skipz
  3507  0355  2B69               	goto	u109lld
  3508  0356  0AA9               	incf	___aomod@dividend+1,f
  3509  0357  1D03               	skipz
  3510  0358  2B69               	goto	u109lld
  3511  0359  0AAA               	incf	___aomod@dividend+2,f
  3512  035A  1D03               	skipz
  3513  035B  2B69               	goto	u109lld
  3514  035C  0AAB               	incf	___aomod@dividend+3,f
  3515  035D  1D03               	skipz
  3516  035E  2B69               	goto	u109lld
  3517  035F  0AAC               	incf	___aomod@dividend+4,f
  3518  0360  1D03               	skipz
  3519  0361  2B69               	goto	u109lld
  3520  0362  0AAD               	incf	___aomod@dividend+5,f
  3521  0363  1D03               	skipz
  3522  0364  2B69               	goto	u109lld
  3523  0365  0AAE               	incf	___aomod@dividend+6,f
  3524  0366  1D03               	skipz
  3525  0367  2B69               	goto	u109lld
  3526  0368  0AAF               	incf	___aomod@dividend+7,f
  3527  0369                     u109lld:
  3528  0369                     l309:
  3529  0369  0140               	movlb	0	; select bank0
  3530  036A  0828               	movf	___aomod@dividend,w
  3531  036B  00A0               	movwf	?___aomod
  3532  036C  0829               	movf	___aomod@dividend+1,w
  3533  036D  00A1               	movwf	?___aomod+1
  3534  036E  082A               	movf	___aomod@dividend+2,w
  3535  036F  00A2               	movwf	?___aomod+2
  3536  0370  082B               	movf	___aomod@dividend+3,w
  3537  0371  00A3               	movwf	?___aomod+3
  3538  0372  082C               	movf	___aomod@dividend+4,w
  3539  0373  00A4               	movwf	?___aomod+4
  3540  0374  082D               	movf	___aomod@dividend+5,w
  3541  0375  00A5               	movwf	?___aomod+5
  3542  0376  082E               	movf	___aomod@dividend+6,w
  3543  0377  00A6               	movwf	?___aomod+6
  3544  0378  082F               	movf	___aomod@dividend+7,w
  3545  0379  00A7               	movwf	?___aomod+7
  3546  037A                     l310:
  3547  037A  0008               	return
  3548  037B                     __end_of___aomod:
  3549                           
  3550                           	psect	text12
  3551  037B                     __ptext12:	
  3552 ;; *************** function ___aodiv *****************
  3553 ;; Defined at:
  3554 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  divisor         8    0[BANK0 ] long long 
  3557 ;;  dividend        8    8[BANK0 ] long long 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  quotient        8    3[COMMON] long long 
  3560 ;;  sign            1    2[COMMON] unsigned char 
  3561 ;;  counter         1    1[COMMON] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  8    0[BANK0 ] long long 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3571 ;;      Params:         0      16       0       0       0       0       0       0
  3572 ;;      Locals:        10       0       0       0       0       0       0       0
  3573 ;;      Temps:          1       0       0       0       0       0       0       0
  3574 ;;      Totals:        11      16       0       0       0       0       0       0
  3575 ;;Total ram usage:       27 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_dtoa
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function ___aodiv
  3586  037B                     ___aodiv:
  3587  037B                     l1349:	
  3588                           ;incstack = 0
  3589                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3590                           
  3591  037B  01F2               	clrf	___aodiv@sign
  3592  037C                     l1351:
  3593  037C  3020               	movlw	low ___aodiv@divisor
  3594  037D  0086               	movwf	6
  3595  037E  3000               	movlw	high ___aodiv@divisor
  3596  037F  0087               	movwf	7
  3597  0380  3F47               	moviw [7]fsr1
  3598  0381  00F0               	movwf	??___aodiv
  3599  0382  1FF0               	btfss	??___aodiv,7
  3600  0383  2B85               	goto	u891
  3601  0384  2B86               	goto	u890
  3602  0385                     u891:
  3603  0385  2BA7               	goto	l1355
  3604  0386                     u890:
  3605  0386                     l1353:
  3606  0386  0140               	movlb	0	; select bank0
  3607  0387  09A0               	comf	___aodiv@divisor,f
  3608  0388  09A1               	comf	___aodiv@divisor+1,f
  3609  0389  09A2               	comf	___aodiv@divisor+2,f
  3610  038A  09A3               	comf	___aodiv@divisor+3,f
  3611  038B  09A4               	comf	___aodiv@divisor+4,f
  3612  038C  09A5               	comf	___aodiv@divisor+5,f
  3613  038D  09A6               	comf	___aodiv@divisor+6,f
  3614  038E  09A7               	comf	___aodiv@divisor+7,f
  3615  038F  0AA0               	incf	___aodiv@divisor,f
  3616  0390  1D03               	skipz
  3617  0391  2BA5               	goto	u90lld
  3618  0392  0AA1               	incf	___aodiv@divisor+1,f
  3619  0393  1D03               	skipz
  3620  0394  2BA5               	goto	u90lld
  3621  0395  0AA2               	incf	___aodiv@divisor+2,f
  3622  0396  1D03               	skipz
  3623  0397  2BA5               	goto	u90lld
  3624  0398  0AA3               	incf	___aodiv@divisor+3,f
  3625  0399  1D03               	skipz
  3626  039A  2BA5               	goto	u90lld
  3627  039B  0AA4               	incf	___aodiv@divisor+4,f
  3628  039C  1D03               	skipz
  3629  039D  2BA5               	goto	u90lld
  3630  039E  0AA5               	incf	___aodiv@divisor+5,f
  3631  039F  1D03               	skipz
  3632  03A0  2BA5               	goto	u90lld
  3633  03A1  0AA6               	incf	___aodiv@divisor+6,f
  3634  03A2  1D03               	skipz
  3635  03A3  2BA5               	goto	u90lld
  3636  03A4  0AA7               	incf	___aodiv@divisor+7,f
  3637  03A5                     u90lld:
  3638  03A5  01F2               	clrf	___aodiv@sign
  3639  03A6  0AF2               	incf	___aodiv@sign,f
  3640  03A7                     l1355:
  3641  03A7  3028               	movlw	low ___aodiv@dividend
  3642  03A8  0086               	movwf	6
  3643  03A9  3000               	movlw	high ___aodiv@dividend
  3644  03AA  0087               	movwf	7
  3645  03AB  3F47               	moviw [7]fsr1
  3646  03AC  00F0               	movwf	??___aodiv
  3647  03AD  1FF0               	btfss	??___aodiv,7
  3648  03AE  2BB0               	goto	u911
  3649  03AF  2BB1               	goto	u910
  3650  03B0                     u911:
  3651  03B0  2BD4               	goto	l1361
  3652  03B1                     u910:
  3653  03B1                     l1357:
  3654  03B1  0140               	movlb	0	; select bank0
  3655  03B2  09A8               	comf	___aodiv@dividend,f
  3656  03B3  09A9               	comf	___aodiv@dividend+1,f
  3657  03B4  09AA               	comf	___aodiv@dividend+2,f
  3658  03B5  09AB               	comf	___aodiv@dividend+3,f
  3659  03B6  09AC               	comf	___aodiv@dividend+4,f
  3660  03B7  09AD               	comf	___aodiv@dividend+5,f
  3661  03B8  09AE               	comf	___aodiv@dividend+6,f
  3662  03B9  09AF               	comf	___aodiv@dividend+7,f
  3663  03BA  0AA8               	incf	___aodiv@dividend,f
  3664  03BB  1D03               	skipz
  3665  03BC  2BD0               	goto	u92lld
  3666  03BD  0AA9               	incf	___aodiv@dividend+1,f
  3667  03BE  1D03               	skipz
  3668  03BF  2BD0               	goto	u92lld
  3669  03C0  0AAA               	incf	___aodiv@dividend+2,f
  3670  03C1  1D03               	skipz
  3671  03C2  2BD0               	goto	u92lld
  3672  03C3  0AAB               	incf	___aodiv@dividend+3,f
  3673  03C4  1D03               	skipz
  3674  03C5  2BD0               	goto	u92lld
  3675  03C6  0AAC               	incf	___aodiv@dividend+4,f
  3676  03C7  1D03               	skipz
  3677  03C8  2BD0               	goto	u92lld
  3678  03C9  0AAD               	incf	___aodiv@dividend+5,f
  3679  03CA  1D03               	skipz
  3680  03CB  2BD0               	goto	u92lld
  3681  03CC  0AAE               	incf	___aodiv@dividend+6,f
  3682  03CD  1D03               	skipz
  3683  03CE  2BD0               	goto	u92lld
  3684  03CF  0AAF               	incf	___aodiv@dividend+7,f
  3685  03D0                     u92lld:
  3686  03D0                     l1359:
  3687  03D0  3001               	movlw	1
  3688  03D1  00F0               	movwf	??___aodiv
  3689  03D2  0870               	movf	??___aodiv,w
  3690  03D3  06F2               	xorwf	___aodiv@sign,f
  3691  03D4                     l1361:
  3692  03D4  3073               	movlw	low ___aodiv@quotient
  3693  03D5  0086               	movwf	6
  3694  03D6  3000               	movlw	high ___aodiv@quotient
  3695  03D7  0087               	movwf	7
  3696  03D8  3008               	movlw	8
  3697  03D9  00F0               	movwf	??___aodiv
  3698  03DA  3000               	movlw	0
  3699  03DB                     u930:
  3700  03DB  001E               	movwi fsr1++
  3701  03DC  0BF0               	decfsz	??___aodiv,f
  3702  03DD  2BDB               	goto	u930
  3703  03DE                     l1363:
  3704  03DE  0140               	movlb	0	; select bank0
  3705  03DF  0820               	movf	___aodiv@divisor,w
  3706  03E0  0421               	iorwf	___aodiv@divisor+1,w
  3707  03E1  0422               	iorwf	___aodiv@divisor+2,w
  3708  03E2  0423               	iorwf	___aodiv@divisor+3,w
  3709  03E3  0424               	iorwf	___aodiv@divisor+4,w
  3710  03E4  0425               	iorwf	___aodiv@divisor+5,w
  3711  03E5  0426               	iorwf	___aodiv@divisor+6,w
  3712  03E6  0427               	iorwf	___aodiv@divisor+7,w
  3713  03E7  1903               	skipnz
  3714  03E8  2BEA               	goto	u941
  3715  03E9  2BEB               	goto	u940
  3716  03EA                     u941:
  3717  03EA  2C47               	goto	l1383
  3718  03EB                     u940:
  3719  03EB                     l1365:
  3720  03EB  01F1               	clrf	___aodiv@counter
  3721  03EC  0AF1               	incf	___aodiv@counter,f
  3722  03ED  2BFA               	goto	l1371
  3723  03EE                     l1367:
  3724  03EE  35A0               	lslf	___aodiv@divisor,f
  3725  03EF  0DA1               	rlf	___aodiv@divisor+1,f
  3726  03F0  0DA2               	rlf	___aodiv@divisor+2,f
  3727  03F1  0DA3               	rlf	___aodiv@divisor+3,f
  3728  03F2  0DA4               	rlf	___aodiv@divisor+4,f
  3729  03F3  0DA5               	rlf	___aodiv@divisor+5,f
  3730  03F4  0DA6               	rlf	___aodiv@divisor+6,f
  3731  03F5  0DA7               	rlf	___aodiv@divisor+7,f
  3732  03F6                     l1369:
  3733  03F6  3001               	movlw	1
  3734  03F7  00F0               	movwf	??___aodiv
  3735  03F8  0870               	movf	??___aodiv,w
  3736  03F9  07F1               	addwf	___aodiv@counter,f
  3737  03FA                     l1371:
  3738  03FA  1FA7               	btfss	___aodiv@divisor+7,7
  3739  03FB  2BFD               	goto	u951
  3740  03FC  2BFE               	goto	u950
  3741  03FD                     u951:
  3742  03FD  2BEE               	goto	l1367
  3743  03FE                     u950:
  3744  03FE                     l1373:
  3745  03FE  35F3               	lslf	___aodiv@quotient,f
  3746  03FF  0DF4               	rlf	___aodiv@quotient+1,f
  3747  0400  0DF5               	rlf	___aodiv@quotient+2,f
  3748  0401  0DF6               	rlf	___aodiv@quotient+3,f
  3749  0402  0DF7               	rlf	___aodiv@quotient+4,f
  3750  0403  0DF8               	rlf	___aodiv@quotient+5,f
  3751  0404  0DF9               	rlf	___aodiv@quotient+6,f
  3752  0405  0DFA               	rlf	___aodiv@quotient+7,f
  3753  0406                     l1375:
  3754  0406  0827               	movf	___aodiv@divisor+7,w
  3755  0407  022F               	subwf	___aodiv@dividend+7,w
  3756  0408  1D03               	skipz
  3757  0409  2C24               	goto	u965
  3758  040A  0826               	movf	___aodiv@divisor+6,w
  3759  040B  022E               	subwf	___aodiv@dividend+6,w
  3760  040C  1D03               	skipz
  3761  040D  2C24               	goto	u965
  3762  040E  0825               	movf	___aodiv@divisor+5,w
  3763  040F  022D               	subwf	___aodiv@dividend+5,w
  3764  0410  1D03               	skipz
  3765  0411  2C24               	goto	u965
  3766  0412  0824               	movf	___aodiv@divisor+4,w
  3767  0413  022C               	subwf	___aodiv@dividend+4,w
  3768  0414  1D03               	skipz
  3769  0415  2C24               	goto	u965
  3770  0416  0823               	movf	___aodiv@divisor+3,w
  3771  0417  022B               	subwf	___aodiv@dividend+3,w
  3772  0418  1D03               	skipz
  3773  0419  2C24               	goto	u965
  3774  041A  0822               	movf	___aodiv@divisor+2,w
  3775  041B  022A               	subwf	___aodiv@dividend+2,w
  3776  041C  1D03               	skipz
  3777  041D  2C24               	goto	u965
  3778  041E  0821               	movf	___aodiv@divisor+1,w
  3779  041F  0229               	subwf	___aodiv@dividend+1,w
  3780  0420  1D03               	skipz
  3781  0421  2C24               	goto	u965
  3782  0422  0820               	movf	___aodiv@divisor,w
  3783  0423  0228               	subwf	___aodiv@dividend,w
  3784  0424                     u965:
  3785  0424  1C03               	skipc
  3786  0425  2C27               	goto	u961
  3787  0426  2C28               	goto	u960
  3788  0427                     u961:
  3789  0427  2C39               	goto	l1381
  3790  0428                     u960:
  3791  0428                     l1377:
  3792  0428  0820               	movf	___aodiv@divisor,w
  3793  0429  02A8               	subwf	___aodiv@dividend,f
  3794  042A  0821               	movf	___aodiv@divisor+1,w
  3795  042B  3BA9               	subwfb	___aodiv@dividend+1,f
  3796  042C  0822               	movf	___aodiv@divisor+2,w
  3797  042D  3BAA               	subwfb	___aodiv@dividend+2,f
  3798  042E  0823               	movf	___aodiv@divisor+3,w
  3799  042F  3BAB               	subwfb	___aodiv@dividend+3,f
  3800  0430  0824               	movf	___aodiv@divisor+4,w
  3801  0431  3BAC               	subwfb	___aodiv@dividend+4,f
  3802  0432  0825               	movf	___aodiv@divisor+5,w
  3803  0433  3BAD               	subwfb	___aodiv@dividend+5,f
  3804  0434  0826               	movf	___aodiv@divisor+6,w
  3805  0435  3BAE               	subwfb	___aodiv@dividend+6,f
  3806  0436  0827               	movf	___aodiv@divisor+7,w
  3807  0437  3BAF               	subwfb	___aodiv@dividend+7,f
  3808  0438                     l1379:
  3809  0438  1473               	bsf	___aodiv@quotient,0
  3810  0439                     l1381:
  3811  0439  36A7               	lsrf	___aodiv@divisor+7,f
  3812  043A  0CA6               	rrf	___aodiv@divisor+6,f
  3813  043B  0CA5               	rrf	___aodiv@divisor+5,f
  3814  043C  0CA4               	rrf	___aodiv@divisor+4,f
  3815  043D  0CA3               	rrf	___aodiv@divisor+3,f
  3816  043E  0CA2               	rrf	___aodiv@divisor+2,f
  3817  043F  0CA1               	rrf	___aodiv@divisor+1,f
  3818  0440  0CA0               	rrf	___aodiv@divisor,f
  3819  0441  3001               	movlw	1
  3820  0442  02F1               	subwf	___aodiv@counter,f
  3821  0443  1D03               	btfss	3,2
  3822  0444  2C46               	goto	u971
  3823  0445  2C47               	goto	u970
  3824  0446                     u971:
  3825  0446  2BFE               	goto	l1373
  3826  0447                     u970:
  3827  0447                     l1383:
  3828  0447  0872               	movf	___aodiv@sign,w
  3829  0448  1903               	btfsc	3,2
  3830  0449  2C4B               	goto	u981
  3831  044A  2C4C               	goto	u980
  3832  044B                     u981:
  3833  044B  2C6A               	goto	l296
  3834  044C                     u980:
  3835  044C                     l1385:
  3836  044C  09F3               	comf	___aodiv@quotient,f
  3837  044D  09F4               	comf	___aodiv@quotient+1,f
  3838  044E  09F5               	comf	___aodiv@quotient+2,f
  3839  044F  09F6               	comf	___aodiv@quotient+3,f
  3840  0450  09F7               	comf	___aodiv@quotient+4,f
  3841  0451  09F8               	comf	___aodiv@quotient+5,f
  3842  0452  09F9               	comf	___aodiv@quotient+6,f
  3843  0453  09FA               	comf	___aodiv@quotient+7,f
  3844  0454  0AF3               	incf	___aodiv@quotient,f
  3845  0455  1D03               	skipz
  3846  0456  2C6A               	goto	u99lld
  3847  0457  0AF4               	incf	___aodiv@quotient+1,f
  3848  0458  1D03               	skipz
  3849  0459  2C6A               	goto	u99lld
  3850  045A  0AF5               	incf	___aodiv@quotient+2,f
  3851  045B  1D03               	skipz
  3852  045C  2C6A               	goto	u99lld
  3853  045D  0AF6               	incf	___aodiv@quotient+3,f
  3854  045E  1D03               	skipz
  3855  045F  2C6A               	goto	u99lld
  3856  0460  0AF7               	incf	___aodiv@quotient+4,f
  3857  0461  1D03               	skipz
  3858  0462  2C6A               	goto	u99lld
  3859  0463  0AF8               	incf	___aodiv@quotient+5,f
  3860  0464  1D03               	skipz
  3861  0465  2C6A               	goto	u99lld
  3862  0466  0AF9               	incf	___aodiv@quotient+6,f
  3863  0467  1D03               	skipz
  3864  0468  2C6A               	goto	u99lld
  3865  0469  0AFA               	incf	___aodiv@quotient+7,f
  3866  046A                     u99lld:
  3867  046A                     l296:
  3868  046A  0873               	movf	___aodiv@quotient,w
  3869  046B  0140               	movlb	0	; select bank0
  3870  046C  00A0               	movwf	?___aodiv
  3871  046D  0874               	movf	___aodiv@quotient+1,w
  3872  046E  00A1               	movwf	?___aodiv+1
  3873  046F  0875               	movf	___aodiv@quotient+2,w
  3874  0470  00A2               	movwf	?___aodiv+2
  3875  0471  0876               	movf	___aodiv@quotient+3,w
  3876  0472  00A3               	movwf	?___aodiv+3
  3877  0473  0877               	movf	___aodiv@quotient+4,w
  3878  0474  00A4               	movwf	?___aodiv+4
  3879  0475  0878               	movf	___aodiv@quotient+5,w
  3880  0476  00A5               	movwf	?___aodiv+5
  3881  0477  0879               	movf	___aodiv@quotient+6,w
  3882  0478  00A6               	movwf	?___aodiv+6
  3883  0479  087A               	movf	___aodiv@quotient+7,w
  3884  047A  00A7               	movwf	?___aodiv+7
  3885  047B                     l297:
  3886  047B  0008               	return
  3887  047C                     __end_of___aodiv:
  3888                           
  3889                           	psect	text13
  3890  0E24                     __ptext13:	
  3891 ;; *************** function _PIN_MANAGER_Initialize *****************
  3892 ;; Defined at:
  3893 ;;		line 63 in file "Proyecto.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3907 ;;      Params:         0       0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function _PIN_MANAGER_Initialize
  3922  0E24                     _PIN_MANAGER_Initialize:
  3923  0E24                     l1697:	
  3924                           ;incstack = 0
  3925                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3926                           
  3927                           
  3928                           ;Proyecto.c: 66:   LATA = 0x00;
  3929  0E24  0140               	movlb	0	; select bank0
  3930  0E25  0198               	clrf	24	;volatile
  3931                           
  3932                           ;Proyecto.c: 67:   LATB = 0x00;
  3933  0E26  0199               	clrf	25	;volatile
  3934                           
  3935                           ;Proyecto.c: 68:   LATC = 0x00;
  3936  0E27  019A               	clrf	26	;volatile
  3937  0E28                     l1699:
  3938                           
  3939                           ;Proyecto.c: 71:   TRISA = 0b00010000;
  3940  0E28  3010               	movlw	16
  3941  0E29  0092               	movwf	18	;volatile
  3942  0E2A                     l1701:
  3943                           
  3944                           ;Proyecto.c: 72:   TRISB = 0b10100000;
  3945  0E2A  30A0               	movlw	160
  3946  0E2B  0093               	movwf	19	;volatile
  3947  0E2C                     l1703:
  3948                           
  3949                           ;Proyecto.c: 73:   TRISC = 0b00000100;
  3950  0E2C  3004               	movlw	4
  3951  0E2D  0094               	movwf	20	;volatile
  3952  0E2E                     l1705:
  3953                           
  3954                           ;Proyecto.c: 76:   ANSELC = 0;
  3955  0E2E  017E               	movlb	62	; select bank62
  3956  0E2F  01CE               	clrf	78	;volatile
  3957  0E30                     l1707:
  3958                           
  3959                           ;Proyecto.c: 77:   ANSELB = 0;
  3960  0E30  01C3               	clrf	67	;volatile
  3961  0E31                     l1709:
  3962                           
  3963                           ;Proyecto.c: 78:   ANSELA = 0;
  3964  0E31  01B8               	clrf	56	;volatile
  3965                           
  3966                           ;Proyecto.c: 82:   WPUC = 0x04;
  3967  0E32  3004               	movlw	4
  3968  0E33  00CF               	movwf	79	;volatile
  3969                           
  3970                           ;Proyecto.c: 85:   ODCONA = 0x04;
  3971  0E34  3004               	movlw	4
  3972  0E35  00BA               	movwf	58	;volatile
  3973  0E36                     l1711:
  3974                           
  3975                           ;Proyecto.c: 86:   ODCONB = 0x00;
  3976  0E36  01C5               	clrf	69	;volatile
  3977  0E37                     l1713:
  3978                           
  3979                           ;Proyecto.c: 87:   ODCONC = 0x00;
  3980  0E37  01D0               	clrf	80	;volatile
  3981                           
  3982                           ;Proyecto.c: 90:   SLRCONA = 0x37;
  3983  0E38  3037               	movlw	55
  3984  0E39  00BB               	movwf	59	;volatile
  3985                           
  3986                           ;Proyecto.c: 91:   SLRCONB = 0xFF;
  3987  0E3A  30FF               	movlw	255
  3988  0E3B  00C6               	movwf	70	;volatile
  3989                           
  3990                           ;Proyecto.c: 92:   SLRCONC = 0xFF;
  3991  0E3C  30FF               	movlw	255
  3992  0E3D  00D1               	movwf	81	;volatile
  3993                           
  3994                           ;Proyecto.c: 95:   INLVLA = 0x3F;
  3995  0E3E  303F               	movlw	63
  3996  0E3F  00BC               	movwf	60	;volatile
  3997                           
  3998                           ;Proyecto.c: 96:   INLVLB = 0xFF;
  3999  0E40  30FF               	movlw	255
  4000  0E41  00C7               	movwf	71	;volatile
  4001                           
  4002                           ;Proyecto.c: 97:   INLVLC = 0xFF;
  4003  0E42  30FF               	movlw	255
  4004  0E43  00D2               	movwf	82	;volatile
  4005  0E44                     l98:
  4006  0E44  0008               	return
  4007  0E45                     __end_of_PIN_MANAGER_Initialize:
  4008                           
  4009                           	psect	text14
  4010  0E91                     __ptext14:	
  4011 ;; *************** function _Lcd_Out2 *****************
  4012 ;; Defined at:
  4013 ;;		line 116 in file "./flex_lcd.h"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  y               1    wreg     unsigned char 
  4016 ;;  x               1    3[COMMON] unsigned char 
  4017 ;;  buffer          1    4[COMMON] PTR unsigned char 
  4018 ;;		 -> CONT(20), 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  y               1    7[COMMON] unsigned char 
  4021 ;;  data            1    8[COMMON] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4031 ;;      Params:         2       0       0       0       0       0       0       0
  4032 ;;      Locals:         2       0       0       0       0       0       0       0
  4033 ;;      Temps:          2       0       0       0       0       0       0       0
  4034 ;;      Totals:         6       0       0       0       0       0       0       0
  4035 ;;Total ram usage:        6 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    1
  4038 ;; This function calls:
  4039 ;;		_Lcd_Chr_CP
  4040 ;;		_Lcd_Cmd
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _Lcd_Out2
  4048  0E91                     _Lcd_Out2:
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4052                           ;Lcd_Out2@y stored from wreg
  4053  0E91  00F7               	movwf	Lcd_Out2@y
  4054  0E92                     l1671:
  4055                           
  4056                           ;./flex_lcd.h: 116: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 117: {;./flex_lcd.h: 118: unsigned char data;;./flex_lcd.h: 119: switch (y)
  4057  0E92  2EAB               	goto	l1683
  4058  0E93                     l1673:
  4059  0E93  0873               	movf	Lcd_Out2@x,w
  4060  0E94  3E80               	addlw	128
  4061  0E95  00F5               	movwf	??_Lcd_Out2
  4062  0E96  0875               	movf	??_Lcd_Out2,w
  4063  0E97  00F8               	movwf	Lcd_Out2@data
  4064  0E98  2EC1               	goto	l1685
  4065  0E99                     l1675:
  4066  0E99  0873               	movf	Lcd_Out2@x,w
  4067  0E9A  3EC0               	addlw	192
  4068  0E9B  00F5               	movwf	??_Lcd_Out2
  4069  0E9C  0875               	movf	??_Lcd_Out2,w
  4070  0E9D  00F8               	movwf	Lcd_Out2@data
  4071  0E9E  2EC1               	goto	l1685
  4072  0E9F                     l1677:
  4073  0E9F  0873               	movf	Lcd_Out2@x,w
  4074  0EA0  3E94               	addlw	148
  4075  0EA1  00F5               	movwf	??_Lcd_Out2
  4076  0EA2  0875               	movf	??_Lcd_Out2,w
  4077  0EA3  00F8               	movwf	Lcd_Out2@data
  4078  0EA4  2EC1               	goto	l1685
  4079  0EA5                     l1679:
  4080  0EA5  0873               	movf	Lcd_Out2@x,w
  4081  0EA6  3ED4               	addlw	212
  4082  0EA7  00F5               	movwf	??_Lcd_Out2
  4083  0EA8  0875               	movf	??_Lcd_Out2,w
  4084  0EA9  00F8               	movwf	Lcd_Out2@data
  4085  0EAA  2EC1               	goto	l1685
  4086  0EAB                     l1683:
  4087  0EAB  0877               	movf	Lcd_Out2@y,w
  4088  0EAC  00F5               	movwf	??_Lcd_Out2
  4089  0EAD  01F6               	clrf	??_Lcd_Out2+1
  4090                           
  4091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4092                           ; Switch size 1, requested type "simple"
  4093                           ; Number of cases is 1, Range of values is 0 to 0
  4094                           ; switch strategies available:
  4095                           ; Name         Instructions Cycles
  4096                           ; simple_byte            4     3 (average)
  4097                           ; direct_byte            8     6 (fixed)
  4098                           ; jumptable            260     6 (fixed)
  4099                           ;	Chosen strategy is simple_byte
  4100  0EAE  0876               	movf	??_Lcd_Out2+1,w
  4101  0EAF  3A00               	xorlw	0	; case 0
  4102  0EB0  1903               	skipnz
  4103  0EB1  2EB3               	goto	l1861
  4104  0EB2  2EC1               	goto	l1685
  4105  0EB3                     l1861:
  4106                           
  4107                           ; Switch size 1, requested type "simple"
  4108                           ; Number of cases is 4, Range of values is 1 to 4
  4109                           ; switch strategies available:
  4110                           ; Name         Instructions Cycles
  4111                           ; simple_byte           13     7 (average)
  4112                           ; direct_byte           17     9 (fixed)
  4113                           ; jumptable            263     9 (fixed)
  4114                           ;	Chosen strategy is simple_byte
  4115  0EB3  0875               	movf	??_Lcd_Out2,w
  4116  0EB4  3A01               	xorlw	1	; case 1
  4117  0EB5  1903               	skipnz
  4118  0EB6  2E93               	goto	l1673
  4119  0EB7  3A03               	xorlw	3	; case 2
  4120  0EB8  1903               	skipnz
  4121  0EB9  2E99               	goto	l1675
  4122  0EBA  3A01               	xorlw	1	; case 3
  4123  0EBB  1903               	skipnz
  4124  0EBC  2E9F               	goto	l1677
  4125  0EBD  3A07               	xorlw	7	; case 4
  4126  0EBE  1903               	skipnz
  4127  0EBF  2EA5               	goto	l1679
  4128  0EC0  2EC1               	goto	l1685
  4129  0EC1                     l1685:
  4130                           
  4131                           ;./flex_lcd.h: 127: Lcd_Cmd(data);
  4132  0EC1  0878               	movf	Lcd_Out2@data,w
  4133  0EC2  3180  208F  318E   	fcall	_Lcd_Cmd
  4134                           
  4135                           ;./flex_lcd.h: 128: while(*buffer)
  4136  0EC5  2ED1               	goto	l1691
  4137  0EC6                     l1687:
  4138                           
  4139                           ;./flex_lcd.h: 129: {;./flex_lcd.h: 130:     Lcd_Chr_CP(*buffer);
  4140  0EC6  0874               	movf	Lcd_Out2@buffer,w
  4141  0EC7  0086               	movwf	6
  4142  0EC8  0187               	clrf	7
  4143  0EC9  0801               	movf	1,w
  4144  0ECA  3181  2121  318E   	fcall	_Lcd_Chr_CP
  4145  0ECD                     l1689:
  4146                           
  4147                           ;./flex_lcd.h: 131:     buffer++;
  4148  0ECD  3001               	movlw	1
  4149  0ECE  00F5               	movwf	??_Lcd_Out2
  4150  0ECF  0875               	movf	??_Lcd_Out2,w
  4151  0ED0  07F4               	addwf	Lcd_Out2@buffer,f
  4152  0ED1                     l1691:
  4153                           
  4154                           ;./flex_lcd.h: 128: while(*buffer)
  4155  0ED1  0874               	movf	Lcd_Out2@buffer,w
  4156  0ED2  0086               	movwf	6
  4157  0ED3  0187               	clrf	7
  4158  0ED4  0801               	movf	1,w
  4159  0ED5  1D03               	btfss	3,2
  4160  0ED6  2ED8               	goto	u1501
  4161  0ED7  2ED9               	goto	u1500
  4162  0ED8                     u1501:
  4163  0ED8  2EC6               	goto	l1687
  4164  0ED9                     u1500:
  4165  0ED9                     l89:
  4166  0ED9  0008               	return
  4167  0EDA                     __end_of_Lcd_Out2:
  4168                           
  4169                           	psect	text15
  4170  0EDA                     __ptext15:	
  4171 ;; *************** function _Lcd_Out *****************
  4172 ;; Defined at:
  4173 ;;		line 95 in file "./flex_lcd.h"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  y               1    wreg     unsigned char 
  4176 ;;  x               1    3[COMMON] unsigned char 
  4177 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  4178 ;;		 -> STR_13(8), STR_12(10), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  y               1    8[COMMON] unsigned char 
  4181 ;;  data            1    9[COMMON] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4191 ;;      Params:         3       0       0       0       0       0       0       0
  4192 ;;      Locals:         2       0       0       0       0       0       0       0
  4193 ;;      Temps:          2       0       0       0       0       0       0       0
  4194 ;;      Totals:         7       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        7 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    1
  4198 ;; This function calls:
  4199 ;;		_Lcd_Chr_CP
  4200 ;;		_Lcd_Cmd
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _Lcd_Out
  4208  0EDA                     _Lcd_Out:
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4212                           ;Lcd_Out@y stored from wreg
  4213  0EDA  00F8               	movwf	Lcd_Out@y
  4214  0EDB                     l1645:
  4215                           
  4216                           ;./flex_lcd.h: 95: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 96: {;./flex_lcd.h: 97: unsigned char data;;./flex_lcd.h: 98: switch (y)
  4217  0EDB  2EF4               	goto	l1657
  4218  0EDC                     l1647:
  4219  0EDC  0873               	movf	Lcd_Out@x,w
  4220  0EDD  3E80               	addlw	128
  4221  0EDE  00F6               	movwf	??_Lcd_Out
  4222  0EDF  0876               	movf	??_Lcd_Out,w
  4223  0EE0  00F9               	movwf	Lcd_Out@data
  4224  0EE1  2F0A               	goto	l1659
  4225  0EE2                     l1649:
  4226  0EE2  0873               	movf	Lcd_Out@x,w
  4227  0EE3  3EC0               	addlw	192
  4228  0EE4  00F6               	movwf	??_Lcd_Out
  4229  0EE5  0876               	movf	??_Lcd_Out,w
  4230  0EE6  00F9               	movwf	Lcd_Out@data
  4231  0EE7  2F0A               	goto	l1659
  4232  0EE8                     l1651:
  4233  0EE8  0873               	movf	Lcd_Out@x,w
  4234  0EE9  3E94               	addlw	148
  4235  0EEA  00F6               	movwf	??_Lcd_Out
  4236  0EEB  0876               	movf	??_Lcd_Out,w
  4237  0EEC  00F9               	movwf	Lcd_Out@data
  4238  0EED  2F0A               	goto	l1659
  4239  0EEE                     l1653:
  4240  0EEE  0873               	movf	Lcd_Out@x,w
  4241  0EEF  3ED4               	addlw	212
  4242  0EF0  00F6               	movwf	??_Lcd_Out
  4243  0EF1  0876               	movf	??_Lcd_Out,w
  4244  0EF2  00F9               	movwf	Lcd_Out@data
  4245  0EF3  2F0A               	goto	l1659
  4246  0EF4                     l1657:
  4247  0EF4  0878               	movf	Lcd_Out@y,w
  4248  0EF5  00F6               	movwf	??_Lcd_Out
  4249  0EF6  01F7               	clrf	??_Lcd_Out+1
  4250                           
  4251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4252                           ; Switch size 1, requested type "simple"
  4253                           ; Number of cases is 1, Range of values is 0 to 0
  4254                           ; switch strategies available:
  4255                           ; Name         Instructions Cycles
  4256                           ; simple_byte            4     3 (average)
  4257                           ; direct_byte            8     6 (fixed)
  4258                           ; jumptable            260     6 (fixed)
  4259                           ;	Chosen strategy is simple_byte
  4260  0EF7  0877               	movf	??_Lcd_Out+1,w
  4261  0EF8  3A00               	xorlw	0	; case 0
  4262  0EF9  1903               	skipnz
  4263  0EFA  2EFC               	goto	l1863
  4264  0EFB  2F0A               	goto	l1659
  4265  0EFC                     l1863:
  4266                           
  4267                           ; Switch size 1, requested type "simple"
  4268                           ; Number of cases is 4, Range of values is 1 to 4
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte           13     7 (average)
  4272                           ; direct_byte           17     9 (fixed)
  4273                           ; jumptable            263     9 (fixed)
  4274                           ;	Chosen strategy is simple_byte
  4275  0EFC  0876               	movf	??_Lcd_Out,w
  4276  0EFD  3A01               	xorlw	1	; case 1
  4277  0EFE  1903               	skipnz
  4278  0EFF  2EDC               	goto	l1647
  4279  0F00  3A03               	xorlw	3	; case 2
  4280  0F01  1903               	skipnz
  4281  0F02  2EE2               	goto	l1649
  4282  0F03  3A01               	xorlw	1	; case 3
  4283  0F04  1903               	skipnz
  4284  0F05  2EE8               	goto	l1651
  4285  0F06  3A07               	xorlw	7	; case 4
  4286  0F07  1903               	skipnz
  4287  0F08  2EEE               	goto	l1653
  4288  0F09  2F0A               	goto	l1659
  4289  0F0A                     l1659:
  4290                           
  4291                           ;./flex_lcd.h: 106: Lcd_Cmd(data);
  4292  0F0A  0879               	movf	Lcd_Out@data,w
  4293  0F0B  3180  208F  318E   	fcall	_Lcd_Cmd
  4294                           
  4295                           ;./flex_lcd.h: 107: while(*buffer)
  4296  0F0E  2F1B               	goto	l1665
  4297  0F0F                     l1661:
  4298                           
  4299                           ;./flex_lcd.h: 108: {;./flex_lcd.h: 109:     Lcd_Chr_CP(*buffer);
  4300  0F0F  0874               	movf	Lcd_Out@buffer,w
  4301  0F10  0084               	movwf	4
  4302  0F11  0875               	movf	Lcd_Out@buffer+1,w
  4303  0F12  0085               	movwf	5
  4304  0F13  0800               	movf	0,w	;code access
  4305  0F14  3181  2121  318E   	fcall	_Lcd_Chr_CP
  4306  0F17                     l1663:
  4307                           
  4308                           ;./flex_lcd.h: 110:     buffer++;
  4309  0F17  3001               	movlw	1
  4310  0F18  07F4               	addwf	Lcd_Out@buffer,f
  4311  0F19  3000               	movlw	0
  4312  0F1A  3DF5               	addwfc	Lcd_Out@buffer+1,f
  4313  0F1B                     l1665:
  4314                           
  4315                           ;./flex_lcd.h: 107: while(*buffer)
  4316  0F1B  0874               	movf	Lcd_Out@buffer,w
  4317  0F1C  0084               	movwf	4
  4318  0F1D  0875               	movf	Lcd_Out@buffer+1,w
  4319  0F1E  0085               	movwf	5
  4320  0F1F  0012               	moviw fsr0++
  4321  0F20  1D03               	btfss	3,2
  4322  0F21  2F23               	goto	u1491
  4323  0F22  2F24               	goto	u1490
  4324  0F23                     u1491:
  4325  0F23  2F0F               	goto	l1661
  4326  0F24                     u1490:
  4327  0F24                     l76:
  4328  0F24  0008               	return
  4329  0F25                     __end_of_Lcd_Out:
  4330                           
  4331                           	psect	text16
  4332  0121                     __ptext16:	
  4333 ;; *************** function _Lcd_Chr_CP *****************
  4334 ;; Defined at:
  4335 ;;		line 137 in file "./flex_lcd.h"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  data            1    wreg     unsigned char 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  data            1    2[COMMON] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4349 ;;      Params:         0       0       0       0       0       0       0       0
  4350 ;;      Locals:         1       0       0       0       0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0       0       0       0
  4352 ;;      Totals:         3       0       0       0       0       0       0       0
  4353 ;;Total ram usage:        3 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_Lcd_Out
  4359 ;;		_Lcd_Out2
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _Lcd_Chr_CP
  4365  0121                     _Lcd_Chr_CP:
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  4369                           ;Lcd_Chr_CP@data stored from wreg
  4370  0121  00F2               	movwf	Lcd_Chr_CP@data
  4371  0122                     l1575:
  4372                           
  4373                           ;./flex_lcd.h: 138: PORTBbits.RB6 = 0; PORTBbits.RB4 = 1;
  4374  0122  0140               	movlb	0	; select bank0
  4375  0123  130D               	bcf	13,6	;volatile
  4376  0124  160D               	bsf	13,4	;volatile
  4377  0125                     l1577:
  4378                           
  4379                           ;./flex_lcd.h: 139: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  4380  0125  0872               	movf	Lcd_Chr_CP@data,w
  4381  0126  00F0               	movwf	??_Lcd_Chr_CP
  4382  0127  3007               	movlw	7
  4383  0128                     u1415:
  4384  0128  36F0               	lsrf	??_Lcd_Chr_CP,f
  4385  0129  0B89               	decfsz	9,f
  4386  012A  2928               	goto	u1415
  4387  012B  0870               	movf	??_Lcd_Chr_CP,w
  4388  012C  3901               	andlw	1
  4389  012D  00F1               	movwf	??_Lcd_Chr_CP+1
  4390  012E  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4391  012F  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4392  0130  080E               	movf	14,w	;volatile
  4393  0131  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4394  0132  397F               	andlw	-129
  4395  0133  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4396  0134  008E               	movwf	14	;volatile
  4397  0135  0872               	movf	Lcd_Chr_CP@data,w
  4398  0136  00F0               	movwf	??_Lcd_Chr_CP
  4399  0137  3006               	movlw	6
  4400  0138                     u1425:
  4401  0138  36F0               	lsrf	??_Lcd_Chr_CP,f
  4402  0139  0B89               	decfsz	9,f
  4403  013A  2938               	goto	u1425
  4404  013B  0870               	movf	??_Lcd_Chr_CP,w
  4405  013C  3901               	andlw	1
  4406  013D  00F1               	movwf	??_Lcd_Chr_CP+1
  4407  013E  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4408  013F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4409  0140  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4410  0141  080E               	movf	14,w	;volatile
  4411  0142  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4412  0143  39BF               	andlw	-65
  4413  0144  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4414  0145  008E               	movwf	14	;volatile
  4415                           
  4416                           ;./flex_lcd.h: 140: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  4417  0146  0872               	movf	Lcd_Chr_CP@data,w
  4418  0147  00F0               	movwf	??_Lcd_Chr_CP
  4419  0148  3005               	movlw	5
  4420  0149                     u1435:
  4421  0149  36F0               	lsrf	??_Lcd_Chr_CP,f
  4422  014A  0B89               	decfsz	9,f
  4423  014B  2949               	goto	u1435
  4424  014C  0870               	movf	??_Lcd_Chr_CP,w
  4425  014D  3901               	andlw	1
  4426  014E  00F1               	movwf	??_Lcd_Chr_CP+1
  4427  014F  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4428  0150  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4429  0151  080E               	movf	14,w	;volatile
  4430  0152  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4431  0153  39DF               	andlw	-33
  4432  0154  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4433  0155  008E               	movwf	14	;volatile
  4434  0156  0872               	movf	Lcd_Chr_CP@data,w
  4435  0157  00F0               	movwf	??_Lcd_Chr_CP
  4436  0158  3004               	movlw	4
  4437  0159                     u1445:
  4438  0159  36F0               	lsrf	??_Lcd_Chr_CP,f
  4439  015A  0B89               	decfsz	9,f
  4440  015B  2959               	goto	u1445
  4441  015C  0870               	movf	??_Lcd_Chr_CP,w
  4442  015D  3901               	andlw	1
  4443  015E  00F1               	movwf	??_Lcd_Chr_CP+1
  4444  015F  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4445  0160  080E               	movf	14,w	;volatile
  4446  0161  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4447  0162  39EF               	andlw	-17
  4448  0163  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4449  0164  008E               	movwf	14	;volatile
  4450  0165                     l1579:
  4451                           
  4452                           ;./flex_lcd.h: 141: _delay(10);
  4453  0165  3003               	movlw	3
  4454  0166                     u1807:
  4455  0166  0B89               	decfsz	9,f
  4456  0167  2966               	goto	u1807
  4457  0168  0000               	nop
  4458  0169                     l1581:
  4459                           
  4460                           ;./flex_lcd.h: 142: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4461  0169  0140               	movlb	0	; select bank0
  4462  016A  170D               	bsf	13,6	;volatile
  4463  016B                     l1583:
  4464  016B  0000               	nop
  4465  016C                     l1585:
  4466  016C  0140               	movlb	0	; select bank0
  4467  016D  130D               	bcf	13,6	;volatile
  4468  016E                     l1587:
  4469                           
  4470                           ;./flex_lcd.h: 143: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  4471  016E  0872               	movf	Lcd_Chr_CP@data,w
  4472  016F  00F0               	movwf	??_Lcd_Chr_CP
  4473  0170  3003               	movlw	3
  4474  0171                     u1455:
  4475  0171  36F0               	lsrf	??_Lcd_Chr_CP,f
  4476  0172  0B89               	decfsz	9,f
  4477  0173  2971               	goto	u1455
  4478  0174  0870               	movf	??_Lcd_Chr_CP,w
  4479  0175  3901               	andlw	1
  4480  0176  00F1               	movwf	??_Lcd_Chr_CP+1
  4481  0177  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4482  0178  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4483  0179  080E               	movf	14,w	;volatile
  4484  017A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4485  017B  397F               	andlw	-129
  4486  017C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4487  017D  008E               	movwf	14	;volatile
  4488  017E                     l1589:
  4489  017E  0872               	movf	Lcd_Chr_CP@data,w
  4490  017F  00F0               	movwf	??_Lcd_Chr_CP
  4491  0180  3002               	movlw	2
  4492  0181                     u1465:
  4493  0181  36F0               	lsrf	??_Lcd_Chr_CP,f
  4494  0182  0B89               	decfsz	9,f
  4495  0183  2981               	goto	u1465
  4496  0184  0870               	movf	??_Lcd_Chr_CP,w
  4497  0185  3901               	andlw	1
  4498  0186  00F1               	movwf	??_Lcd_Chr_CP+1
  4499  0187  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4500  0188  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4501  0189  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4502  018A  080E               	movf	14,w	;volatile
  4503  018B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4504  018C  39BF               	andlw	-65
  4505  018D  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4506  018E  008E               	movwf	14	;volatile
  4507  018F                     l1591:
  4508                           
  4509                           ;./flex_lcd.h: 144: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  4510  018F  3672               	lsrf	Lcd_Chr_CP@data,w
  4511  0190  3901               	andlw	1
  4512  0191  00F0               	movwf	??_Lcd_Chr_CP
  4513  0192  0EF0               	swapf	??_Lcd_Chr_CP,f
  4514  0193  0DF0               	rlf	??_Lcd_Chr_CP,f
  4515  0194  080E               	movf	14,w	;volatile
  4516  0195  0670               	xorwf	??_Lcd_Chr_CP,w
  4517  0196  39DF               	andlw	-33
  4518  0197  0670               	xorwf	??_Lcd_Chr_CP,w
  4519  0198  008E               	movwf	14	;volatile
  4520  0199                     l1593:
  4521  0199  0872               	movf	Lcd_Chr_CP@data,w
  4522  019A  3901               	andlw	1
  4523  019B  00F0               	movwf	??_Lcd_Chr_CP
  4524  019C  0EF0               	swapf	??_Lcd_Chr_CP,f
  4525  019D  080E               	movf	14,w	;volatile
  4526  019E  0670               	xorwf	??_Lcd_Chr_CP,w
  4527  019F  39EF               	andlw	-17
  4528  01A0  0670               	xorwf	??_Lcd_Chr_CP,w
  4529  01A1  008E               	movwf	14	;volatile
  4530  01A2                     l1595:
  4531                           
  4532                           ;./flex_lcd.h: 145: _delay(10);
  4533  01A2  3003               	movlw	3
  4534  01A3                     u1817:
  4535  01A3  0B89               	decfsz	9,f
  4536  01A4  29A3               	goto	u1817
  4537  01A5  0000               	nop
  4538  01A6                     l1597:
  4539                           
  4540                           ;./flex_lcd.h: 146: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4541  01A6  0140               	movlb	0	; select bank0
  4542  01A7  170D               	bsf	13,6	;volatile
  4543  01A8                     l1599:
  4544  01A8  0000               	nop
  4545  01A9                     l1601:
  4546  01A9  0140               	movlb	0	; select bank0
  4547  01AA  130D               	bcf	13,6	;volatile
  4548  01AB                     l1603:
  4549                           
  4550                           ;./flex_lcd.h: 147: _delay((unsigned long)((5)*(1000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(1000000/4000000.0)));
  4551  01AB  0000               	nop
  4552  01AC                     l1605:
  4553  01AC  30C4               	movlw	196
  4554  01AD                     u1827:
  4555  01AD  3200               	nop2
  4556  01AE  3200               	nop2
  4557  01AF  0B89               	decfsz	9,f
  4558  01B0  29AD               	goto	u1827
  4559  01B1  3200               	nop2
  4560  01B2  0000               	nop
  4561  01B3                     l92:
  4562  01B3  0008               	return
  4563  01B4                     __end_of_Lcd_Chr_CP:
  4564                           
  4565                           	psect	text17
  4566  0F74                     __ptext17:	
  4567 ;; *************** function _Lcd_Init *****************
  4568 ;; Defined at:
  4569 ;;		line 53 in file "./flex_lcd.h"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  data            1    4[COMMON] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4583 ;;      Params:         0       0       0       0       0       0       0       0
  4584 ;;      Locals:         1       0       0       0       0       0       0       0
  4585 ;;      Temps:          1       0       0       0       0       0       0       0
  4586 ;;      Totals:         2       0       0       0       0       0       0       0
  4587 ;;Total ram usage:        2 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    1
  4590 ;; This function calls:
  4591 ;;		_Lcd_Cmd
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _Lcd_Init
  4599  0F74                     _Lcd_Init:
  4600  0F74                     l1619:	
  4601                           ;incstack = 0
  4602                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4603                           
  4604                           
  4605                           ;./flex_lcd.h: 54: unsigned char data;;./flex_lcd.h: 55: TRISCbits.TRISC7 = 0;
  4606  0F74  0140               	movlb	0	; select bank0
  4607  0F75  1394               	bcf	20,7	;volatile
  4608                           
  4609                           ;./flex_lcd.h: 56: TRISCbits.TRISC6 = 0;
  4610  0F76  1314               	bcf	20,6	;volatile
  4611                           
  4612                           ;./flex_lcd.h: 57: TRISCbits.TRISC5 = 0;
  4613  0F77  1294               	bcf	20,5	;volatile
  4614                           
  4615                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  4616  0F78  1214               	bcf	20,4	;volatile
  4617                           
  4618                           ;./flex_lcd.h: 59: TRISBbits.TRISB6 = 0;
  4619  0F79  1313               	bcf	19,6	;volatile
  4620                           
  4621                           ;./flex_lcd.h: 60: TRISBbits.TRISB4 = 0;
  4622  0F7A  1213               	bcf	19,4	;volatile
  4623                           
  4624                           ;./flex_lcd.h: 61: PORTCbits.RC7 = 0;
  4625  0F7B  138E               	bcf	14,7	;volatile
  4626                           
  4627                           ;./flex_lcd.h: 62: PORTCbits.RC6 = 0;
  4628  0F7C  130E               	bcf	14,6	;volatile
  4629                           
  4630                           ;./flex_lcd.h: 63: PORTCbits.RC5 = 0;
  4631  0F7D  128E               	bcf	14,5	;volatile
  4632                           
  4633                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  4634  0F7E  120E               	bcf	14,4	;volatile
  4635                           
  4636                           ;./flex_lcd.h: 65: PORTBbits.RB6 = 0;
  4637  0F7F  130D               	bcf	13,6	;volatile
  4638                           
  4639                           ;./flex_lcd.h: 66: PORTBbits.RB4 = 0;
  4640  0F80  120D               	bcf	13,4	;volatile
  4641  0F81                     l1621:
  4642                           
  4643                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4644  0F81  30C4               	movlw	196
  4645  0F82                     u1837:
  4646  0F82  3200               	nop2
  4647  0F83  3200               	nop2
  4648  0F84  0B89               	decfsz	9,f
  4649  0F85  2F82               	goto	u1837
  4650  0F86  3200               	nop2
  4651  0F87  0000               	nop
  4652                           
  4653                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4654  0F88  30C4               	movlw	196
  4655  0F89                     u1847:
  4656  0F89  3200               	nop2
  4657  0F8A  3200               	nop2
  4658  0F8B  0B89               	decfsz	9,f
  4659  0F8C  2F89               	goto	u1847
  4660  0F8D  3200               	nop2
  4661  0F8E  0000               	nop
  4662                           
  4663                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4664  0F8F  30C4               	movlw	196
  4665  0F90                     u1857:
  4666  0F90  3200               	nop2
  4667  0F91  3200               	nop2
  4668  0F92  0B89               	decfsz	9,f
  4669  0F93  2F90               	goto	u1857
  4670  0F94  3200               	nop2
  4671  0F95  0000               	nop
  4672                           
  4673                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4674  0F96  30C4               	movlw	196
  4675  0F97                     u1867:
  4676  0F97  3200               	nop2
  4677  0F98  3200               	nop2
  4678  0F99  0B89               	decfsz	9,f
  4679  0F9A  2F97               	goto	u1867
  4680  0F9B  3200               	nop2
  4681  0F9C  0000               	nop
  4682                           
  4683                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4684  0F9D  30C4               	movlw	196
  4685  0F9E                     u1877:
  4686  0F9E  3200               	nop2
  4687  0F9F  3200               	nop2
  4688  0FA0  0B89               	decfsz	9,f
  4689  0FA1  2F9E               	goto	u1877
  4690  0FA2  3200               	nop2
  4691  0FA3  0000               	nop
  4692                           
  4693                           ;./flex_lcd.h: 72: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4694  0FA4  30C4               	movlw	196
  4695  0FA5                     u1887:
  4696  0FA5  3200               	nop2
  4697  0FA6  3200               	nop2
  4698  0FA7  0B89               	decfsz	9,f
  4699  0FA8  2FA5               	goto	u1887
  4700  0FA9  3200               	nop2
  4701  0FAA  0000               	nop
  4702  0FAB                     l1623:
  4703                           
  4704                           ;./flex_lcd.h: 73: for(data = 1; data < 4; data ++)
  4705  0FAB  01F4               	clrf	Lcd_Init@data
  4706  0FAC  0AF4               	incf	Lcd_Init@data,f
  4707  0FAD                     l61:
  4708                           
  4709                           ;./flex_lcd.h: 74: {;./flex_lcd.h: 75:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbi
      +                          ts.RC5 = 1; PORTCbits.RC4 = 1; PORTBbits.RB6 = 0;
  4710  0FAD  0140               	movlb	0	; select bank0
  4711  0FAE  138E               	bcf	14,7	;volatile
  4712  0FAF  130E               	bcf	14,6	;volatile
  4713  0FB0  168E               	bsf	14,5	;volatile
  4714  0FB1  160E               	bsf	14,4	;volatile
  4715  0FB2  130D               	bcf	13,6	;volatile
  4716                           
  4717                           ;./flex_lcd.h: 76:     PORTBbits.RB4 = 0; PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbit
      +                          s.RC5 = 1; PORTCbits.RC4 = 1;
  4718  0FB3  120D               	bcf	13,4	;volatile
  4719  0FB4  138E               	bcf	14,7	;volatile
  4720  0FB5  130E               	bcf	14,6	;volatile
  4721  0FB6  168E               	bsf	14,5	;volatile
  4722  0FB7  160E               	bsf	14,4	;volatile
  4723                           
  4724                           ;./flex_lcd.h: 77:     PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  4725  0FB8  170D               	bsf	13,6	;volatile
  4726  0FB9  120D               	bcf	13,4	;volatile
  4727                           
  4728                           ;./flex_lcd.h: 78:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  4729  0FBA  0000               	nop
  4730                           
  4731                           ;./flex_lcd.h: 79:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbit
      +                          s.RC4 = 1; PORTBbits.RB6 = 0;
  4732  0FBB  0140               	movlb	0	; select bank0
  4733  0FBC  138E               	bcf	14,7	;volatile
  4734  0FBD  130E               	bcf	14,6	;volatile
  4735  0FBE  168E               	bsf	14,5	;volatile
  4736  0FBF  160E               	bsf	14,4	;volatile
  4737  0FC0  130D               	bcf	13,6	;volatile
  4738                           
  4739                           ;./flex_lcd.h: 80:     PORTBbits.RB4 = 0;
  4740  0FC1  120D               	bcf	13,4	;volatile
  4741  0FC2                     l1627:
  4742                           
  4743                           ;./flex_lcd.h: 81:     _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4744  0FC2  30C4               	movlw	196
  4745  0FC3                     u1897:
  4746  0FC3  3200               	nop2
  4747  0FC4  3200               	nop2
  4748  0FC5  0B89               	decfsz	9,f
  4749  0FC6  2FC3               	goto	u1897
  4750  0FC7  3200               	nop2
  4751  0FC8  0000               	nop
  4752  0FC9                     l1629:
  4753                           
  4754                           ;./flex_lcd.h: 82: }
  4755  0FC9  3001               	movlw	1
  4756  0FCA  00F3               	movwf	??_Lcd_Init
  4757  0FCB  0873               	movf	??_Lcd_Init,w
  4758  0FCC  07F4               	addwf	Lcd_Init@data,f
  4759  0FCD                     l1631:
  4760  0FCD  3004               	movlw	4
  4761  0FCE  0274               	subwf	Lcd_Init@data,w
  4762  0FCF  1C03               	skipc
  4763  0FD0  2FD2               	goto	u1481
  4764  0FD1  2FD3               	goto	u1480
  4765  0FD2                     u1481:
  4766  0FD2  2FAD               	goto	l61
  4767  0FD3                     u1480:
  4768  0FD3                     l62:
  4769                           
  4770                           ;./flex_lcd.h: 83: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4771  0FD3  0140               	movlb	0	; select bank0
  4772  0FD4  138E               	bcf	14,7	;volatile
  4773  0FD5  130E               	bcf	14,6	;volatile
  4774  0FD6  168E               	bsf	14,5	;volatile
  4775  0FD7  120E               	bcf	14,4	;volatile
  4776  0FD8  130D               	bcf	13,6	;volatile
  4777  0FD9  120D               	bcf	13,4	;volatile
  4778                           
  4779                           ;./flex_lcd.h: 84: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  4780  0FDA  138E               	bcf	14,7	;volatile
  4781  0FDB  130E               	bcf	14,6	;volatile
  4782  0FDC  168E               	bsf	14,5	;volatile
  4783  0FDD  120E               	bcf	14,4	;volatile
  4784  0FDE  170D               	bsf	13,6	;volatile
  4785  0FDF  120D               	bcf	13,4	;volatile
  4786                           
  4787                           ;./flex_lcd.h: 85: _delay((unsigned long)((5)*(1000000/4000000.0)));
  4788  0FE0  0000               	nop
  4789                           
  4790                           ;./flex_lcd.h: 86: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4791  0FE1  0140               	movlb	0	; select bank0
  4792  0FE2  138E               	bcf	14,7	;volatile
  4793  0FE3  130E               	bcf	14,6	;volatile
  4794  0FE4  168E               	bsf	14,5	;volatile
  4795  0FE5  120E               	bcf	14,4	;volatile
  4796  0FE6  130D               	bcf	13,6	;volatile
  4797  0FE7  120D               	bcf	13,4	;volatile
  4798  0FE8                     l1633:
  4799                           
  4800                           ;./flex_lcd.h: 87: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4801  0FE8  30C4               	movlw	196
  4802  0FE9                     u1907:
  4803  0FE9  3200               	nop2
  4804  0FEA  3200               	nop2
  4805  0FEB  0B89               	decfsz	9,f
  4806  0FEC  2FE9               	goto	u1907
  4807  0FED  3200               	nop2
  4808  0FEE  0000               	nop
  4809  0FEF                     l1635:
  4810  0FEF  3028               	movlw	40
  4811  0FF0  3180  208F  318F   	fcall	_Lcd_Cmd
  4812  0FF3                     l1637:
  4813  0FF3  3010               	movlw	16
  4814  0FF4  3180  208F  318F   	fcall	_Lcd_Cmd
  4815  0FF7                     l1639:
  4816  0FF7  3001               	movlw	1
  4817  0FF8  3180  208F  318F   	fcall	_Lcd_Cmd
  4818  0FFB                     l1641:
  4819  0FFB                     l1643:
  4820  0FFB  300F               	movlw	15
  4821  0FFC  3180  208F  318F   	fcall	_Lcd_Cmd
  4822  0FFF                     l63:
  4823  0FFF  0008               	return
  4824  1000                     __end_of_Lcd_Init:
  4825                           
  4826                           	psect	text18
  4827  008F                     __ptext18:	
  4828 ;; *************** function _Lcd_Cmd *****************
  4829 ;; Defined at:
  4830 ;;		line 151 in file "./flex_lcd.h"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  data            1    wreg     unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  data            1    2[COMMON] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4844 ;;      Params:         0       0       0       0       0       0       0       0
  4845 ;;      Locals:         1       0       0       0       0       0       0       0
  4846 ;;      Temps:          2       0       0       0       0       0       0       0
  4847 ;;      Totals:         3       0       0       0       0       0       0       0
  4848 ;;Total ram usage:        3 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_Lcd_Init
  4854 ;;		_Lcd_Out
  4855 ;;		_Lcd_Out2
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _Lcd_Cmd
  4862  008F                     _Lcd_Cmd:
  4863                           
  4864                           ;incstack = 0
  4865                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4866                           ;Lcd_Cmd@data stored from wreg
  4867  008F  00F2               	movwf	Lcd_Cmd@data
  4868  0090                     l1545:
  4869                           
  4870                           ;./flex_lcd.h: 152: PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4871  0090  0140               	movlb	0	; select bank0
  4872  0091  130D               	bcf	13,6	;volatile
  4873  0092  120D               	bcf	13,4	;volatile
  4874  0093                     l1547:
  4875                           
  4876                           ;./flex_lcd.h: 153: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  4877  0093  0872               	movf	Lcd_Cmd@data,w
  4878  0094  00F0               	movwf	??_Lcd_Cmd
  4879  0095  3007               	movlw	7
  4880  0096                     u1355:
  4881  0096  36F0               	lsrf	??_Lcd_Cmd,f
  4882  0097  0B89               	decfsz	9,f
  4883  0098  2896               	goto	u1355
  4884  0099  0870               	movf	??_Lcd_Cmd,w
  4885  009A  3901               	andlw	1
  4886  009B  00F1               	movwf	??_Lcd_Cmd+1
  4887  009C  0CF1               	rrf	??_Lcd_Cmd+1,f
  4888  009D  0CF1               	rrf	??_Lcd_Cmd+1,f
  4889  009E  080E               	movf	14,w	;volatile
  4890  009F  0671               	xorwf	??_Lcd_Cmd+1,w
  4891  00A0  397F               	andlw	-129
  4892  00A1  0671               	xorwf	??_Lcd_Cmd+1,w
  4893  00A2  008E               	movwf	14	;volatile
  4894  00A3  0872               	movf	Lcd_Cmd@data,w
  4895  00A4  00F0               	movwf	??_Lcd_Cmd
  4896  00A5  3006               	movlw	6
  4897  00A6                     u1365:
  4898  00A6  36F0               	lsrf	??_Lcd_Cmd,f
  4899  00A7  0B89               	decfsz	9,f
  4900  00A8  28A6               	goto	u1365
  4901  00A9  0870               	movf	??_Lcd_Cmd,w
  4902  00AA  3901               	andlw	1
  4903  00AB  00F1               	movwf	??_Lcd_Cmd+1
  4904  00AC  0EF1               	swapf	??_Lcd_Cmd+1,f
  4905  00AD  0DF1               	rlf	??_Lcd_Cmd+1,f
  4906  00AE  0DF1               	rlf	??_Lcd_Cmd+1,f
  4907  00AF  080E               	movf	14,w	;volatile
  4908  00B0  0671               	xorwf	??_Lcd_Cmd+1,w
  4909  00B1  39BF               	andlw	-65
  4910  00B2  0671               	xorwf	??_Lcd_Cmd+1,w
  4911  00B3  008E               	movwf	14	;volatile
  4912                           
  4913                           ;./flex_lcd.h: 154: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  4914  00B4  0872               	movf	Lcd_Cmd@data,w
  4915  00B5  00F0               	movwf	??_Lcd_Cmd
  4916  00B6  3005               	movlw	5
  4917  00B7                     u1375:
  4918  00B7  36F0               	lsrf	??_Lcd_Cmd,f
  4919  00B8  0B89               	decfsz	9,f
  4920  00B9  28B7               	goto	u1375
  4921  00BA  0870               	movf	??_Lcd_Cmd,w
  4922  00BB  3901               	andlw	1
  4923  00BC  00F1               	movwf	??_Lcd_Cmd+1
  4924  00BD  0EF1               	swapf	??_Lcd_Cmd+1,f
  4925  00BE  0DF1               	rlf	??_Lcd_Cmd+1,f
  4926  00BF  080E               	movf	14,w	;volatile
  4927  00C0  0671               	xorwf	??_Lcd_Cmd+1,w
  4928  00C1  39DF               	andlw	-33
  4929  00C2  0671               	xorwf	??_Lcd_Cmd+1,w
  4930  00C3  008E               	movwf	14	;volatile
  4931  00C4  0872               	movf	Lcd_Cmd@data,w
  4932  00C5  00F0               	movwf	??_Lcd_Cmd
  4933  00C6  3004               	movlw	4
  4934  00C7                     u1385:
  4935  00C7  36F0               	lsrf	??_Lcd_Cmd,f
  4936  00C8  0B89               	decfsz	9,f
  4937  00C9  28C7               	goto	u1385
  4938  00CA  0870               	movf	??_Lcd_Cmd,w
  4939  00CB  3901               	andlw	1
  4940  00CC  00F1               	movwf	??_Lcd_Cmd+1
  4941  00CD  0EF1               	swapf	??_Lcd_Cmd+1,f
  4942  00CE  080E               	movf	14,w	;volatile
  4943  00CF  0671               	xorwf	??_Lcd_Cmd+1,w
  4944  00D0  39EF               	andlw	-17
  4945  00D1  0671               	xorwf	??_Lcd_Cmd+1,w
  4946  00D2  008E               	movwf	14	;volatile
  4947  00D3                     l1549:
  4948                           
  4949                           ;./flex_lcd.h: 155: _delay(10);
  4950  00D3  3003               	movlw	3
  4951  00D4                     u1917:
  4952  00D4  0B89               	decfsz	9,f
  4953  00D5  28D4               	goto	u1917
  4954  00D6  0000               	nop
  4955  00D7                     l1551:
  4956                           
  4957                           ;./flex_lcd.h: 156: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4958  00D7  0140               	movlb	0	; select bank0
  4959  00D8  170D               	bsf	13,6	;volatile
  4960  00D9                     l1553:
  4961  00D9  0000               	nop
  4962  00DA                     l1555:
  4963  00DA  0140               	movlb	0	; select bank0
  4964  00DB  130D               	bcf	13,6	;volatile
  4965  00DC                     l1557:
  4966                           
  4967                           ;./flex_lcd.h: 157: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  4968  00DC  0872               	movf	Lcd_Cmd@data,w
  4969  00DD  00F0               	movwf	??_Lcd_Cmd
  4970  00DE  3003               	movlw	3
  4971  00DF                     u1395:
  4972  00DF  36F0               	lsrf	??_Lcd_Cmd,f
  4973  00E0  0B89               	decfsz	9,f
  4974  00E1  28DF               	goto	u1395
  4975  00E2  0870               	movf	??_Lcd_Cmd,w
  4976  00E3  3901               	andlw	1
  4977  00E4  00F1               	movwf	??_Lcd_Cmd+1
  4978  00E5  0CF1               	rrf	??_Lcd_Cmd+1,f
  4979  00E6  0CF1               	rrf	??_Lcd_Cmd+1,f
  4980  00E7  080E               	movf	14,w	;volatile
  4981  00E8  0671               	xorwf	??_Lcd_Cmd+1,w
  4982  00E9  397F               	andlw	-129
  4983  00EA  0671               	xorwf	??_Lcd_Cmd+1,w
  4984  00EB  008E               	movwf	14	;volatile
  4985  00EC                     l1559:
  4986  00EC  0872               	movf	Lcd_Cmd@data,w
  4987  00ED  00F0               	movwf	??_Lcd_Cmd
  4988  00EE  3002               	movlw	2
  4989  00EF                     u1405:
  4990  00EF  36F0               	lsrf	??_Lcd_Cmd,f
  4991  00F0  0B89               	decfsz	9,f
  4992  00F1  28EF               	goto	u1405
  4993  00F2  0870               	movf	??_Lcd_Cmd,w
  4994  00F3  3901               	andlw	1
  4995  00F4  00F1               	movwf	??_Lcd_Cmd+1
  4996  00F5  0EF1               	swapf	??_Lcd_Cmd+1,f
  4997  00F6  0DF1               	rlf	??_Lcd_Cmd+1,f
  4998  00F7  0DF1               	rlf	??_Lcd_Cmd+1,f
  4999  00F8  080E               	movf	14,w	;volatile
  5000  00F9  0671               	xorwf	??_Lcd_Cmd+1,w
  5001  00FA  39BF               	andlw	-65
  5002  00FB  0671               	xorwf	??_Lcd_Cmd+1,w
  5003  00FC  008E               	movwf	14	;volatile
  5004  00FD                     l1561:
  5005                           
  5006                           ;./flex_lcd.h: 158: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  5007  00FD  3672               	lsrf	Lcd_Cmd@data,w
  5008  00FE  3901               	andlw	1
  5009  00FF  00F0               	movwf	??_Lcd_Cmd
  5010  0100  0EF0               	swapf	??_Lcd_Cmd,f
  5011  0101  0DF0               	rlf	??_Lcd_Cmd,f
  5012  0102  080E               	movf	14,w	;volatile
  5013  0103  0670               	xorwf	??_Lcd_Cmd,w
  5014  0104  39DF               	andlw	-33
  5015  0105  0670               	xorwf	??_Lcd_Cmd,w
  5016  0106  008E               	movwf	14	;volatile
  5017  0107                     l1563:
  5018  0107  0872               	movf	Lcd_Cmd@data,w
  5019  0108  3901               	andlw	1
  5020  0109  00F0               	movwf	??_Lcd_Cmd
  5021  010A  0EF0               	swapf	??_Lcd_Cmd,f
  5022  010B  080E               	movf	14,w	;volatile
  5023  010C  0670               	xorwf	??_Lcd_Cmd,w
  5024  010D  39EF               	andlw	-17
  5025  010E  0670               	xorwf	??_Lcd_Cmd,w
  5026  010F  008E               	movwf	14	;volatile
  5027  0110                     l1565:
  5028                           
  5029                           ;./flex_lcd.h: 159: _delay(10);
  5030  0110  3003               	movlw	3
  5031  0111                     u1927:
  5032  0111  0B89               	decfsz	9,f
  5033  0112  2911               	goto	u1927
  5034  0113  0000               	nop
  5035  0114                     l1567:
  5036                           
  5037                           ;./flex_lcd.h: 160: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5038  0114  0140               	movlb	0	; select bank0
  5039  0115  170D               	bsf	13,6	;volatile
  5040  0116                     l1569:
  5041  0116  0000               	nop
  5042  0117                     l1571:
  5043  0117  0140               	movlb	0	; select bank0
  5044  0118  130D               	bcf	13,6	;volatile
  5045  0119                     l1573:
  5046                           
  5047                           ;./flex_lcd.h: 161: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5048  0119  30C4               	movlw	196
  5049  011A                     u1937:
  5050  011A  3200               	nop2
  5051  011B  3200               	nop2
  5052  011C  0B89               	decfsz	9,f
  5053  011D  291A               	goto	u1937
  5054  011E  3200               	nop2
  5055  011F  0000               	nop
  5056  0120                     l95:
  5057  0120  0008               	return
  5058  0121                     __end_of_Lcd_Cmd:
  5059  007E                     btemp	set	126	;btemp
  5060  007E                     wtemp0	set	126
  5061                           
  5062                           	psect	config
  5063                           
  5064                           ;Config register CONFIG1 @ 0x8007
  5065                           ;	External Oscillator Mode Selection bits
  5066                           ;	FEXTOSC = OFF, Oscillator not enabled
  5067                           ;	Power-up Default Value for COSC bits
  5068                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  5069                           ;	Clock Out Enable bit
  5070                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5071                           ;	VDD Range Analog Calibration Selection bit
  5072                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  5073  8007                     	org	32775
  5074  8007  3FED               	dw	16365
  5075                           
  5076                           ;Config register CONFIG2 @ 0x8008
  5077                           ;	Master Clear Enable bit
  5078                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  5079                           ;	Power-up Timer Selection bits
  5080                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5081                           ;	WDT Operating Mode bits
  5082                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5083                           ;	Brown-out Reset Enable bits
  5084                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5085                           ;	Brown-out Reset Voltage Selection bit
  5086                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5087                           ;	PPSLOCKED One-Way Set Enable bit
  5088                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  5089                           ;	Stack Overflow/Underflow Reset Enable bit
  5090                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5091  8008                     	org	32776
  5092  8008  3FE7               	dw	16359
  5093                           
  5094                           ;Config register CONFIG4 @ 0x800A
  5095                           ;	Boot Block Size Selection bits
  5096                           ;	BBSIZE = BB512, 512 words boot block size
  5097                           ;	Boot Block Enable bit
  5098                           ;	BBEN = OFF, Boot Block is disabled
  5099                           ;	SAF Enable bit
  5100                           ;	SAFEN = OFF, SAF is disabled
  5101                           ;	Application Block Write Protection bit
  5102                           ;	WRTAPP = OFF, Application Block is not write-protected
  5103                           ;	Boot Block Write Protection bit
  5104                           ;	WRTB = OFF, Boot Block is not write-protected
  5105                           ;	Configuration Registers Write Protection bit
  5106                           ;	WRTC = OFF, Configuration Registers are not write-protected
  5107                           ;	Storage Area Flash (SAF) Write Protection bit
  5108                           ;	WRTSAF = OFF, SAF is not write-protected
  5109                           ;	Low Voltage Programming Enable bit
  5110                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  5111  800A                     	org	32778
  5112  800A  3FFF               	dw	16383
  5113                           
  5114                           ;Config register CONFIG5 @ 0x800B
  5115                           ;	User Program Flash Memory Code Protection bit
  5116                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5117  800B                     	org	32779
  5118  800B  3FFF               	dw	16383

Data Sizes:
    Strings     110
    Constant    0
    Data        0
    BSS         66
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      9      71
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S562_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_13(CODE[8]), STR_12(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10734
                                             74 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
             _PIN_MANAGER_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    7202
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             6     4      2    2205
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     837
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PIN_MANAGER_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      9      47       8       88.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A5      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 25 15:31:59 2021

                             l61 0FAD                               l62 0FD3                               l63 0FFF  
                             l92 01B3                               l76 0F24                               l95 0120  
                             l89 0ED9                               l98 0E44                              l124 07B7  
                            l310 037A                              l309 0369                              l700 0503  
                            l703 0572                              l296 046A                              l297 047B  
                            l731 0038                              l724 0290                              l717 05E5  
                            l750 0F73                              l735 0E23                              l761 0007  
                            l738 0E23                              l691 008E                              l659 0E68  
                            l758 0E90                              l686 0053                              l694 04C5  
                            l767 0E09                              l695 04CF                              l689 0075  
                            l699 04ED                              u910 03B1                              u830 0F2A  
                            u911 03B0                              u831 0F29                              u840 0F2F  
                            u841 0F2E                              u930 03DB                              u850 0F3E  
                            u851 0F3D                              u940 03EB                              u860 0F5B  
                            u941 03EA                              u861 0F5A                              u950 03FE  
                            u870 0E90                              u951 03FD                              u871 0E8F  
                            u960 0428                              u880 0E03                              u961 0427  
                            u865 0F57                              u881 0E02                              u970 0447  
                            u890 0386                              u971 0446                              u891 0385  
                            u980 044C                              u981 044B                              u965 0424  
                            _abs 0E0A                              _pad 0039                              wreg 0009  
                           ?_abs 0073                             l1401 02F6                             l1321 0F34  
                           l1411 0338                             l1403 02FE                             l1323 0F3E  
                           l1315 0F25                             l1331 0E6B                             l1405 0302  
                           l1413 0346                             l1325 0F5B                             l1317 0F2A  
                           l1333 0E6E                             l1341 0DF7                             l1421 0047  
                           l1501 01B6                             l1351 037C                             l1415 034B  
                           l1407 0306                             l1327 0F6B                             l1319 0F2F  
                           l1335 0E7C                             l1343 0DFB                             l1431 0067  
                           l1423 004C                             l1511 01EC                             l1503 01C7  
                           l1601 01A9                             l1361 03D4                             l1353 0386  
                           l1409 0328                             l1441 0E17                             l1337 0E81  
                           l1345 0E03                             l1433 007A                             l1425 0051  
                           l1417 003B                             l1521 0238                             l1513 01FD  
                           l1505 01CF                             l1603 01AB                             l1371 03FA  
                           l1363 03DE                             l1355 03A7                             l1339 0DF2  
                           l1435 0082                             l1427 0056                             l1419 003F  
                           l1451 04CA                             l1443 047E                             l1523 0249  
                           l1531 0262                             l1515 0205                             l1507 01D5  
                           l1611 0012                             l1621 0F81                             l1605 01AC  
                           l1701 0E2A                             l1381 0439                             l1373 03FE  
                           l1365 03EB                             l1357 03B1                             l1349 037B  
                           l1429 0062                             l1461 04FF                             l1453 04DF  
                           l1445 048E                             l1533 026A                             l1525 0251  
                           l1517 021E                             l1509 01DA                             l1613 0026  
                           l1551 00D7                             l1631 0FCD                             l1623 0FAB  
                           l1711 0E36                             l1703 0E2C                             l1375 0406  
                           l1367 03EE                             l1383 0447                             l1359 03D0  
                           l1391 029C                             l1439 0E0A                             l1471 0541  
                           l1463 0507                             l1455 04E5                             l1447 04A1  
                           l1527 025C                             l1615 0030                             l1607 000A  
                           l1561 00FD                             l1553 00D9                             l1545 0090  
                           l1641 0FFB                             l1633 0FE8                             l1713 0E37  
                           l1705 0E2E                             l1385 044C                             l1377 0428  
                           l1369 03F6                             l1393 02BD                             l1481 05A8  
                           l1473 0545                             l1465 050A                             l1457 04F5  
                           l1449 04A7                             l1537 026D                             l1609 000E  
                           l1721 0E53                             l1801 078D                             l1571 0117  
                           l1563 0107                             l1555 00DA                             l1547 0093  
                           l1643 0FFB                             l1635 0FEF                             l1627 0FC2  
                           l1619 0F74                             l1651 0EE8                             l1707 0E30  
                           l1379 0438                             l1395 02C7                             l1387 0291  
                           l1491 05C2                             l1475 0580                             l1483 05AD  
                           l1467 050F                             l1459 04FB                             l1539 0286  
                           l1723 0E60                             l1715 0E47                             l1811 07BD  
                           l1803 07A2                             l1731 05F2                             l1573 0119  
                           l1565 0110                             l1557 00DC                             l1549 00D3  
                           l1637 0FF3                             l1629 0FC9                             l1581 0169  
                           l1661 0F0F                             l1653 0EEE                             l1645 0EDB  
                           l1709 0E31                             l1397 02E6                             l1389 0292  
                           l1493 05C7                             l1485 05B4                             l1477 058D  
                           l1469 053D                             l1717 0E4F                             l1813 07C2  
                           l1805 07AA                             l1741 0615                             l1733 05FF  
                           l1567 0114                             l1559 00EC                             l1639 0FF7  
                           l1591 018F                             l1583 016B                             l1575 0122  
                           l1663 0F17                             l1647 0EDC                             l1671 0E92  
                           l1399 02F3                             l1495 05CB                             l1487 05B8  
                           l1479 059A                             l1719 0E51                             l1815 07C6  
                           l1807 07AF                             l1751 065D                             l1743 0621  
                           l1735 0604                             l1727 05E6                             l1569 0116  
                           l1593 0199                             l1585 016C                             l1577 0125  
                           l1665 0F1B                             l1649 0EE2                             l1657 0EF4  
                           l1673 0E93                             l1489 05BC                             l1497 05D3  
                           l1817 07D3                             l1809 07B9                             l1761 069F  
                           l1753 0665                             l1745 063B                             l1737 060C  
                           l1729 05E9                             l1595 01A2                             l1587 016E  
                           l1579 0165                             l1659 0F0A                             l1691 0ED1  
                           l1675 0E99                             l1683 0EAB                             l1819 07E0  
                           l1771 06D4                             l1763 06A7                             l1755 067A  
                           l1747 0640                             l1739 0611                             l1597 01A6  
                           l1589 017E                             l1861 0EB3                             l1677 0E9F  
                           l1685 0EC1                             l1781 0716                             l1773 06E9  
                           l1765 06AF                             l1757 0682                             l1749 0655  
                           l1599 01A8                             l1863 0EFC                             l1687 0EC6  
                           l1679 0EA5                             l1791 0758                             l1783 071E  
                           l1775 06F1                             l1767 06C4                             l1759 068A  
                           l1689 0ECD                             l1697 0E24                             l1793 0760  
                           l1785 0733                             l1777 06F9                             l1769 06CC  
                           l1699 0E28                             l1795 0768                             l1787 073B  
                           l1779 070E                             l1797 077D                             l1789 0743  
                           ?_pad 0024                             l1799 0785                             STR_1 0800  
                           STR_2 0826                             STR_3 082E                             STR_4 0836  
                           STR_5 083E                             STR_6 0846                             STR_7 084E  
                           STR_8 0856                             STR_9 085E                             u1000 029C  
                           u1001 029B                             u1020 02C7                             u1100 003F  
                           u1021 02C6                             u1101 003E                             u1110 004C  
                           u1111 004B                             u1040 02F3                             u1120 0075  
                           u1200 04DF                             u1041 02F2                             u1121 0074  
                           u1201 04DE                             u1050 0306                             u1130 007A  
                           u1210 04FB                             u1051 0305                             u1131 0079  
                           u1211 04FA                             u1060 0328                             u1140 0E17  
                           u1300 05C2                             u1220 04FF                             _CONT 00CA  
                           u1061 0327                             u1141 0E16                             u1125 0071  
                           u1301 05C1                             u1221 04FE                             u1205 04DB  
                           u1070 0346                             u1230 0580                             u1150 0499  
                           u1310 01C7                             u1071 0345                             u1231 057F  
                           u1151 0497                             u1311 01C6                             u1080 034B  
                           u1240 058D                             u1160 049A                             u1320 01EC  
                           u1081 034A                             u1065 0324                             u1145 0E13  
                           u1241 058C                             u1321 01EB                             u1250 059A  
                           u1170 04A7                             u1330 01FD                             u1251 0599  
                           u1235 057C                             u1171 04A6                             u1331 01FC  
                           u1500 0ED9                             u1260 05A8                             u1340 0249  
                           u1405 00EF                             u1501 0ED8                             u1261 05A7  
                           u1341 0248                             _LATA 0018                             u1270 05AD  
                           u1190 04CA                             u1510 0604                             _LATB 0019  
                           u1415 0128                             u1271 05AC                             u1255 0596  
                           u1191 04C9                             u1511 0603                             _LATC 001A  
                           u1280 05B4                             u1600 0743                             u1520 0611  
                           u1425 0138                             u1281 05B3                             u1265 05A4  
                           u1601 0742                             u1521 0610                             u1290 05B8  
                           u1610 0768                             u1530 0640                             u1355 0096  
                           u1435 0149                             u1291 05B7                             u1611 0767  
                           u1531 063F                             u1620 078D                             u1540 0665  
                           u1365 00A6                             u1445 0159                             u1621 078C  
                           u1541 0664                             u1470 0030                             u1630 07AF  
                           u1550 068A                             u1375 00B7                             u1455 0171  
                           u1471 002F                             u1631 07AE                             u1551 0689  
                           u1480 0FD3                             u1640 07BD                             u1560 06AF  
                           u1385 00C7                             u1481 0FD2                             u1465 0181  
                           u1641 07BC                             u1561 06AE                             u1490 0F24  
                           u1570 06D4                             u1395 00DF                             u1491 0F23  
                           u1571 06D3                             u1707 06A3                             u1580 06F9  
                           u1581 06F8                             u1717 06C8                             u1590 071E  
                           u1807 0166                             u1591 071D                             u1727 06ED  
                           u1817 01A3                             u1737 0712                             u1657 05F8  
                           u1907 0FE9                             u1827 01AD                             u1747 0737  
                           u1667 0608                             u1917 00D4                             u1837 0F82  
                           u1757 075C                             u1677 0634                             u1927 0111  
                           u1847 0F89                             u1767 0781                             u1687 0659  
                           u1937 011A                             u1857 0F90                             u1777 07A6  
                           u1697 067E                             u1867 0F97                             u1787 07B3  
                           u1877 0F9E                             u1797 07E6                             u1887 0FA5  
                           u1897 0FC3                             _WPUC 1F4F                             abs@a 0073  
                           _dbuf 00AA                             _paca 00A8                             _main 05E6  
                           _dtoa 047C                             _prec 00A4                             _nout 00A0  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             start 0002                  __end_of_Lcd_Cmd 0121  
                __end_of_Lcd_Out 0F25                       _Lcd_Chr_CP 0121                            ??_abs 0075  
                          ??_pad 007C                   Lcd_Out2@buffer 0074                  __end_of___aodiv 047C  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 037B  
                          STR_10 0866                            STR_11 0815                            STR_12 080B  
                          STR_13 081E                     vfpfcnvrt@fmt 004E                            _TRISA 0012  
                          _TRISB 0013                            _TRISC 0014                            u90lld 03A5  
                          u92lld 03D0                            u99lld 046A                            _flags 006C  
                          _fputc 0F25                            _fputs 0E69                            pad@fp 002B  
                          _width 00A2                            _putch 0007                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 0E69                 __end_of_Lcd_Init 1000  
               __end_of_Lcd_Out2 0EDA                  __initialization 07F0                     __end_of_main 07F0  
                   __end_of_dtoa 05E6                           ??_main 006A                           ??_dtoa 0038  
                         ?_fputc 0070                           ?_fputs 0078                           _ANSELA 1F38  
                         ?_putch 0070                           _ANSELB 1F43                           _ANSELC 1F4E  
                         _ODCONA 1F3A                           _ODCONB 1F45                           _ODCONC 1F50  
                         _INLVLA 1F3C                           _INLVLB 1F47                           _INLVLC 1F52  
                         u101lld 02BB                           u103lld 02E6                           u109lld 0369  
                      ??_Lcd_Cmd 0070                           u118lld 04C5                        ??_Lcd_Out 0076  
                   vfprintf@cfmt 0064                      ?_Lcd_Chr_CP 0070                        ??___aodiv 0070  
                      ??___aomod 0070                           pad@buf 0024                           dtoa@fp 003D  
                         _strlen 0DF1                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023                           putch@c 0070  
               __end_of_vfprintf 0039                        ??_sprintf 007D          __end_of__initialization 07FD  
                 __pcstackCOMMON 0070                    __end_of_fputc 0F74                    __end_of_fputs 0E91  
                  __end_of_putch 0008                        ?_Lcd_Init 0070                        ?_Lcd_Out2 0073  
                        ??_fputc 0073                          ??_fputs 0079              __size_of_Lcd_Chr_CP 0093  
                        ??_putch 0070                       __pbssBANK0 006C                       __pbssBANK1 00A0  
                     __pmaintext 05E6                          ?_strlen 0070               __size_of_vfpfcnvrt 00DD  
                     ??_Lcd_Init 0073                       ??_Lcd_Out2 0075                          _SLRCONA 1F3B  
                        _SLRCONB 1F46                          _SLRCONC 1F51                          _Lcd_Cmd 008F  
                        _Lcd_Out 0EDA                          ___aodiv 037B                          ___aomod 0291  
                      ?_vfprintf 005E                          __ptext1 0E45                          __ptext2 0008  
                        __ptext3 01B4                          __ptext4 047C                          __ptext5 0039  
                        __ptext6 0DF1                          __ptext7 0E69                          __ptext8 0F25  
                        __ptext9 0007                  __size_of_strlen 0019                     __size_of_abs 001A  
                   __size_of_pad 0056         ??_PIN_MANAGER_Initialize 0070                          _sprintf 0E45  
                        clrloop0 0DEC             end_of_initialization 07FD                          fputc@fp 0072  
                        fputs@fp 0078                __end_of_vfpfcnvrt 0291                     ??_Lcd_Chr_CP 0070  
                      Lcd_Out2@x 0073                        Lcd_Out2@y 0077                       ??_vfprintf 0061  
                        strlen@a 0073                          strlen@s 0074                        _PORTAbits 000C  
                      _PORTBbits 000D                        _PORTCbits 000E                        _TRISBbits 0013  
                      _TRISCbits 0014               __end_of_Lcd_Chr_CP 01B4                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 005D                      vfpfcnvrt@ll 0055                   __end_of_strlen 0E0A  
            start_initialization 07F0  __size_of_PIN_MANAGER_Initialize 0021                      __end_of_abs 0E24  
                    __end_of_pad 008F                    Lcd_Out@buffer 0074                __size_of_Lcd_Init 008C  
              __size_of_Lcd_Out2 0049                      vfprintf@fmt 005E                         ??_strlen 0072  
                      ___latbits 0001                    __pcstackBANK0 0020                    __pcstackBANK1 00DE  
               ___aodiv@dividend 0028                         ?_Lcd_Cmd 0070                         ?_Lcd_Out 0073  
         _PIN_MANAGER_Initialize 0E24                         ?___aodiv 0020                         ?___aomod 0020  
               ___aodiv@quotient 0073                __size_of_vfprintf 0031                         ?_sprintf 0066  
                 __size_of_fputc 004F                   __size_of_fputs 0028                   __size_of_putch 0001  
                       _LATAbits 0018                        clear_ram0 0DEB                         Lcd_Out@x 0073  
                       Lcd_Out@y 0078                        _vfpfcnvrt 01B4                     Lcd_Init@data 0074  
                   Lcd_Out2@data 0078                         _Lcd_Init 0F74                         _Lcd_Out2 0E91  
               __size_of_Lcd_Cmd 0092                 __size_of_Lcd_Out 004B                       vfprintf@ap 0060  
                     vfprintf@fp 0063                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
                     ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020                  ___aodiv@counter 0071  
                     sprintf@fmt 0066                   Lcd_Chr_CP@data 0072                         _dtoa$635 003B  
                       __ptext10 0E0A                         __ptext11 0291                         __ptext12 037B  
                       __ptext13 0E24                         __ptext14 0E91                         __ptext15 0EDA  
                       __ptext16 0121                         __ptext17 0F74                         __ptext18 008F  
                       _contador 006E                 __size_of_sprintf 0024                      Lcd_Cmd@data 0072  
                  __size_of_main 020A                    __size_of_dtoa 016A                         _pulsador 00A6  
                       _vfprintf 0008                 ___aomod@dividend 0028                      Lcd_Out@data 0079  
                 __pstringtext10 084E                   __pstringtext11 0856                   __pstringtext12 085E  
                 __pstringtext13 0866                   __pstringtext14 0000                        sprintf@ap 00E0  
        ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                    __pstringtext1 0800                    __pstringtext2 080B  
                  __pstringtext3 0815                    __pstringtext4 081E                    __pstringtext5 0826  
                  __pstringtext6 082E                    __pstringtext7 0836                    __pstringtext8 083E  
                  __pstringtext9 0846                         sprintf@f 00E2                         sprintf@s 00E1  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0E45                     ___aomod@sign 0072  
